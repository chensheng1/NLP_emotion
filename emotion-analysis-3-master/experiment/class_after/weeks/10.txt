本次计算机导论学习了软件开发等方面，是在现实生活中，应用比较广泛的方面，是当今社会的计算机的主流，当下计算机的发展也是围绕此展开，所以对这部分的学习与巩固是必要的。本次的题目相对来说并不算太难，认真学习后即可作答。
这一次的课后作业难度比较大，而且题目数量比较多，是关于软件、物联网、云计算以及信息熵等的题目，在书本上无法非常直观快速地找到答案，需要对这些知识有一定程度的认知和了解，在平时的积累上多花功夫，尽力学好。
本次课后作业难度略微有些大，有的在书本中不能获取到，需要在百度上查才能做题，这次作业也涉及到了之前的内容，对之前的算是一个回顾，主要包括信息熵，当然也有现在学的，软件还是考察比较多的，还有云计算，物联网
这一次导论的课后作业是有关于信息熵的计算，计算机软件，云计算，物联网的相关知识，内容较为多，题目的难度还是较大的，不能直接从书上去获取，需要查阅相关资料才能做出题目来，我觉得我对于这些方面的掌握程度还是较为一般的。
这次计算机导论的题目是有关于感知、软件、云计算、物联网、信息熵的知识点。难度比之前一周的题目大一些，有些东西是在网上查到的，在书上没有找到，而且脑海中没有印象。软件架构出了好几道题目，感觉这个知识点比较重要。
本次题目难度较大，做起来很吃力。但是没有翻书去找，等到出来答案时候在去找书，就当做检测自己的一次机会。虽然对不了几个，但可以借此机会鞭策自己。找到自己的不足，以后才可以更好的学习。不会因为太多的不会而气馁，心态放平
在本次的作业完成中，我复习了计算机导论这几章的知识，也对实验的内容也有了进一步了解，例如dos命令，dos的基本文件。软件的知识，软件按功能可分为系统软件和应用软件，信息熵的计算，和对软件的基本架构。
这次题目既有以前的知识又有新学的知识，相比上次课后作业来说题目较难一点，这次的题目概念性的问题较多，考察的比较系。同时也有理解性的问题，不是一眼就能看出答案那种。软件架构方面是我们本周刚刚学的，接触时肯定有熟悉处也有陌生处。而之前的就比较熟悉了。
本次作业知识点比较全面，所涉及的范围比较大，量比较多，题目难度比较大，但是题目的答案在书本中都可以找到，这次题目涉及软件，软件构架，操作系统以及linux系统，考点比较细。还考察了信息熵的计算方法等。
这次的作业包括了以前所学的知识，知识点比较琐碎，但总体来说都是重点。因此，做好相关的复习工作非常重要，并且这样也可以帮助自己查漏补缺，实现知识点的深刻记忆和掌握。这次的作业主要涉及以下几点： 1.信息熵的计算公式和信息熵表示的含义； 2.云计算的相关知识点，大部分都是上课时强调过的； 3.计算机体系结构及其组成； 4.软件相关知识点和软件工程的知识； 这就是本次作业所涉及的内容，我们一定要做好相关复习工作！
通过本次题目我进一步认识了解了软件、软件架构和操作系统等概念。软件是用户与硬件之间的接口，而操作系统是属于系统软件的一部分，用来控制和管理计算机系统资源。操作系统多种多样，包括DOS、Windows、UNIX等各种操作系统。
软件工程是研究如何系统性的、规范化的、可定量的过程化方法去开发和维护软件，以及如何把经过时间考验而被证明是正确的管理技术和当前能够得到的最好的软件开发与维护方法结合起来的学科。软件架构描述的对象是直接构成系统的抽象组成。
在软件中最重要的应该是操作系统，它是每个人都能使用计算机成为可能。软件工程设计，以后从事软件开发必须学习的知识。用户界面和用户体验，在软件开发中的作用日益凸显。用户界面和用户体验是软件设计必须考虑的问题。
这次的作业对前面所学的内容做了一点复习，同时也巩固了在这周开始学的第三章关于软件的内容，通过这次作业，对之前的内容有了很好的复习，在学习了第三章之后，对与我们生活息息相关的软件有了更深理解，希望以后学的更好。
第一题，软件架构是虚拟的。第二题，软件架构不全取决于架构师。第三题，资源管理器不是支撑软件。第四题，传感器是实际存在的。第五题，软件按功能分类可分为系统软件和应用软件。第六题，程序有结构。第八题，config.sys不是dos的三个基本文件之一。
还要多复习，之前的都忘了。。。。加油。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。你能行。。。。。。。。。。。。。。。。。。。。。。。。。。。。。
本次作业关于软件的分类，架构和系统，还有软件的开发。软件工程是计算机学科中的分支，电脑系统，手机系统都是软件工程的重要内容。本次题目内容基础，看完书基本了解后就能选出来，自己对于软件这方面的知识了解比较薄弱，希望能够提高。
本次我在课下学习了有关计算机架构和软件开发的有关内容了解了软件的分层，操作系统和软件开发过程的有关内容，感觉本次的学习内容较多，学习时不好理解，导致学习这一节时效率低，题目不会做，还要多看书，好好钻研。
我感觉这次的题目更偏向课本，全都是从课本上找出的知识点。相比于之前的题应该要容易多了，但是这次题是简单了，可知识点依旧不太好理解。有些知识点，我感觉还有些懵懂，不明白。希望可以在下次课上听明白，大概就是这样
就成立了由宾夕法尼亚大学的莫奇利和埃克特领导的研究小组。经过几年紧张的工作这个研究小组研制的ENIAC 终于在1946年问世。这是人类历史上第一台被真正应用于实践的电子计算机，也标志着第一代计算机的出现。第一代电子计算机是从1946年到1957年，它的基本电子元件是电子管，内存储器采用水银延迟
一般来讲软件被划分为系统软件、应用软件和介于这两者之间的中间件。软件并不只是包括可以在计算机（这里的计算机是指广义的计算机）上运行的电脑程序，与这些电脑程序相关的文档一般也被认为是软件的一部分。简单的说软件就是程序加文档的集合体。
本节是对软件开发及软件构架分类的一个总体的介绍，通过本节的学习，了解到了pc机和只能手机的各种操作系统，并且对软件构架及分层的定义和意义有了一定的认识。软件工程这个学科是我们计算机科学的一个分支，它涉及程序设计、数据库、软件开发工具、系统平台、标准及设计模式等方面。
1.11111111111111e+137
本次作业难度较大，主要是题量较大，同时考察了对以前知识的复习，比如信息熵的计算和软件的分类以及dos系统，应用软件，操作系统等相关知识，还考察了软件的架构等。在查阅书籍和相关资料后能够基本完成，继续加油吧。
在软件中，最重要的是操作系统，它使每个人都能使用计算机成为可能。本章介绍了Windows,UNIX,和Linux三种操作系统，以及当前智能手机的主流操作系统。软件工程是今后从事软件开发必须学习的知识。只有做好软件工程过程中的每一步，才能降低软件的维护和开发成本。
通过本节课后作业的完成，我了解关于软件的定义内容，关于软件的分类方式以及具体的分类内容，还了解到了软件架构的定义以及分层，还学习到了关于操作系统的种类以及具体形式和作用功能。本周学习对我的认识有很大的帮助作用。
这次的题目还是挺难的，并不简单，涉及到的内容比较多，还有对，之前知识的复习，还是有点遗忘，知识掌握的还行，还是要多看书，不然会忘记，导论这门课总体还是简单的，要多复习，总结，把看到的知识记住，认真学。
常见的软件生命周期模型 瀑布模型 有时也称为V模型，它是一种线型顺序模型，是项目自始至终按照一定顺序的步骤从需求分析进展到系统测试直到提交用户使用，它提供了一种结构化的、自顶向下的软件开发方法，每阶段主要工作成果从一个阶段传递到下一个阶段，必须经过严格的评审或测试，以判定是否可以开始下一阶段工作，各阶段相互独立、不重叠。瀑布模型是所有软件生命周期模型的基础。
操作系统是用户和计算机的接口，同时也是计算机硬件和其他软件的接口。操作系统的功能包括管理计算机系统的硬件、软件及数据资源，控制程序运行，改善人机界面，为其它应用软件提供支持，让计算机系统所有资源最大限度地发挥作用，提供各种形式的用户界面，使用户有一个好的工作环境，为其它软件的开发提供必要的服务和相应的接口等。实际上，用户是不用接触操作系统的，操作系统管理着计算机硬件资源，同时按照应用程序的资源请求，分配资源，如：划分CPU时间，内存空间的开辟，调用打印机等。
这一次计算机导论的课后题目十分的综合，有关于前两章的知识，比如说信息熵的计算以及计算机的体系结构。还有很多关于软件和操作系统的知识。难度适中，正好能够做到让人重新记忆的程度。我对于这些知识已经基本掌握。
设计软件架构是软件开发的重要的环节，它应该为变化而设计，具有灵活性，可扩充性以及可植性。软件架构的分层可以实现有效的分而治之，一般可分为四层，但是具体的层数与组成取决与问题领域和解决空间的复杂程度，同时还要依据分层标准的规则来分。
本次题目主要是对第三章的于软件有关的知识，主要涉及软件的分类和软件的架构的内容，软件的架构是一个系统的草图，分层的数量与组成取决于问题领域和解决空间的复杂程度，同时还有操作系统方面的知识。本次涉及的题目难度并不是很难。
通过这次作业，我对计算机知识有了进一步的认识。知道了软件架构的相关知识，也知道了按软件的功能可将软件分为系统软件和应用软件。也复习了信息熵的计算公式以及各种进制间的转化。还知道了传感器得感知是实际的不是虚拟的。
感觉这次的题目比上次简单。 一般。 不难。б(*｀・´)∂б(*｀・´)∂б(*｀・´)∂ɢᵒᵒᵈ ɴⁱᵍʰᵗ✧*̣̩⋆̩☽⋆ɢᵒᵒᵈ ɴⁱᵍʰᵗ✧*̣̩⋆̩☽⋆ɢᵒᵒᵈ ɴⁱᵍʰᵗ✧*̣̩⋆̩☽⋆ヾ(*・-・)ﾂθ
本次课后作业内容涉及信息熵、软件的分类、软件的架构和操作系统。计算机软件作为一种特殊的产品，其研制和开发过程有着严格的规范和要求，软件架构设计是软件开发的重要一环，且在软件中，最重要的是操作系统，它使每个人都能使用计算机成为可能。
通过本次课后作业，我巩固了第三章所学知识点，已经略微复习了一下第一章。对于系统软件与支撑软件还是有的分不清。软件架构是抽象模型而不是实际组件，分层将功能进行了有序的分组。做本次题目有点吃力，对于前面所学知识有点模糊。
这一次的作业对软件的许多知识进行了复习，对之前学到的物联网、云计算、信息熵等知识也有涉及的题目。题目着重考察了关于软件分类、软件架构的知识，难度较以前的题目来说偏高，需要对知识有比较深的理解。对以前的知识也要有相应的记忆。
对已学的知识还是不能准确的记住与理解，希望老师能再多加讲解，我也会在课下多多自学，复习，尽力把知识点，相关信息，必备技能完全掌握，。相信在未来绝对会贯通这门学科。还需多加努力，也要与其他学科，相辅相成。General
我感觉这次的题目更偏向课本，全都是从课本上找出的知识点。相比于之前的题应该要容易多了，但是这次题是简单了，可知识点依旧不太好理解。有些知识点，我感觉还有些懵懂，不明白。希望可以在课上听明白⊙ω⊙ ，就是这样
本次课程主要学习了软件以及软件的架构还有程序，难度较大，不易理解，但是通过课后的复习查阅资料总算还是有所了解。我觉着对于计算计导论这门课重点不在于老师上课而在于学生在课下的不断理解掌握以及上机实验等等。
此次题目涉及到了软件以及系统等方面的内容。系统软件可以分为操作软件和支撑软件，其中操作软件是所有软件运行的基础。支撑软件包括一系列基本工具。软件架构是一个系统的草图，软件架构描述的对象是直接构成系统的抽象组件。这些内容知识是比较重要 比较核心的，还需进一步的理解深化。
感觉之前的知识忘了不少，快要期末考试了我要抓紧时间复习了，时间不能浪费在磨叽，淘宝和追剧上，要提高效率，拒绝拖延，努力学习，想想要是考的好，回家一定轻松愉快，又是一个愉快的寒假，所以啊，好好努力，争取过年回家过个好年，千万不能挂科呀
本次的课后习题主要考察了有关软件自己计算机操作系统的内容，但同时有几题也复习了前面所学的知识。在这些题目中主要考差了软件的的分类，软件的定义，以及软件架构和分层，让我对上课时老师讲的内容有一个复习，让自己知道哪里还在不懂，自己对这些知识的复习，通过这些习题我温习了重点，以及前面学习的信息熵的知识。
这次课后作业有十道题，做完大概花费了一二十分钟，觉的自己的速度还是太慢，做题过程中还要经常在书上寻找不会的内容，不过也有自己一看就能选出来的。作业中的题主要设计了软件的相关内容，还有一题是信息熵，这几次一直有信息熵的题目，说明信息熵还是很重要的。另外做题时也会有不会的，例如题中有问centos是不是操作系统，可是没有学过，只能在网上搜搜，不过还是找到了。
通过这次的学习，我知道了软件架构是有关软件整体结构和组件的抽象模式。软件架构是一个系统的草图，他是为了变化而设计。DOS的三种基本命令是.sys.com.bat 系统的分层标准包含的准则是 可见度 易变性，通用性，层数。
软件按照功能分可分为系统软件和应用软件。软件构架是有关软件整体结构与组件的抽象模式，用于指导大型软件系统的抽样组件。操作系统是应用程序与计算机硬件的＇中间人＇本次题目较难，有些我并不懂得。希望可以学到更多的知识。
本次试题相比于上次比较难，考察了信息熵，软件等相关知识。感觉对本次试题做的情况不是很满意，有很多题掌握的不好，说明本周上课状态不好，没有认真听讲，打算本周抽时间把上次课的课本知识补上。下周上课一定不能出现这样的情况。
我学到了按软件的功能可以将软件分为系统软件和应用软件；关于信息熵的知识以及各种信息；DOS有三个基本文件； 软件架构是一个系统的草图；软件架构是有关软件整体结构与组件的抽象模式；软件架构对于一个程序来说十分重要。
这一节课中我学到了信息概率方面的计算，，，，和软件的分类，定义，体系结构，云计算，物联网以及虚拟的概念等等。。。。其中，最重要的是软件的学习，软件分为系统软件和应用软件，系统软件又分为操作系统软件和支撑软件
计算机因软件系统的诞生而获得了更多功能和更广泛的应用，它的运行也因此更加有条理和高效率。而各种各样的操作系统则竭尽所能使用户满意，由此形成的良性竞争使得消费者更加受益。操作系统的出现无疑是划时代的事件。
本次作业涉及方面广，涉及知识深，考察学生近期的学习情况，起到了良好的复习作用，亦是给学生一个自我检查的机会。完成作业后，我总结出了自己的不足：对DOS操作系统不熟，对软件方面的知识还不够了解。今后还仍需努力。
软件的相关内容十分详尽，有软件的定义、分类、架构、开发、行业职业简介和操作系统六个内容。记忆的概念点比较多，理论内容也比较繁琐，需要认真整理归纳才能更好地掌握这章内容。这次题目数量稍多，不过困难指数不高，做起来还是比较容易的。
本次课程，我们学习了软件的相关知识，软件有多种分类方式，有些软件的规模真的是特别的巨大，一己之见难以完成，凸现了团队合作的重要性，同时也需要软件架构在宏观上起引导作用，软件工程将会是我们未来大多数人的选择，因此重要性不言而喻
物联网的核心和基础是互联网，物联网的三个特征：全面感知、可靠传递和智能处理。软件按工作方式可分为实时处理软件、分时软件和批处理软件。实时处理软件包括数据采集、数据分析和数据输出。分时软件允许多个用户使用同一台计算机，允许多个程序分时共享硬件和软件资源，或者允许多个联机用户使用计算机的软件。
这次的课后作业有点不寻常啊，十个题不说，还有很多不是软件这块的，是之前的内容，然而做完却很能体现问题，我之前的知识好多都忘了。感觉知识很多，很乱，记不住，记不清。幸亏没有期末考试，没书我就GG和凉凉了。
本次题目考察的是走进软件关于软件定义，分类，软件架构和操作系统的介绍，其中软件架构那部分有点难，不知道软件架构到底是什么东西，还有操作系统到底包括哪些，这些都不太懂，关于软件职业简介方面其实也可以出点题
1.11111111111111e+101
对软件的分类有了一定的了解，巩固了之前所学知识，对计算机的运行过程有了一定的掌握，让我对计算机基本知识有了更深了解，计算机学习不仅有知识的积累，还有实践的操作，我会更加努力学习后面的知识，对计算机的学习还要更进一步。
在本次课堂，我学习了有关于软件更加深入的知识，了解了软件的分类和两类软件相不同和各类的作用，而且还对软件的架构等一系列和软件相关的知识，还专门的对一些操作系统，例如Windows，UNIX一些出色的操作系统进行了解。
通过这次的学习，我学习到了软件的具体分类以及如何通过对软件的操作对计算机硬件进行调控以及对硬件资源进行合理的调配。了解到了软件的工作方式和软件的基本架构。软件在不同的情况下所起到的不同的作用以及原理。
内容好多好多，真心感觉到我的脑容量记不住这么多东西，但这些有时实用的，必要的知识点。嗯，我一定要赶快记住这些知识，那些大佬即使在没上这门课的时候，就已经了解并能运用这些东西了，所以可见这些内容要掌握的必要性，加油，默默学习知识点。
软件架构是指在一定的设计原则基础上，从不同角度对组成系统的各部分进行搭配和安排，形成系统的多个结构而组成架构，它包括该系统的各个组件，组件的外部可见属性及组件之间的相互关系。组件的外部可见属性是指其他组件对该组件所做的假设。
本次课后作业主要是针对软件结构以及前面几周学习的内容，这种内容混杂对于我们还是有一点的难度，因为都要从之前的只是脑海里搜索这些知识。但对于我们对这些知识融会贯通也是很有意义的，相信这些问题能加深我对所学知识的印象
①支撑软件包括一系列基本工具，以及数据库管理、外部存储器格式化、文件系统管理、用户身份验证、设备驱动程序管理、网络连接等方面的工具和程序设计的集成开发环境，它主要包括环境数据库、各种接口软件和工具组。②DOS的三个基本文件是IO.SYS,COMMAND.COM,MSDOS.SYS。③软件分层取决于问题领域和解决空间的复杂程度。④软件架构是一个系统的草图。
这一次的作业帮助我发现了一些细节上的问题，比如关于系统软件中的支撑软件包括什么，软件架构的分层，还有DOS的核心程序等甚至连LINUX的发行版本也有涉及到。这也提醒了我学习时要关注细节，多记忆，多做笔记，多总结。
本节我们学习了软件的相关知识，学习了系统软件和支撑软件，了解了一些系统平台，例如centos windows macos等，除此以外还了解了软件的架构，了解了计算机行业的职业架构师，知道了一条新的发展道路。
本次题目的数量和内容都比之前有所增加，结合了多个单元的知识点，跨度广，但题目的难度并不大，多数都是之前类似的题目，在课本上也都可以找到相关的内容，总体来说还是简单的，涉及虽多，只要按部就班复习就行了。
我感觉这次课后题有点难，支撑软件和关于软件说法错误的两个题不太会做，看课本后还是对应不上题目，可能是自己对于这个地方理解的不透彻。其他题目还比较简单，有几个题涉及了以前学的信息熵、计算机结构体系等知识点。
本次课后习题主要针对软件的相关知识，首先是关于计算机软件的分类，根据不同的分类方式将软件分成不同的种类，如按功能分类将软件分为了系统软件和应用软件。另外就是关于软件系统架构的相关知识，这让我对软件架构有了一个较为清楚的认识。
我软件（中国大陆及香港用语，台湾称作软体，英文：Software）是一系列按照特定顺序组织的计算机数据和指令的集合。一般来讲软件被划分为系统软件、应用软件和介于这两者之间的中间件。软件并不只是包括可以在计算机（这里的计算机是指广义的计算机）上运行的电脑程序，与这些电脑程序相关的文档一般也被认为是软件的一部分。简单的说软件就是程序加文档的集合体。另也泛指社会结构中的管理系统、思想意识形态、思想政治觉悟、法律法规等等。
本次题目主要涉及了软件架构及分层的基本定义，和必要条件和关键影响因素以及操作系统软件的实际例子，还有软件根据不同分类方式所有的类型，算是软件方面知识入门一次不错的检验，题目难度适中，只要认真看了书，就能够基本掌握。
软件按功能可以分为系统软件和应用软件。软件的架构设计是软件开发中至关重要的一环，必须为变化而设计。计算机的操作系统为我们使用计算机带来了方便，dos系统的核心程序又包括MSDOS.SYS,IO.SYS,COMMAND.COM。
我懂得了中文名MSDOS.SYS1作用2配置参数3MSDOS.SYS设置大全optionsMSDOS.SYS作用编辑MSDOS.SYS是DOS的三个核心文件之一，另外两个是command.com、IO.SYS在Win9X中，MSDOS.SYS变成了纯文本系统配置文件，用于控制Win的启动方式
本次题目的难度一般，主要是本周所学的内容的题目，针对性比较高，穿插了部分以前学过的内容，除了本章题目还有其他的题目，达到了复习的作用，我觉得这是一次很好的尝试，既能学习新的知识又能巩固以前所学到的知识。
本次练习较难，考察了刚学习的软件分类，软件架构和操作系统，同时也涉及到一些之前学过的内容，通过比较操作系统，发现mac os最为流畅，windows界面简洁大方，也方便使用，之后的学习中我准备自学python来提升自己
本次的题目个人感觉难度非常大，不仅设计的知识面很广(从信息熵，云计算，操作系统到软件工程构架)、而且所涉及的知识点很难从书上找到答案，还存在计算题，但是也因此找到自己课程以来的不足之处，虽然没有能好好掌握，但发现了问题，慢慢改进
本次题目和之前一次的题目一样涉及了之前学过的所有知识，像信息熵的计算这种初期学过的知识很能考察复习的有效性。在软件架构和软件分类这块，还是得翻一下书，过一遍知识点来回顾一下，有些生疏。之后的复习还是得稳扎稳打。
软件架构是一个系统的草图。软件架构描述的对象是直接构成系统的抽象组件。各个组件之间的连接则明确和相对细致地描述组件之间的通讯。在实现阶段，这些抽象组件被细化为实际的组件，比如具体某个类或者对象。在面向对象领域中，组件之间的连接通常用接口来实现。
本章的课后作业对我们的内容进行了复习 同时也让我们加深了对知识的储备 在以后的学习中 我们需要对所学的知识有更好的掌握 才可以取得进步 为以后的学习奠定基础 不断巩固自己所学内容的薄弱环节 才可以去的正真意义上的进步 不断为以后的内容奠定基处
本次的题目所涉及的知识点很多，有第一单元的信息熵，也有之后所学的云计算和物联网的内容。更有刚学以及将要学的软件以及操作系统方面的知识。不仅巩固了之前的知识，更为后面的学习打下了一个基础。感觉这次的题目很有意义。
这次的预习还比较简单许多内容都已经见过，各种各样的东西在这样的一个学习计算机的过程中经历的差不多许多方面都能找到一些支持，在学习的过程中学到了计算机思维，计算机的应用和计算机的各种方向的发展，这都足以让我受用了。
本次的题目有点难度，且难度主要集中于刚学的软件这一块。关于软件的功能，架构和分层有许多重要的知识点没有熟记。这次作业让我狠狠的复习了一遍软件121122121212121221212121221212121
本次的课后习题难度中等，通过这次习题，我巩固了有关软件的知识，比如：软件按照功能可以分为系统软件和应用软件。系统软件可分为操作系统、支撑软件。软件架构必须为变化而设计。分层对系统进行分而治之的管理是一种行之有效的方法。
架构，又名软件架构，是有关软件整体结构与组件的抽象描述，用于指导大型软件系统各个方面的设计。架构描述语言（ADL）用于描述软件的体系架构。现在已有多种架构描述语言，如Wright（由卡内基梅隆大学开发），Acme（由卡内基梅隆大学开发），C2（由UCI开发），Darwin（由伦敦帝国学院开发）。ADL的基本构成包括组件、连接器和配置。[1] 中文名 架构 外文名 Software architecture 别称 软件架构 特性 架构是对存储在Active Directory中的对象类别和属性的描述。对于每一个对象类别来说，该架构定义了对象类必须具有的属性，它也可以有附加的属性，并且该对象可以是它的父对象。 可以动态更新的Active Directory 架构。应用程序可以使用新的属性和类扩展该架构，并能立刻使用该扩展。通过在Active Directory 中创建或修改存储在 Active Directory 中的架构对象来完成架构的更新。与Active Directory 中的所有对象一样，架构对象能访问控制列表，因此只有授权的用户才可以更改架构。 软件架构 软件架构（software architecture）是一系列相关的抽象模式，用于指导大型软件系统各个方面的设计。 软件架构是一个系统的草图。软件架构描述的对象是直接构成系统的抽象组件。各个组件之间的连接则明确和相对细致地描述组件之间的通讯。在实现阶段，这些抽象组件被细化为实际的组件，比如具体某个类或者对象。在面向对象领域中，组件之间的连接通常用接口(计算机科学)来实现。 软件体系结构是构建计算机软件实践的基础。与建筑师设定建筑项目的设计原则和目标，作为绘图员画图的基础一样，一个软件架构师或者系统架构师陈述软件构架以作为满足不同客户需求的实际系统设计方案的基础。 软件构架是一个容易理解的概念，多数工程师（尤其是经验不多的工程师）会从直觉上来认识它，但要给出精确的定义很困难。特别是，很难明确地区分设计和构架：构架属于设计的一方面，它集中于某些具体的特征。 在“软件构架简介”中，David Garlan 和 Mary Shaw 认为软件构架是有关如下问题的设计层次：“在计算的算法和数据结构之外，设计并确定系统整体结构成为了新的问题。结构问题包括总体组织结构和全局控制结构；通信、同步和数据访问的协议；设计元素的功能分配；物理分布；设计元素的组成；定标与性能；备选设计的选择。” 但构架不仅是结构。IEEE Working Group on Architecture 把其定义为“系统在其环境中的最高层概念”。构架还包括“符合”系统完整性、经济约束条件、审美需求和样式。它并不仅注重对内部的考虑，而且还在系统的用户环境和开发环境中对系统进行整体考虑，即同时注重对外部的考虑。 在 Rational Unified Process 中，软件系统的构架（在某一给定点）是指系统重要构件的组织或结构，这些重要构件通过接口与不断减小的构件与接口所组成的构件进行交互。 从和目的、主题、材料和结构的联系上来说，软件架构可以和建筑物的架构相比拟。一个软件架构师需要有广泛的软件理论知识和相应的经验来实施和管理软件产品的高级设计。软件架构师定义和设计软件的模块化，模块之间的交互，用户界面风格，对外接口方法，创新的设计特性，以及高层事物的对象操作、逻辑和流程。 一般而言，软件系统的架构（Architecture）有两个要素： 1.它是一个软件系统从整体到部分的最高层次的划分。一个系统通常是由元件组成的，而这些元件如何形成、相互之间如何发生作用，则是关于这个系统本身结构的重要信息。详细地说，就是要包括架构元件（Architecture Component）、联结器（Connector）、任务流（Task-flow）。所谓架构元素，也就是组成系统的核心"砖瓦"，而联结器则描述这些元件之间通讯的路径、通讯的机制、通讯的预期结果，任务流则描述系统如何使用这些元件和联结器完成某一项需求。 2.建造一个系统所作出的最高层次的、以后难以更改的，商业的和技术的决定。在建造一个系统之前会有很多的重要决定需要事先作出，而一旦系统开始进行详细设计甚至建造，这些决定就很难更改甚至无法更改。显然，这样的决定必定是有关系统设计成败的最重要决定，必须经过非常慎重的研究和考察。 历史 早在1960年代，诸如E·W·戴克斯特拉就已经涉及软件架构这个概念了。自1990年代以来，部分由于在 Rational Software Corporation 和Microsoft内部的相关活动，软件架构这个概念开始越来越流行起来。 卡内基梅隆大学和加州大学埃尔文分校在这个领域作了很多研究。卡内基·梅隆大学的Mary Shaw和David Garlan于1996年写了一本叫做 Software Architecture perspective on an emerging discipline的书，提出了软件架构中的很多概念，例如软件组件、连接器、风格等等。 加州大学埃尔文分校的软件研究院所做的工作则主要集中于架构风格、架构描述语言以及动态架构。 计算机软件的历史开始于五十年代，历史非常短暂，而相比之下建筑工程则从石器时代就开始了，人类在几千年的建筑设计实践中积累了大量的经验和教训。建筑设计基本上包含两点，一是建筑风格，二是建筑模式。独特的建筑风格和恰当选择的建筑模式，可以使它成为一个独一无二的建筑。 下面的照片显示了中美洲古代玛雅建筑，Chichen-Itza大金字塔，九个巨大的石级堆垒而上，九十一级台阶（象征着四季的天数）夺路而出，塔顶的神殿耸入云天。所有的数字都如日历般严谨，风格雄浑。难以想象这是石器时代的建筑物。 图1位于墨西哥Chichen-Itza（在玛雅语中chi意为嘴chen意为井）的古玛雅建筑。（摄影：作者） 　软件与人类的关系是架构师必须面对的核心问题，也是自从软件进入历史舞台之后就出现的问题。与此类似地，自从有了建筑以来，建筑与人类的关系就一直是建筑设计师必须面对的核心问题。英国首相丘吉尔说，我们构造建筑物，然后建筑物构造我们（We shape our buildings, and afterwards our buildings shape us）。英国下议院的会议厅较狭窄，无法使所有的下议院议员面向同一个方向入座，而必须分成两侧入座。丘吉尔认为，议员们入座的时候自然会选择与自己政见相同的人同时入座，而这就是英国政党制的起源。Party这个词的原意就是"方"、"面"。政党起源的关键就是建筑物对人的影响。 ￼ 图1、古玛雅建筑 在软件设计界曾经有很多人认为功能是最为重要的，形式必须服从功能。与此类似地，在建筑学界，现代主义建筑流派的开创人之一Louis Sullivan也认为形式应当服从于功能（Forms follows function）。 几乎所有的软件设计理念都可以在浩如烟海的建筑学历史中找到更为遥远的历史回响。最为著名的，当然就是模式理论和XP理论。
通过学习知道了软件架构是一系列相关的抽象模式，用于指导大型软件系统各个方面的设计。软件架构是一个系统的草图。软件体系结构是构建计算机软件实践的基础。软件架构是一个系统的草图。软件架构描述的对象是直接构成系统的抽象组件。各个组件之间的连接则明确和相对细致地描述组件之间的通讯。在实现阶段，这些抽象组件被细化为实际的组件，比如具体某个类或者对象。在面向对象领域中，组件之间的连接通常用接口来实现。
对已学的知识还是不能准确的记住与理解，希望老师能再多加讲解，我也会在课下多多自学，复习，尽力把知识点，相关信息，必备技能完全掌握，。相信在未来绝对会贯通这门学科。(｀･ω･´)ゞ敬礼っ_(´ཀ`」 ∠)__
随着信息技术的高速发展并迅速渗透到社会生活的各个方面，计算机日益成为人们学习、工作、生活不可缺少的基本工具，再过不了几年，不会使用计算机，就会象不识字一样使人举步维艰， 计算机学习 心得体会。进入大学，计算机无时无刻在伴随着我们，给我们在学习的生活增添了乐趣
这次题目感觉需要在了解那个知识点的基础上思考，不然不知道选啥，如第三题。但有些题目书上有原文，还是挺简单的，比如按软件功能可以将软件分为系统软件和应用软件。感觉软件平时接触比较多，相比硬件的学习更易搞懂，还要多看书加强。
本次题目较综合，有些难度，复习了之前的内容，让我对一些重要的知识点有了回顾。1111111111111111111111111111111111111111111111111111111111111111
本次作业比较简单，都是书上有的内容，对于各个概念有了进一步的了解，但是还要记忆，目前做题还要依靠书本，以后要将书上的知识内化，真正的掌握并运用，平时靠书上的知识是不够的，课外还要收集相关资料，认真研究。
通过做本次的课后作业。我明显感觉到了这次的题是从第一章的信息熵到现在所学到的软件工程的一次题目汇总，帮助我梳理开学到现在所学习的内容。自此，计算机的整体概念以及各种部分的结构框架帮助我记忆。我对于计算机这一体系的认识更加清晰。
通过本次的课后作业，我了解了的软件的定义。软件可以按照软件的功能分类，分为系统软件和应用软件，也可以按照软件的规模分类，软件的工作方式分类，可以分为实时处理软件和分时处理软件和交互式软件，本周学习收获颇多。
Unix系统也被称为Xenix，1969年由贝尔实验室开发。它最显著的特点是短小精干，运行速度快，系统开销小。Unix支持数据共享，运行多进程等功能，且支持许多编程开发工具。Mac OS（最先进的操作系统）
这一章主要讲计算机的软件方面了，由于平时操作电脑，用的都是软件，对软件的定义大致熟悉，所以理解起来就没那么难。但书上的内容有些地方跟老师讲的有点差别，所以做题时有些东西跟书上的有点不一样。感觉老师讲的软件架构十分重要，我会好好学的。
本次实验让我对于软件的定义、架构、分类以及开发的相关知识有了更进一步的学习和体会，同时我也更好的掌握了云计算以及计算机网络的知识，再加上一部分对于之前知识的复习，我对于这些知识有了更好的更深刻的体会，之后我会做得更好。
明显感到我对于软件架构的理解还是不太深，可能与我没经历过大的软件开发项目有关，还没办法清楚的知道分层的真正好处，但从对分工合作的角度来看还是可以大致想到分层的高效性。另外对于系统，我准备用虚拟机软件安装一下LINUX来熟悉一下这个陌生的系统
在。新的一章中。我们了解到操作系统以及软件结构的相关知识。操作系统。对于我们目前的水平来说。算是十分超前的内容了。当前也只能做浅尝辄止的了解。深入的学习更多的应当靠的是个人的兴趣驱动。作为一个计科人。对于这些不单纯只是作为一长串的代码。而是当作艺术来鉴赏。
这一次作业题目的数目有所提升，但是题目相对来说比较简单，在书上只要仔细阅读就会有所收获，这次的作业很不错的帮我们巩固了上课所学的关于软件和操作系统的知识点，出题的人还出了有关于前两章的题，帮我们巩固了知识点。
软件（中国大陆及香港用语，台湾称作软体，英文：Software）是一系列按照特定顺序组织的计算机数据和指令的集合。一般来讲软件被划分为系统软件、应用软件和介于这两者之间的中间件。软件并不只是包括可以在计算机（这里的计算机是指广义的计算机）上运行的电脑程序，与这些电脑程序相关的文档一般也被认为是软件的一部分。简单的说软件就是程序加文档的集合体
以前以为一个软件的开发一个人可以做到，通过学习，了解到软件开发根本不可能靠一个人做到，必须是团队的协同合作。 软件构架我是第一次听到，以前以为软件是程序员敲敲代码就完事儿了的，现在发现没有软件构架根本做不了。
通过这次做课后作业题目，我的感悟如下所示：这次的课后作业题目所涉及的知识点大部分是刚学的第三章的内容也有几道题设计了信息熵等。我对这次题目的掌握程度还不错，对题目考察的知识点理解的还不错。这次题目不是太难。
题目有难有易。偏于基础知识。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。
emmm...这周的知识点事关于软件的，我觉得我这个人比较喜欢打游戏，喜欢看动漫，所以也想往这个方向发展，所以应该选什么专业呢，还是有一点迷茫。大一第一学期还有一个月就结束了，真的好快，感觉什么都没学到。
first ,感觉这次作业还可以，都是课本上的知识，难度中等，second，随着课后作业的一次一次的进行，突然发现这是我温习知识的很强的提醒闹铃，每一次写作业，我都要把课本翻个遍，一段一段的读每一行文字，生活离不开它了……
这次的题目是对前面所学内容的小小检测，另一方面又考察上次课的内容。主要是关于计算机硬件与网络和软件方面的内容，关于知识点刚学的软件等内容掌握有点差，另外还好。就题目难易程度来说并不是太难，只有几个题目有点不会。
这次的题目相比以往增大了题目的数量，题目中也包含了前面几张的相关的内容，但是在关于这张的相关内容中我认为我在软件架构这一块上还要多看一下，同时这次的四个题目中也有几个都是关于这部分的相关的内容，这一块要引起重视
通过本节课的学习，我了解了有关软件的一些知识，知道它从功能上可以分为系统软件和应用软件，也了解了软件架构，知道了软件架构的定义和软件架构的分层。系统软件又分为支撑软件和操作系统，我也知道了什么是操作系统。
虚拟化是计算机资源的逻辑组（或子集）的表示过程，可以直接访问使用计算机抽象的底层资源。这样可以有效地利用服务器闲置的抽象资源而不用受实现方法、地理位置或底层资源物理配置的限制，关键特征为多实例、隔离性、封装性、高性能。
这些题都不是很难，比较轻松的就做出来了，感觉都只要求大概地了解就行了，没有什么需要理解得很深的地方，另外呢通过这些题，也能了解到哪些内容是重点，像一些知识都重复出现好多次了。我们也可以从做题的感觉中了解自己的学习状况，而不仅仅是自我感觉。
这次题目大多属于软件方面的知识，但还是有关于信息熵和第二章的内容。然后。。。对那些定义还不是比较熟练，也就是文字比较多的记不下来，可能是没有花时间去记吧，虽然题目不难，但我必须依靠书才行，准确说，我选了后不敢确定是否正确。
这次的题目都是课本上的内容，基本都是有关软件和操作系统的问题。这些问题都是很底层而又很基础的问题。如果对这些问题不了解，我们就不会知道我们学习计算机科学的意义和方向。计算机操作系统和软件接触比较多，理解这些知识难度不是很大。
本次综和试题难度不是很大，考查对之前知识的理解程度，感觉还不错，之前对信息熵的含义，公式不是很了解，经过这一次的测试，了解到了自己对它还是有正确的了解的，另外对别的知识掌握的也还不错，不过，再接再厉吧。
有一些前面的内容忘了，就像求信息熵的那一题。但是还是有一题不知道是不是对的：问题领域和空间的复杂程度决定了软件分层，就是他们之间的主动，被动关系不知道。自己感觉他们之间应该没有被动主动的关系，应该是相互独立的存在。
本次作业难度不大，感觉上做的还不错，对软件的架构有了较深入的理解，同时，对信息的获取，存储，传输的过程，以及内容把握的不错，唯一不足的是，对dos的理解还有些欠缺，还没真正搞清楚它的使用方式（dos实在是有点难）。
有一些前面的内容忘了，就像求信息熵的那一题。但是还是有一题不知道是不是对的：问题领域和空间的复杂程度决定了软件分层，就是他们之间的主动，被动关系不知道。自己感觉他们之间应该没有被动主动的关系，应该是相互独立的存在。
本章讨论了软件的相关知识，还有些信息墒的一题，让我们知道了有软件架构这个概念，还更加深刻的知道软件并非只是我们手机里的app还有更多的内容，虽然有些抽象难懂，但是相信以后我们会有机会多多接触，多多体会……
本章学习了软件的相关知识，包括软件的分类、软件架构及各种操作系统的介绍。软件架构是开发软件必要的一个环节，软件架构的分层在一定程度上使软件的开发变得简单。各种操作系统的介绍使我了解了除了常见的windows、mac os外的其他操作系统
信息论之父 C. E. Shannon 在 1948 年发表的论文“通信的数学理论（ A Mathematical Theory of Communication ）”中， Shannon 指出，任何信息都存在冗余，冗余大小与信息中每个符号（数字、字母或单词）的出现概率或者说不确定性有关。 Shannon 借鉴了热力学的概念，把信息中排除了冗余后的平均信息量称为“信息熵”，并给出了计算信息熵的数学表达式。
本次题比较不容易理解，说实话，掌握程度没有上一次好，此次书本内容比较复杂，预习也没有得全分，概念掌握程度不够，并且内容复杂，因此对于此次作业没有十足的信心，不过自己也发现不足，作业就是不足自己的短处，不理解才能明白自己的不足
这次作业有些是以前的知识，但是我感觉有些东西还是有点忘了，我对已学的知识还是不能准确的记住与理解，但我会在课下多多自学，复习，尽力把知识点，相关信息，必备技能完全掌握，同时，这次的课程的题目也有，感觉挺基本。
本次课程学习了软件的架构、分类和开发中的相关要求和概念，在学习了知识的同时，还掌握了软件开发中最为核心的部分，以及软件架构设计的必要性和必须性。虽然目前来说我对这些概念并不是有很深的感触和理解，但是我相信，假以时日，我会慢慢理解到它们的重要作用的。
这次题目同样是对所学知识的一个阶段性复习,涉及到了之前做学的很多知识点，所以题目相对来说也多一点，同时也让我发现了，我在计算信息熵上可能存在问题，需要重点注意和练习,与此同时，在很多知识点上，概念比较模糊,任需借助书本才能完成答题,不太好，加油！
本次作业让我对软件的知识进行了全方位的了解，包括软件的开发、软件的架构以及操作系统等等，还复习了物联网方面的细节知识。一个软件的开发并不像我们以前所理解的写程序就够了，它的结构以及使用环境等都是需要考虑的因素。
这次课后作业真是太简单了，不仅很好地巩固了我们的知识，而且拓宽了我们对计算机导论这个学科的知识面，我深刻认识了计算机的内部结构，以及计算机的历史发展，这对我们整个信息时代就划时代的意义，这就是我对这次课后作业的总结
这一节的作业涵盖的内容比较多，有信息与计算机、计算机系统结构、计算机网络体系结构、软件的功能、软件的架构以及操作系统。这些都是我们应该了解并掌握的东西。所以我需要不断地深入了解、学习与更新本学科的知识，跟踪学科前沿，开阔更广阔的发展空间。
通过本次课程，我完整地了解到了软件的定义，并且从软件的角度去重新认识了硬件的构成，并通过练习题对软件的分类、规模以及软件架构、操作系统有了一个全新的认识。从此我受益匪浅，并且对计算机科学的热情更加深入了。
我觉得对已学的知识还是不能准确的记住与理解，特别是dos和wndows等操作系统更是有点困难。但我会在课下多多自学，复习，尽力把知识点，相关信息，必备技能完全掌握，。相信能学好这门学科，但还需多加努力，加油
这章讲的是软件，首先要明白硬件与软件的区别:硬件是客观存在的实体，而软件不是，其次要明白软件的分类，按功能分有系统软件与应用软件，其次还有规模与工作方式的区分方法软件架构是有关系统整体结构与组件的抽象模式，是软件开发中非常重要的一环。
软件架构是有关软件整体结构与组件的抽象模式，用于指导大型软件系统各个方面的设计。软件架构是一个系统的草图。软件架构描述的对象是直接构成系统的抽象组件。软件架构设计的目标是具有灵活性、可扩充性和可移值性。
软件架构是指在一定的设计原则基础上，从不同角度对组成系统的各部分进行搭配和安排，形成系统的多个结构而组成架构，它包括该系统的各个组件，组件的外部可见属性及组件之间的相互关系。组件的外部可见属性是指其他组件对该组件所做的假设。 软件架构设计就是从宏观上说明一套软件系统的组成与特性。 软件架构设计是一系列有层次的决策 ，比如：功能与展现的决策；技术架构的决策；自主研发还是合作；商业软件还是开源软件
这次的题目与本次上课学习内容联系紧密，题目难度恰当，不会太简单，也不会全是那种翻书就能找到的题目，更不是完全无法动手的题目。就我个人情况而言，我感觉我掌握的情况不太差，但也不算特别好，要好好加油，把老师上课讲的内容消化好(✪▽✪)
通过一周的学习，对软件的认识更加深入，了解了一些操作系统，知道了他们的长处，明确了软件的分类。知道了软件的架构，知道软件也是要分层的，对其分而治之，并且要为变化而设计，要有灵活性、可扩充、可移植，也了解到软件的维护相当重要。
本周的第二次课后作业，也包括以前学习的旧知识和新学的知识，信息熵、计算机体系结构等等的旧知识虽然已经学过去有一段时间但是我觉得自己掌握的还不错，做这些题并不是很棘手，不过对于新知识还是有一些疑惑，再接再厉！
本次将本章软件的知识与前面所学内容例如计算机系统结构组合在一起来出题，不仅有助于我们复习前面所学过的知识，而且还能让我们对刚学的内容更加熟悉掌握，同时还可以让我们区分各知识点的不同，更好的弄清楚所学知识。
马上就是期末考试了，本次题目带着我们又一次复习了一遍课本，课本中的很多知识都像过电影般在脑海中回放着。其实开学以来真的通过计算机导论学到了很多东西，从一开始什么都不会的小白，到现在可以和专业人士交流几句，的确让我体会到了学以致用的妙处。
这次的题目是综合性的，包括了前边的信息熵 硬件和软件。综合起来是真的有点儿难度。信息熵忘了怎么计算的，关于硬件那的理论知识也快忘了，不拿书的话根本就不会做的。但是这也让我知道了自己的不足之处，课下需要多看。
软件架构是有关软件整体结构与组件的抽象模式，用于指导大型软件系统各个方面的设计。我们详细了解了软件架构的分层。之后还学习了操作系统的相关概念与主要的几种操作系统（DOS，Windows,UNIX,Linux和Mas OS），DOS系统与Windows系统是关键。
这次的题目复习了有关于计算机软件的知识，涵盖了软件的定义，软件的分类，软件架构以及操作系统的知识，让我对软件有了一个新的认识，也明白了一个软件所需要耗费的时间精力。总的来说，这次的题目有点难度，但是只要复习就能做出来。
通过最近几周对计算机科学导论这门课程的学习，我学习到了有关软件与云计算，物联网等相关知识，现如今处处宣传大数据的背后所依赖的便是云计算，物联网也将是未来社会的一种发展趋势，而软件所做的就是在硬件与用户之间建起桥梁
本次题目涉及到的知识点有信息熵的计算方式、软件的定义、软件的分层、软件架构的定义、软件架构的分层、系统程序与应用程序的区别、操作系统的类型以及DOS系统的核心程序。通过本周的课程初步了解了软件、软件架构和操作系统。
DOS有三个基本文件 MSDOS.SYS、 IO.SYS、COMMAND.COM。支撑软件包括一系列基本工具，以及数据库管理、外部存储器格式化、文件系统管理、用户身份验证、设备驱动管理、网络连接等方面的工具和程序设计的集成开发环境，它主要包括环境数据库、各种接口软件和工具组。CentOS是社区企业操作系统。软件架构描述的对象是直接构成系统的抽象组件、是一个系统的草图、是有关软件整体结构与组件的抽象模式。
此次又复习了一遍有关信息熵的内容，还有关于软件的一些知识，软件是用户与硬件之间的接口，用户主要是通过软件与计算机进行交流的，按软件的功能分类可以分为系统软件和应用软件，按软件的规模分，可分为微型，小型，中型，大型，甚大型以及极大型
这次课后作业和上次一样是对前期所学的所有内容的一个总结，包含从信息到计算机再到软件的全部知识。我发现对比来说这次没有出现进制转换，可以说是避开了我的弱点，但我明白还有很多对概念及计算的不熟悉的地方，我也会加以改进。
软件是用户与硬件之间的接口，用户通过软件与计算机进行交流。虽然从传统意义上讲，软件是计算机系统中的硬件部分，但是实际软件应=程序+数据+文档，软件是计算机系统设计的重要依据，不仅要统筹规划好计算机软件与硬件结合的层次关系，也要兼顾用户的需求才好。
本周我们复习了一部分之前的知识，所谓“温故而知新”，便是如此。总结来说，我们概括的学习了很多有关计算机内外部分的知识，这些知识将是我们将来深入学习各个部分知识的基础，我们有必要牢固的掌握他们，所以说，温故而知新。
这周学习了软件开发的相关知识，软件我们平常用的多比较熟悉，但对于软件的开发过程我们并不了解，这周学习了软件开发的过程和开发软件要重点关注的用户界面和用户体验，对于以后我们选择自己的专业方向有一定帮助。
本次题目跨度极大，从最开始的信息到现在刚结束的软件。感觉就是还是得好好复习一下，之前学的东西记忆已经模糊了。复习了信息的定义，信息熵的计算，云计算和物联网的基本技术，软件的定义和软件的架构以及操作系统，让我们对计算机有一个基本较深入的的理解。
这章介绍了软件，包括各种软件，此处的软件不是狭义的软件，而是广义的，软件就是用户与硬件的接口，没有软件，硬件也没有实际作用。软件可分为系统软件和应用软件，知道学到这章我才知道，原来系统也是软件的一种，软件还有很多等的我们去开发。
本次学习使我对计算机有了更加深刻的理解。按照不同的标准，软件可以分成很多类。软件有软件架构，架构有分为很多层，可以对系统进行分而治之。然后又接触了操作系统，操作系统又很多的种类，每个种类有自己的特点。
支撑软件是支撑各种软件的开发与维护的软件,又称为软件开发环境。它主要包括环境数据库、各种接口软件和工具组。软件架构是一系列相关的抽象模式，用于指导大型软件系统各个方面的设计。软件架构是一个系统的草图。软件体系结构是构建计算机软件实践的基础。
本次题目是对以前知识的回顾和对现在知识的回顾，本次题目涵盖信息，计算机硬件的组成，云计算，物联网，系统软件，应用软件，DOS操作系统。本次题目综合性强，但难度不大。本次题目对我们对以前的知识有复习作用。
在本次的学习过程中，对于软件有了更加深入的了解，以及对于以前学习过的很多内容，在本次的作业中，得到了重新复习与提升，包括关于硬件，以及关于信息部分的知识，是一个巩固的过程，加深了已经学习过的知识的印象。
走进软件，软件的定义，软件是用户与硬件之间的接口，用户主要是通过软件与计算机进行交流的。软件是包括程序、数据及其相关文档的集合。程序是按照事先设计的功能和性能的指令序列；数据包括使程序能正常运行的参数及程序运行过程中处理的对象；文档是与程序开发、维护和使用有关的资料总称。软件与硬件得层次关系从上到下分为应用软件，支撑软件，操作系统，计算机硬件。 软件的分类。按软件的功能可以将软件分为系统软件和应有软件。操作系统是管理计算机硬件和软件资源的程序，同时也是计算机系统的内核与基石。支撑软件包括一系列基本工具。软件还可以按照规模分类。软件按照工作方式分为实时处理软件、分时软件、交互式软件和批处理软件。实时处理软件氛围数据采集、数据分析、数据输出三部分Window、Linux都是分时软件。 软件架构是有关软件整体与组件的抽象模式，用于指导大型软件系统各个方面的设计。软件架构是一个系统的草图。软件架构的分层的优点在于每个层次功能明确，逻辑清晰，高层只需要了解相邻的低层的细节即可，从而降低了层与层之间的耦合度。软件架构-从上到下分为程序子系统、业务专用中间件，系统软件。系统的分层包含的规则为可见度，易变性，通用性，层数。 操作系统为计算机硬件和应用程序提供了一个交互界面，并指挥计算机各部分硬件的基本工作。对于操作系统的作用不同的角度有不同的观点。系统观点为计算机管理资源。用户观点为用户使用计算机的界面。而软件观点为程序、数据和文档的集合。几种操作系统。 DOS即磁盘操作系统，核心程序包括系统引导程序，MSDOS.SYS、IO.SYS和COMMAND.COM 。DOS是一个单用户、单任务的操作系统。Window系统多用户，多任务的操作系统。优点有：直观、高效得面对对象的图形用户界面，易学易用；用户界面统一、友好、漂亮，Window应用程序大多符合CUA标准。丰富的设备无关的图形操作，Windows系统的图形设备接口（GDI）提供了丰富的图行操作函数；Window采用了双模式结构来保护系统本身，以避免被应用程序的错误波及。 UNIX系统是由美国贝尔实验室在PDP－7计算机上实现的。UNIX是一个通用的、多任务、交互的分时系统，是应用面最广、影响力最大的操作系统。UNIX的优点为提供可编程的命令语言；提供了许多程序包。文件系统简洁。可移植性强。网络通信系统强。UNIX的组成为，UNIX系统才用了层次结构，外层是用户层，内层是内核层。UNIX操作系统包含4个基本的成分：内核、Shell、文件系统和公用程序。Linux操作系统是由芬兰赫尔辛基大学的学生Linux Torvalds开发的。Linux的优点为模块化程度高；源代码公开；广泛的硬件支持；安全性及可靠性好；完整的网络组成；Linux有内核版本和发型版本。linux与UNIX的关系 API（Application Programming Interface,应用程序编程接口）是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。为Linux操作系统是UNIX的一种克隆系统。Mac Os是一个运行于苹果公司Macintosh系列计算机上的操作系统，是首个在商用领域成功的图形用户界面操作系统。Mac OS基于UNIX，以简单易用和稳定可靠著称。智能手机系统分为Symbian,WindowPhone,iOS,Android,BlackBerry。
通常，一个信源发送出什么符号是不确定的，衡量它可以根据其出现的概率来度量。概率大，出现机会多，不确定性小；反之就大。 不确定性函数f是概率P的单调递降函数；两个独立符号所产生的不确定性应等于各自不确定性之和，即f（P1，P2）=f（P1）+f（P2），这称为可加性。同时满足这两个条件的函数f是对数函数，即 。 在信源中，考虑的不是某一单个符号发生的不确定性，而是要考虑这个信源所有可能发生情况的平均不确定性。若信源符号有n种取值：U1…Ui…Un，对应概率为：P1…Pi…Pn，且各种符号的出现彼此独立。这时，信源的平均不确定性应当为单个符号不确定性-logPi的统计平均值（E），可称为信息熵，即 ，式中对数一般取2为底，单位为比特。但是，也可以取其它对数底，采用其它相应的单位，它们间可用换底公式换算。
这次题目的心得莫过于对第三章软件的了解了.软件是硬件与客户交流的平台.有系统软件,应用软件才能和硬件进行顺利的交流.这次涉及的知识点主要偏向第三章.当然也有第一章的知识点.这意味着不能喜新厌旧.这次题目挺容易的
本章题目是对这段时间学习的一个基本的整体的检测，个人先是不看书去做，发现有较多的不会（4道题）。后来通过查找书籍上的知识来找到了相对正确的答案，感觉需要去对书本有较为整体的梳理，才能做到基本独立完成题目。
计算机系统结构是计算机的机器语言程序员或程序编写者所看到的外特性。操作系统是用以控制和管理计算机系统资源的软件，软件架构是系统的草图。 软件架构是有关软件整体结构与组件的抽象模式，需要具有灵活性，可扩充性和可移植性。
此次作业有些东西比较抽象，所以我做起来有点困难，特别是在支撑软件，软件架构的方面，我有点分不清楚，所以我认为我还需要再去看看书，再去了解下，此外我想问一下支撑软件是在操作系统里面吗?还是在什么地方呢。
软件架构是有关整体架构与组件的抽象模式，用于指导大型软件系统各个方面的设计。软件架构是一个系统的草图。软件架构描述的对象是直接构成系统的抽象组件。各个抽象组件之间的连接则明确和相对细致地描述了组件之间的通信。
软件包括程序、数据及其相关文档，按功能分可分为系统软件和应用软件。系统软件又分为操作系统软件和应用软件。其中，操作系统软件主要用于管理整个计算机，应用软件帮助用户实现各种各样的复杂功能。软件架构是一系列相关的抽象模式，软件架构分层使得大型系统的管理变得更加有效。
本次题目涉及到了支撑软件的包括部分，软件按照功能的分类，信息熵的计算，云计算，计算机体系结构，传感器的相关知识，软件架构的基本知识，应用软件的包括部分，DOS的三种基本文件，操作系统软件的包括部分，帮助我们全面的复习了以前所学习的有关知识。
本次题目量比较大，覆盖的内容也是比较多的，主要还是跟软件和操作系统有关。按软件的功能可以将软件分为系统软件和应用软件，系统软件又分为操作系统和支撑软件，。还要注意软件的架构分层以及一些常见的操作系统。
这次的题目主要围绕软件这个大主题进行，所出的题是软件及软件架构中的一些概念，也有关于计算机系统结构和体系结构的相关知识。这些题需要大家对其有足够的了解和理解才能够顺利的答出来。我觉得弄清楚这些概念还是非常重要的，毕竟如果不把基础大好，以后的学习肯定会漏洞百出。
这次题目还是简单一点的，但是可能也是自己在做的时候不在状态，很多选项都要读好几遍才拿得下决定。还有几个题目是与上次的重复的，嘿嘿，另外，关于信息熵的计算，又重新看了一下课本，所以明白了该怎么算了，收获还是不少的:)
又回顾了一下前面的内容，发现自己快把前面的忘记掉了，尤其是信息熵的公式，此外，对于计算机结构，软件分类也不是非常确定。尤其是资源管理与文件管理有什么区别，数据库平台与数据库管理有什么区别。此外，还有一些其它内容不是很确定
至今为止计算机导论上学习的知识点内容还是比较多，感觉现在写这些题目已经有很多已经不记得怎么写了，没有丝毫印象了。计算机导论占用的课时不多，所以复习时间较少，对于软件架构，计算机硬件的构成等的知识点已经有点模糊不清了，看来还要加强复习

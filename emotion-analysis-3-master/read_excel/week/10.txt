本次课前预习内容难度有些大，课本中寻找比较困难，本次课前预习主要与操作系统和软件有关，包括操作系统的功能，操作系统的基本组成成分。软件工程的有关知识，不过鉴于自己对这些知识了解甚少，所以在书本中看到的也是表面，
通过本次对计算机科学导论这门课程的预习，之后再来做这些题觉得难度并不是很大，答案基本上都可以在书上找到相似的，或者完全一样的原话，知识点在书上基本上都可以找到，只要认真找一下答案就可以完成本次的作业了
本次预习作业主要围绕软件展开，涵盖了软件的简介、操作系统、软件的开发等方面，内容全面充实，难度不大，只要对书本有个基本的了解，即可完成作业。在生活中，软件离我们很近，我们却没有很好的了解它们，学习计算机导论的作用正是在此。
这一次计算机导论的题目是关于软件工程内容的题目，难度算是比较大，但是这些题目在书本上基本都能够找到正确的答案，需要对课本进行仔细研读才能够快速准确的写出选项。在以后的学习中都要对软件接触很多，需要我们认真的学习这些知识。
这次的课前预习是关于软件工程方面的内容。这次的软件工程课前预习的内容比较简单，在书上可以看到很多的知识点，看书就可以了解到关于软件工程的很多东西。看书就了解了课程的内容。在书上就能找到全部的题目的答案。
对预习知识还是不能准确的记住与理解，希望老师能再多加讲解，我也会在课下多多自学，复习，尽力把知识点，相关信息，必备技能完全掌握，。相信在未来绝对会贯通这门学科。还需多加努力，也要与其他学科，相辅相成。
这一次导论的课前预习是有关于软件工程，操作系统，软件规模等方面的，题目较多，并且有些题目也较有难度，但是大部分可以在书里找得到。从中也了解到操作系统是计算机软件的核心，是非常重要的。我觉得我对于这部分知识的掌握较为一般。
本次作业题目难度较大，很多题目在书本中都不能找到，只有上网查阅资料才能找到答案，本节课继续学习了软件，，涉及按软件规模分类，操作系统的定义以及作用，软件危及以及软件工程的提出，还有软件的开发过程等等……
对已学的知识还是不能准确的记住与理解，希望老师能再多加讲解，我也会在课下多多自学，复习，尽力把知识点，相关信息，必备技能完全掌握，。相信在未来绝对会贯通这门学科。还需多加努力，也要与其他学科，相辅相成。General
这次没有作课前预习，都是一边写一边找，可以学到很多东西，这也是一种不错的学习方法吧。。。。。。操作系统这方面没有什么了解，希望接下来的课程可以好好学下去。一直希望自己对计算机可以有更多的认识，正在朝这方向发展。
对软件工程有了一定的了解，让我更加熟悉计算机软件问题，对各种操作系统有有了一定的了解，对以后计算机的选择和手机的选择打下了基础，对计算机和用户的关系操作更加熟悉，但由于计算机是一门要实践的学科，还需要我更加努力。
经过初步的预习，我大致了解操作系统，软件工程和软件开发，但还是有很多知识我没有在书上找到,大概是我预习的不够仔细。也希望老师在课上能详细讲解，解释我的疑惑。所以，说感觉对知识点掌握不是太好，有所欠缺。
感觉这几次作业比较多，而且知识点比较分散 理解得还行。 一般。 (๑•॒̀ ູ॒•́๑)t(- n -)t( ^..^)ﾉб(*｀・´)∂(•̴̑⁎̵̭•̴̆)(•̴̑⁎̵̭•̴̆)б(*｀・´)∂б(*｀・´)∂б(*｀・´)∂
这一次的题目既有之前内容的回顾，又有新课的预习，通过这次的学习我知道了软件工程涉及程序设计，数据库，软件开发工具，系统平台，标准及设计模式等方面。在软件开发的过程中应该明确各个阶段的工作目标、实现该目标所必须的工作内容以及达到的标准
本次预习试题难度较前几次要难，有很多题目不会做，可能是课本读的仓促没有找到关键信息点知识点，希望上课时能弥补。希望计算机导论软件能开放错题集功能，以便于即使纠错，复习，提高学习效率。自己感觉要同时提高上课听讲质量。
还可以吧。。。。不算特别那你就是得翻书找。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。烦，老实记不住。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。
这次的预习使我对计算机操作系统以及软件工程的定义，特点和性质有了一个基本的了解，其中，软件工程是一门研究用工程化构建和维护有效的，实用的，和高质量的软件的学科。涉及程序设计，数据库，软件开发工具，系统平台，标准及设计模式等方面
本次题目还可以，难度适中，有些题出的还是一如既往得让人感觉是在考语文文字艺术，，，我真的不清楚软件开发工具和软件开发平台是否一样，还有软件工程是否涉及界面设计，大概是我的问题，，嗯其他的还可以，都能在书上找到
本次预习了软件工程和操作系统等方面，操作系统之前做过实验，难度不大。但是软件工程有一道题目没有在书中找到，可能是读的不细。可能是常识或者之前讲过的。难度整体来说不大，预习也不可能是难题。在预习中知道了要学的知识。
操作系统的出现使得用户能够在不具备很强的能力的情况下也能够使用计算机，它的出现使得计算机进一步被推广，降低了计算机使用的门槛。软件工程则给软件开发与维护指出了一条明路，使得开发者能够节省精力，更好地维护和更新软件。
这次题目是有关软件，操作系统方面的知识，从软件开发过程中我们领略到了前人的辛苦与伟大，而软件危机这个代名词也是从中产生的。操作系统各种各样，我们平时爱不释手的手机本身就包含有操作系统，我们生活中其实经常碰到这些东西。
在本次的学习中，我学习到了有关软件工程的知识， 软件工程是一门研究用工程化方法构建和维护有效的、实用的和高质量的软件的学科，软件工程涉及程序设计语言，数据库，开发工具，一般的中型软件的研发时间在1到2年。
本次预习学习工作预习了有关软件工程得有关内容，学习了解了操作系统和软件工程开发，用户界面与用户体验的有关内容，感觉本次预习的内容较多，不是很容易理解，课后习题完成较难，课下还是需要多多预习，争取了解本次内容。
通过学习我学到了软件工程的相关内容，同时了解了有关操作系统的知识，但我国缺少一个我国的操作系统，这样有很大隐患，我们要好好学习，以后开发属于我们国家的系统，同时要扩展知识面，接触学科前沿，比如大数据之类
本章预习为软件工程方面的知识。UNIX由内核，Shell，文件系统，公用程序组成。软件工程是1968年，北大西洋公约组织在学术会议上第一次讨论软件危机问题时正式提出的。软件系统的开发是按阶段进行的。本次题目难度一般。
开放源码软件(open-source)是一个新名词，它被定义为描述其源码可以被公众使用的软件，并且此软件的使用，修改和分发也不受许可证的限制。开放源码软件通常是有copyright的，它的许可证可能包含这样一些限制： 蓄意的保护它的开放源码状态，著者身份的公告，或者开发的控制。“开放源码”正在被公众利益软件组织注册为认证标记，这也是创立正式的开放源码定义的一种手段。
一般来说，计算机软件被划分为编程语言、系统软件、应用软件和介于这两者之间的中间件。其中系统软件为计算机使用提供最基本的功能，但是并不针对某一特定应用领域。而应用软件则恰好相反，不同的应用软件根据用户和所服务的领域提供不同的功能。 软件并不只是包括可以在计算机上运行的计算机程序，与这些计算机程序相关的文档，一般也被认为是软件的一部分。
怎么说呢……两次连在一起的预习要写心得，有点累⊙﹏⊙试图偷懒的我？这次的题目的话，感觉和另外一次相比难度大一些吧，可能是因为这一次考的更详细，总体来说，可能我完成的还是不够好，要好好加油(ง •̀_•́)ง认真听讲！
UNIX操作系统（尤尼斯），是一个强大的多用户、多任务操作系统，支持多种处理器架构，按照操作系统的分类，属于分时操作系统，最早由KenThompson、Dennis Ritchie和Douglas McIlroy于1969年在AT&T的贝尔实验室开发。目前它的商标权由国际开放标准组织所拥有，只有符合单一UNIX规范的UNIX系统才能使用UNIX这个名称，否则只能称为类UNIX（UNIX-like）。
了解了操作系统的定义和它的各种优点，也对目前所存在的各种不同类型的操作系统有了一定的认知度，各种操作系统都有他们自己的优缺点。软件工程这一概念在软件危机之后第一次被正式提出，软件开发涉及多个方面，同时也是按阶段进行的。
软件（中国大陆及香港用语，台湾作软体，英文：Software）是一系列按照特定顺序组织的计算机数据和指令的集合。一般来讲软件被划分为系统软件、应用软件和介于这两者之间的中间件。软件并不只是包括可以在计算机（这里的计算机是指广义的计算机）上运行的电脑程序，与这些电脑程序相关的文档一般也被认为是软件的一部分。简单的说软件就是程序加文档的集合体。另也泛指社会结构中的管理系统、思想意识形态、思想政治觉悟、法律法规等等
本次的题目不仅很好的检验了学生上课的效果，还让学生很好的巩固了知识，提升了对计算机这门科学技术的认知。从多个方面很好的了解到了计算机学科的内容，还从多个方面很好的渗透了计算机学科的思想，体现出了计算机学科的精髓。
本次预习主要是学习关于软件工程和操作系统的内容。操作系统是用户打开计算机之后使用的第一款软件，为应用程序和硬件提供交互界面。软件工程是通过工程化得方式构建软件，这对于大型软件尤其重要，是软件危机后提出的。
本次预习的内容主要是软件工程，难度比较大，但是这次的题目却并不难。通过本次预习，我大致的了解到了软件工程，以及他的开发过程，用户界面与用户体验以及软件行业职业简介，其中要数软件工程最为重要，也应该也是老师上课着重讲的。
UNIK操作系统包含4个基本的成分:内核,shell, 文件系统和公用程序。智能手机通常使用的操作系统有Symbian,Windows phone,ios,Android和BlackBerry OS。软件危机指的是在计算机软件的开发维护过程中所遇到的一系列严重问题。
也是关于软件的内容，很多很多不知道的东西又get到了，感觉很充足很满足呢，虽然有些还是看过之后就记不住啦。一直都觉得这门课程很有意思，很多专业知识都包括在内。这次得学习，让我意识到软件的意义远远超出了我对它的最大想象，好好学习。
这一次的预习在复习了一部分操作系统的知识之后介绍了软件开发的知识，相对于之前学的内容，将软件从操作系统扩充到了所有软件的范围，也介绍了软件工程的概念及其起源还有软件开发的过程，相较与上次课软件的分类那里介绍的更详细
我感觉这次的题目更偏向课本，全都是从课本上找出的知识点。相比于之前的题应该要容易多了，但是这次题是简单了，可知识点依旧不太好理解。有些知识点，我感觉还有些懵懂，不明白。希望可以在课上听明白，就是这样了
这一部分让我了解了以后很可能会选择的专业，软件工程，让我知道了软件工程的起源与发展，了解了软件工程的内容以及意义，认识了软件工程在现代社会发挥的重大作用，也是我今后想重点学习的内容，有关操作系统方面的内容
通过本次预习，对软件工程有了更进一步的了解，知道了软件工程是一门研究用工程化方法构建和维护有效的、实用的和高质量的软件的学科。它涉及程序设计语言、数据库、软件开发工具、系统平台、标准、设计模式等方面。
我软件工程是一门研究用工程化方法构建和维护有效的、实用的和高质量的软件的学科。它涉及程序设计语言、数据库、软件开发工具、系统平台、标准、设计模式等方面。 在现代社会中，软件应用于多个方面。典型的软件有电子邮件、嵌入式系统、人机界面、办公套件、操作系统、编译器、数据库、游戏等。同时，各个行业几乎都有计算机软件的应用，如工业、农业、银行、航空、政府部门等。这些应用促进了经济和社会的发展，也提高了工作效率和生活效率 。
本次的预习之中，我通过对软件之中更加深入的内容的了解，例如UNIX操作系统，还有Windows等等一系列的优质的操作系统，还对软件工程的开发过程之中的问题的定义，可行性，需求，等等只是的了解，而且本次的题目又让我对这些知识有了较好的认识。
对于unix不是太了解，虽然书上有部分介绍，但也只能看懂个大概。对于软件工程这个概念的提出，我倒是很感兴趣，软件系统的开发是按阶段进行的，每个阶段都要明确其工作目标和实现该目标所必须的工作内容以及达到的标准。希望从老师的讲解中明白更多。
本次计算机导论的课前预习使我对软件的知识有更一步的了解，有更深的印象。本次课前预习题目不难，需要同学们对课前预习的知识有很深的了解就可以很轻松的做这些题目。通过这次课前预习答题情况，使喔对这些知识有更多的自信了。
本次知识点感觉不容易理解，在书上找了很久才找到，自己并不是很能理解，掌握程度并不是很好，对于题目没有十足的把握全对，题目还是具有挑战性，比较难，书本内容比较复杂，并且比较多，对我来说，还是十分的抽象。
本次题目主要是复习前面的操作系统相关的知识和介绍软件工程，主要是讲了软件工程的定义，以及它涉及到的软件开发过程，以及可以从事那些跟软件相关的职业。总得来说这次的题目难度较大，不容易从书本上找到，做的不好。
软件危机指的是在计算机软件的开发维护过程中所遇到的一系列严重问题。软件工程是一门研究用工程化方法构建和维护有效的、实用的和高质量的软件的学科。它涉及程序设计、数据库、软件工具开发、系统平台、标准及设计模式等方面。
本次课前预习让我深刻了解到了自己对于软件方面知识的不足，也激发了我对于计算机的学习兴趣，我对于计算机导论特别是软件工程有了更深刻更清晰的体会，我之后会更加努力，更加积极的学习有关软件工程方面的知识，争取成为一名软件工程师。
通过本次预习，我对操作系统，软件工程等知识有了进一步了解。知道了软件工程的定义，软件工程的开发过程以及软件工程涉及哪几个方面。还知道了操作系统的功能以及各种不同的操作系统，例如Windows，Unix等。
这次题目涉及到上一节的软件规模、操作系统的功能、计算机系统提供的服务、UNIX操作系统的组成，还有下一节的软件工程概念的知识，难度不大，完成作业感觉很轻松，但是要熟练掌握这些知识，还是要花费不少时间的。
2.12121221212211e+103
俗话说万事开头难，就在我迷茫不知所措时， 《计算机导论》这 本书出现了，它为我指明了方向。 《计算机导论》先给我们介绍了计算机的发展史，让我 们知道计算机从简单的计算需求到后来的数字处理， 人工智能等， 几乎服务于各行各业，它简明扼要地介绍了计算机的发展史，以 及许多计算机领域的专有名词， 用事实给我们展现了计算机的神 奇和魅力，吸引着我们投身于这挑战俞机遇并存的行业
我感觉这次的题目更偏向课本，全都是从课本上找出的知识点。相比于之前的题应该要容易多了，但是这次题是简单了，可知识点依旧不太好理解。有些知识点，我感觉还有些懵懂，不明白。希望可以在课上听明白⊙ω⊙ ，就是这样
通过这次的学习，我学到了操作系统的作用以及分类。知道了当前的DOS,WINDOWS,UNIX,LINUXMAC OS等典型的操作系统。知道了软件的作用以及运行状态。开发，维护一个软件的周期和所用到的技术人员和关键技术。
通过本次预习，了解到了软件的定义、分类和架构、软件功能、开发规模和工作方式、操作系统以及软件工程。在软件中，最重要的是操作系统，它使每个人都能使用计算机成为可能。而软件工作是我们身为计算机学院学生今后从事软件开发必须学习的知识。
此次题目涉及的是软件方面的内容，包括软件、系统、软件工程等。操作系统也是软件，它被定义为用以控制和管理计算机系统资源的软件。软件工程是研究如何以系统性的、规范化的、可定量的过程化方法去开发和维护软件的学科。
本周的内容 让我们对计算机有了更加深入的了解 学习计算机的操作系统以及软件工程 为以后的学习奠定基础 而且本章内容 需要对文本有一定的了解 不是简单的找文字 需要我们对这些内容有一定的了解 明白计算机的操作系统与应用软件和硬件的关系
软件开发流程即软件设计思路和方法的一般过程，包括设计软件的功能和实现的算法和方法、软件的总体结构设计和模块设计、编程和调试、程序联调和测试以及编写、提交程序，具体开发流程根据软件规模而定，在开发过程中还有各种测试。
通过本次预习，对操作系统有了更深入的了解，也了解了计算机发展过程中的软件危机，和软件工程的由来。也了解了软件工程所涉及到的各方面内容。通过题目，对上节课学习到的软件，操作系统进行了预习，同时也对预习的软件工程方面的知识有巩固作用。
本次预习的题目涉及的内容领域比较广泛，大部分是和软件工程有关的，主要着重于软件这一方面，让我们更加加深对软件的理解，在设计程序时要考虑诸多的问题，涉及方方面面，能够了解用户的需求............
软件是计算机系统设计的重要依据。要想使计算机系统总体具有较高的效用，在设计计算机系统时就必须统筹规划好软件与硬件结合的层次关系，同时还必须兼顾用户的需求。软件工程是我们计算机科学与技术学院的一个专业方向，我们研究软件就先要了解软件的本质。
今天预习了软件工程这一节，同时通过预习中的几个题目对上一张的内容也进行了复习巩固。对于上一节的内容对于操作系统的功能等有了一个更深的印象。同时对于明天即将上的内容有呢一个大致的理解，同时也是对于软件工程这一个学科有了清楚的认识。
通过这次做课前预习的题目，我的感悟如下所示：这次的课前预习题目考察的知识点都是关于软件的。我对这次题目所涉及的知识点理解程度还可以，这次课前预习题目所涉及的知识点不是太困难。这就是我对这次课前预习题目的感悟。
本次课程学习了关于软件的相关概念，了解到计算机软件的相关分类，以及操作系统在计算机软件中的重要作用，体会到了windows与linux优缺点，同时明白了软件工程的相关定义，对本专业的认识又有了新的了解与认识。
通过本次预习，我更深入地了解了如下几个方面的知识：操作系统、软件工程、软件开发过程、用户界面与用户体验等内容，这充分地激发了我的兴趣。因此除了书本知识，还进入互联网进行更加深入的学习。相信这对我理解课堂的内容有极大的帮助。
操作系统是用于控制和管理计算机系统资源的软件。在计算机系统中，CPU是计算机硬件的核心，是计算机系统的核心。操作系统则是计算机软件的核心，是计算机系统的大脑，是整个系统的控制中心。用户可通过命令方式、系统调用和图新界面这三种方式获得计算机系统提供的服务。
用户一般可以通过以下三种方式获得计算机系统提供的服务1）命令方式2）系统调用3）图形界面；操作系统用以实现对整个计算机系统资源的管理与控制，为其他软件或程序提供开发，运行，和应用的环境，管理计算机硬件和软件的资源，合理地组织计算机的工作流程，为用户提供方便，有效，和安全的工作环境。
本次预习任务是关于软件工程111111111111111111111111111111111111111111111111111111 1111111111111111111111111111111111
做完这几道有关软件工程的题目后，我发现自己对于软件工程的知识点完全不熟，主要是不能够理解有关知识点的内容，对于这些知识点也未能花时间去好好看书，上课没听懂的耶没有花时间去看，所以对于软件工程的内容还有待去理解。
1.11111111111111e+101
本次预习主要预习了与操作系统和软件工程相关的知识。对于什么是软件工程，自己在曾经大二的时候对什么是软件工程并没有一个确切的认识，经过了这段时间的学习，我渐渐明白了，软件工程是一门管理和技术相结合的学科，它运用了许多方法、模式、技术，来加快进度、提高质量，使代码更加健壮、易于理解，我们应当好好学习并了解它。
通过本节题目的预习，我学习到了软件和软件工程的具体定义以及它是软件危机之后提出的。还学习到了关于操作系统的功能作用，以及具体不同操作系统的分类和差别。还预习到了关于软件行业职业的具体介绍及其相关功能。
随着人们对软件需求量的剧增和对软件正确性的更高要求，软件的规模越来越大、结构越来越复杂，软件维护的难度越来越大。软件危机指的是在计算机软件的开发、维护过程中所遇到的一系列严重问题。在软件危机后提出了软件工程的概念。
操作系统为计算机硬件和应用程序提供了一个交互的界面，并指挥计算机各部分硬件的基本工作。 操作系统的作用类似于城市交通的决策，指挥，控制和调度中心，他组织和管理整个计算机系统的硬件和软件资源，在用户和程序之间分配系统资源。
这次的题目有些难度，有几道题目是书中非常细节的部分，有些题目内容都不是一个小节的，需要进行仔细的阅读和耐心的总结，尤其是对于软件工程的一些内容很陌生，软件开发的过程理解不是很到位，希望在课堂上获得有关内容的解释。
这个主要与锌的操作系统和软件开发的相关知识。软件工程是研究如何以系统性规范化的可定量的过程方法去开发和维护软件。而软件开发主要有问题定义，可行性研究，需求分析，总体设计，详细设计，程序开发，软件测试。
通过本次对于软件工程的预习，我对于软件工程有了新的理解，作为软件技术的核心，软件工程的发展水平能够大致反映整个软件界的状况，而其需求的人力、财力也是最大的，软件工程同时是计算机科学中的主流分支，我们应加紧掌握。
本次预习了关于软件工程的相关知识，软件是计算机的重要组成部分，对软件的了解是必要的，计算机有一个分支就是软件工程，所以对此的学习比较重要，需要上课认真听讲，本次的题目相对来说不算太难，好好预习应该正确率还行。
本次预习作业难度适中，主要考察了软件的定义，软件与硬件的关系，软件的架构和操作系统的相关知识。通过翻阅课本和查找相关资料后我能够很好地完成，希望我继续努力，保持学习兴趣和学习热情，不断努力提高完善自己。
软件工程即是一门研究用工程化方法构建和维护有效的、实用的和高质量的软件的学科。它涉及程序设计、数据库、软件开发工具、系统平台、标准及设计模式等方面。软件系统的开发是按以下阶段进行的:问题定义、可行性研究、需求分析、系统设计、程序开发、软件测试以及软件维护。
通过本次预习，我了解到软件危机的历史，知道了软件工程的概念，和软件开发所需要的步骤，还有软件行业的一些职业，有管理类，开发类测试类还有维护类和销售类工作人员共同工作来制作一个软件我希望自己能找到自己所长。
这一次的预习作业出的十分巧妙，相对于其它的课前预习，这一次的课前预习更像是一次课后作业，它不仅概括了我们要学的内容，还涉及到了我们已经学过的内容，而且这一次的课前预习要求对书中的知识点掌握十分细致。。
操作系统是计算机很重要的组成部分，起着连接用户与计算机，管理计算机的各种资源等等作用。而软件工程的提出又给计算机发展提供了新的动力。软件工程其实是为了解决软件的使用问题，让人能刚好更好地操作计算机。本次题目就软件的一些概念进行了考察。
这个星期我们开始了对第三章内容的学习，开始接触到了软件，无论在手机还是电脑，都离不开软件，这次预习之后，了解到了软件的定义，知道了软件是什么，同时还了解到了软件的分类方式，希望在之后的学习中把软件这节学好。
软件工程是一门研究用工程化方法构建和维护有效的、实用的和高质量的软件的学科。它涉及到程序设计语言，数据库，软件开发工具，系统平台，标准，设计模式等方面。在现代社会中，软件应用于多个方面。典型的软件比如有电子邮件，嵌入式系统，人机界面，办公套件，操作系统，编译器，数据库，游戏等。
是一门研究用工程化方法构建和维护有效的、实用的和高质量的软件的学科。它涉及到程序设计语言，数据库，软件开发工具，系统平台，标准，设计模式等方面。在现代社会中，软件应用于多个方面。典型的软件比如有电子邮件，嵌入式系统，人机界面，办公套件，操作系统，编译器，数据库，游戏等。
还是比较难的，有一些东西没有，总的来说，还可以，关于软件的东西还是很重要的，还是要多看，知识点比较多，比较难记，学的还可以，结构比较复杂，还是要多看书，多学习，长长见识，希望能学到更多有用的东西，努力。
本次题对上节内容进行了回顾，发现了还有些问题是不懂，没多大印象，还介绍了软件工程涉及的点，但是感觉有点抽象，对它具体是干啥的有什么作用还是有点不懂。希望老师多多介绍，让我们多加接触有关软件工程更广的知识
软件工程属于实践学科，不管你的关注点是软件还是工程(工程管理)。对实践学科，当然是深入实际是第一要务。现代软件工程领域的创新都是来自于冲在一线的工程界。并且最近几年将很多心理学因素融入其中，认识到人的局限性。
在之前的软件介绍到现在的软件工程，更加了解了软件的设计要什么，目的是什么。在这的基础上更加了解了软工要做的工作和各种类型，要做的具体工作。算是给之后的内容做了提前的了解了吧，但还是没要较深入的了解这么学科。
这一课的作业做起来不是特别顺利，感觉题目比较难，可能是老师课堂上讲的知识，我还没有搞清楚，不过我会再一次去了解这些相关的知识，去完善我的知识面，争取努力弥补我的这方面的不足，同时相信我能够独立的完成。
本次预习加深了我对软件工程概念的理解，它并不是仅仅制作出一个软件，而是要制作出一个有效实用的高质量的软件。复习了有关操作系统的知识，它对于计算机意义重大，组织和管理着整个计算机系统的硬件和软件。它们都将是我们今后要研究的重要内容。
这一课的作业做起来不是特别顺利，感觉对题目不是很了解，可能是老师课堂上讲的知识，我还没有搞清楚，不过我会再一次去了解这些相关的知识，去完善我的知识面，争取努力弥补我的这方面的不足，同时相信我能够独立的完成。
这一次的计算机导论的课前预习的题目，所包含的内容很多，有整个第三章的内容。考察课操作系统，软件工程，软件分类，软件架构。难度适中，不过十分全面。我已经对这些内容进行了一次预习，但是我还是没有完全掌握。
软件危机催生了软件工程这门学科的产生，软件工程是研究如何以系统性的、规范化的、可定量的过程化方法去开发和维护软件，以及如何把经过时间考验而被证明是正确的管理技术和当前能够得到的最好的软件开发与维护方法结合起来的学科，即是一门研究用工程化方法构建和维护有效的、实用的和高质量的软件的学科。通过本节的预习，学习到了今后从事软件的开发必须学习的知识。
这一课的作业做起来不是特别顺利，感觉题目比较难，可能是计算机书上讲的知识，我还没有搞清楚，不过我会再一次去了解这些相关的知识，去完善我的知识面，争取努力弥补我的这方面的不足，同时相信我能够独立的完成。
本次题目不仅有软件工程的内容，还有前面软件的内容。不得不说，我真的对书本不熟悉，翻来翻去找半天，找到了还不知道答案在哪ヽ(ー_ー )ノ而且突然发现第三章就这么完了，并且没有出现软件行业职业的题目，虽然没什么出的必要。
本次的预习内容是关于软件这一大块知识，并且也有关于操作系统的有关知识。具体讲了操作系统的功能以及其类型。之后又出了一些关于软件工程的有关内容的题目，考察了其定义以及软件开发的过程，让我对什么是软件工程这个全新的概念有了一些了解，让我对是怎样去实现这个庞大的工程，以及程序员还怎么去做等有了思考。
在Linux中使用U盘、光盘等 先使用fdisk –l列表 然后用mount /dev/sda1 /mnt/usbdisk挂载即可。 先fdisk -l 查看你的U盘是ntfs，fat文件格式 再mount -t vfat -o codepage=936，iocharset=cp936 /dev/。..。 /mnt/。.. codepage=936，iocharset=cp936是加装中文显示 挂接U盘 mount -t vfat /dev/sda1 /mnt/up 怎样修改默认的启动方式（文本、图形） Linux以文本方式启动： 启动后，显示文本，需要输入用户名、密码，进入文本方式，如果要进入图形方式，需要键入startx。 以图形方式启动 如果默认以图形方式启动，则启动之后，直接进入x window，提示输入用户名、密码，并进入x window。
操作系统是应用程序和计算机硬件的联络器，控制和管理计算机系统的软件，软件工程是西门研究用工程化方法构建和维护有效的实用的高质量的软件的学科，涉及程序设计等等方面，软件工程如建筑工程一样，也是一门深奥的学科。
第一题，网络调用不能获得计算机系统提供的服务。第二题，软件工程不是在软件危机后提出的。第三题，软件工程不涉及界面设计。第四题，操作系统不负责翻译高级程序语言。第五题，1-2年研制出的是小型软件。第六题，外核不是组成unix的基本部分。第七题，iphone不是操作系统。第八题，软件工程不涉及程序设计语言。
http://www.whutyiban.com/list/new/xy/jisuanjixueyuan/2017-11-21/2609.htmlhttp://www.whutyiban.com/list/new/xy/jisuanjixueyuan/2017-11-21/2625.htmlhttp://www.whutyiban.com/list/new/xy/jisuanjixueyuan/2017-11-21/2609.html
操作系统为计算机提供了一个交互的界面，并指挥计算机各部分硬件的基本工作，人们从不同的角度给操作系统下了不同定义，通常把操作系统定义为用以控制和管理计算机系统资源的软件。为其他软件或程序提供开发，运行和应用的环境。
通过本次学习，我对软件更加的了解，不仅仅局限于软件本身，比如各种操作系统，每种操作系统都有各自的功能，并且不同的系统又自己的一些特性。之后又接触了软件开发，软件工程是在软件危机中提出的。软件开发过程也有许多步骤。
本次题目加深了我对操作系统和软件工程的理解与认识。我明白了操作系统是计算机软件的核心，操作系统的功能不涉及完成高级语言程序的翻译工作。软件工程不涉及界面设计和软件项目的立项。本次涉及的题目并不是很难。
①完成高级语言程序翻译工作是由编译器完成的。②软件工程涉及程序设计、数据库、软件开发工具、系统平台、标准及设计模式等方面。③UNIX操作系统的基本组成部分包括：Shell、内核、文件系统、公用程序。④软件开发过程中要明确各阶段的工作目标、实现该目标所必需的工作内容以及达到的标准。⑤操作系统为应用程序和计算机硬件提供了一个交互的界面。⑥用户可通过命令方式、系统调用和图形界面来获得计算机系统提供的服务。
通过本次预习，我了解到了操作系统以及软件工程和软件开发的相关知识。通过本次学习，让我了解到了以前没有了解过以及思考过的一些东西。虽然目前没有任何开发经验，现在学到的东西也比较浅，但是我相信后面的学习一定能够让我在日后的开发中为我提供良好的理论基础。
这次课前预习怎么说呢.这明明是课后作业.但是温故而知新,多写一次也不是什么坏事.这次围绕着软件展开.首先软件是用户和硬件交流的必须.有了软件人和计算机才能交流.这次题目来源于课本,总体来说并不是很难.
本周将要学习软件工程相关。 软件工程，顾名思义，是将软件当做一个工程项目，是一门研究用工程化方法构建和维护有效的、实用的和高质量的软件的学科。它涉及程序设计语言、数据库、软件开发工具、系统平台、标准、设计模式等方面。
要学习软件工程，学会如何系统的思考，以及养成良好的编码习惯，想学好软件工程，就必须知道软件工程的目标、过程和原则： 软件工程目标：生产具有正确性、可用性以及开销合宜的产品。正确性指软件产品达到预期功能的程度。 可用性指软件基本结构、实现及文档为用户可用的程度。开销合宜是指软件开发、运行的整个开销满足用户要求的程度。这些目标的实现不论在理论上还是在实践中均存在很多待解决的问题，它们形成了对过程、过程模型及工程方法选取的约束。 软件工程过程：生产一个最终能满足需求且达到工程目标的软件
软件工程在我看来，真的是非常有趣非常神奇的一块领域，它包含了详细的流程，明确的分工，和引人入胜的发展前景，操作系统的知识，说实话，我到现在为止都不算是很清楚，有点迷迷糊糊的，但这次的题目大部分还都能完成，只是有点困难。
软件这一章的内容觉的快学完了，下一节课就是软件的开发。软件的开发现在有一个名字-----软件工程。这是在讨论软件危机之后提出来的，软件危机是指在计算机软件的开发维护过程中所遇到的一系列严重问题，为了解决这一危机，就提出来了软件工程这一学科定义，这是把软件工程当成了一门知识，可见它变得如此重要。不仅如此现在个个国家都在呼吁人们学习计算机知识，所以身为计算机本专业的我们很应该努力学习！
本次课前预习内容覆盖面很广，而本章知识比较多，光计算机操作系统就有很多种，而且每一种都有其相应特点。另外，本章主要涉及到部分是软件工程这一部分，对于软件工程这一学科的定义，还有软件的开发过程，晦涩难懂，只能懂其大概的框架，细细理解很难。
这次的题目，有很多考察的是书本上的基本知识，需要认真预习过书上的知识。这次主要考察的是操作系统和软件工程的一些知识，包括操作系统的功能，软件危机，软件工程的学科定义以及软件开发的过程。我认为这次的题目难度较高。
本次预习，我主要对软件中的操作系统有了一定的了解，知道了操作系统的不同定义以及操作系统的主要功能，还知道了常见的操作系统有哪些。除此之外，我还了解了有关软件工程的一些知识，知道了软件危机以及软件的开发过程。
软件的进度相对落后，软件是灵活的，因此，软件没有绝对的规范，但有一些大的方向。不少职业来源于此，软件是用户与硬件的接口，其中需要不少类人不懈的努力，程序员只是期中很普通的一类人，但现在还是稀缺资源，软件工程也是我们以后一个大的专业。
我感觉本次的题目比较容易，在课本上都可以找到，但是如果要记下来的话，就要花费很多时间，内容也比较多，但是本章的条理还是很清晰的，通过对软件的架构，软件的分类，从软件的功能，开发规模和工作的几个方面进行了很清晰的介绍。
软件工程是一门研究用工程化方法构建和维护有效的、实用的和高质量的软件的学科。它涉及程序设计语言、数据库、软件开发工具、系统平台、标准、设计模式等方面。软件工程学科的理论基础是数学、计算机科学。软件工程的研究和实践涉及人力、技术、资金、进度的综合管理，是开展最优化生产活动的过程
在计算机发现的早期，软件开发过程没有统一的、公认的方法或指导规范，程序设计被看做纯粹的个人行为。随着人们对软件需求量的剧增和对软件正确性的更高要求，软件的规模越来越大、结构越来越复杂，软件维护的难度越来越大。
这次的题难度较大，涉及到了一些软件工程方面的内容，感觉这个领域自己是比较陌生的，但同时这个领域也是最重要的，虽然难度较大，但只要努力学好了，就会有一种成就感，也能掌握更多的知识来丰富自己，在课上要认真听课。
随着信息技术的高速发展并迅速渗透到社会生活的各个方面，计算机日益成为人们学习、工作、生活不可缺少的基本工具，再过不了几年，不会使用计算机，就会象不识字一样使人举步维艰， 计算机学习 心得体会。进入大学，计算机无时无刻在伴随着我们，给我们在学习的生活增添了乐趣
本次题目包括对上次课程的考察和对软件工程的预习。通过本章节的学习，我们了解了软件工程的概念，认识到了软件的开发过程以及关于软件开发的各种职业。题目所涉及知识点我想我掌握的不是太好，所以题目对我来说还是有些难度的。
通过本节课预习了软件工程的定义。软件工程是研究如何以系统性的，规范化的，可定量的过程化方法去开发和维护软件，以及如何把经过时间考验而被证明是正确的管理技术和当前能够得到的最好的软件开发与维护方法结合起来的学科
对于操作系统还是比较感兴趣的，书上也介绍了好几种，看完之后对于这几种操作系统的大体发展过程，各自的组成以及各种优点也有了比较清晰的了解，因为以后自己的电脑也要装系统就看得比较仔细一些，另外还搜索了一些资料对比了一下，但是仅仅是查资料还是无法体会它们之间的差别。
本次题目涉及到各种方面的概念，比如软件工程，操作系统，软件开发的流程设计，涉及到的历史。在做题过程中不断翻阅书籍，得到答案，再加以理解选出正确答案。在做题过程中也不断加深自己对这些知识点的印象，将之写在脑子里面。
这次的预习还比较简单许多内容都已经见过，各种各样的东西在这样的一个学习计算机的过程中经历的差不多许多方面都能找到一些支持，在学习的过程中学到了计算机思维，计算机的应用和计算机的各种方向的发展，这都足以让我受用了。
这次题目主要讲了软件工程相关的知识，如操作系统的功能，定义。软件工程的定义。虽然这些题是一半讲操作系统，一半说软件工程。但是关于软件的许多知识皆未涉及。故我等学生需自己在课上课下了解，并基本掌握这些知识。
操作系统是应用程序与计算机硬件的“中间人”，它为两者提供了一个交互的界面。操作系统用以控制和管理计算机资源的软件。可从三个方面来理解:系统观点-计算机资源管理，用户观点-用户使用计算机界面，软件观点-程序、数据和文档的集合。
软件工程是一门研究用工程化方法构建和维护有效的、实用的和高质量的软件的学科。它涉及程序设计语言、数据库、软件开发工具、系统平台、标准、设计模式等方面。 在现代社会中，软件应用于多个方面。典型的软件有电子邮件、嵌入式系统、人机界面、办公套件、操作系统、编译器、数据库、游戏等。
本周我们学习了有关计算机软件工程部分知识的学习，在此过程中，我们了解到了很多有关软件工程的基础知识，包括软件工程的概念，开发过程等，尤其是开发过程，可以说是十分详细的，我们在将来软件的开发过程中，也要仔细认真的了解这部分知识，应用等，做出适合用户的程序，软件
计算机的操作系统是计算机软件的核心，是计算机系统的大脑，是整个系统的控制中心。预习过程中有许多种操作系统，各有各的优点与缺点，但他们都遵循着使人们用得更方便，性能更高的原则。让我惊异的是，软件工程是因为出现了软件危机才被提出的，而非作为一个必要的学科出现。
如今，软件开发的生产率已远不能适应计算机应用的需求。因而，软件开发对于今后计算机的发展有这巨大的带动作用。软件的开发过程犹如一个人的一生，经历了从孕育到诞生再到成长再到成熟最后到衰亡的这样一个漫长的过程。
本次题目涉及到了软件工程的基本基本概念和知识，软件工程的涉及部分，Unix操作系统的基本组成部分，中型规模软件的研制期限，操作系统的有关知识，用户获得计算机系统帮助的三种方式，操作系统的功能。全面的帮助我们预习了上课所需的内容。
本次的题目难度适中。主要预习了软件工程的相关内容。软件工程涉及数据库，程序设计，软件开发工程，系统平台，标准及设计模式，开发工具和程序设计语言等......对于软件工程的学习，有利于我们对软件的框架有初步印象，利于我们对之后构建软件相关知识吸收
本周预习，学了软件工程 ，包括其定义及各种内容，涉及知识点多且，复杂有专业性，理解起来难度 较大，需要老师进行讲解，来深入学习，且需要在课后多次复读学习，熟悉且熟练操作，才能掌握软件工程的内容，达成学习目的。
这次的课前预习大部分都是课本上的知识点，在做过这些题目之后，我发现有些知识是非常被我们忽视的，通过这样的预习，让我明确了自己复习工作应该从哪里开始。这次的课前预习，总的来说可以概括为以下几点： 1.软件架构及软件架构的分层； 2.操作系统的定义，操作系统的功能以及用户获得计算机系统提供服务的方式； 3.常用的几种计算机操作系统的比较以及它们各自的组成部分； 4.软件工程的定义，软件开发的过程及软件涉及的各个方面； 这就是本次的预习报告，总的来说这些内容都是重点，一定要好好理解、记忆！
这次预习，涉及到了软件,操作系统,以及软件工程等,方面的问题，其中有软件工程这个学科的定义,操作系统的功能,软件工程涉及到的如程序设计,数据库,软件开发工具,系统平台,标准及设计模式等方面,还有软件按周期的分类
这一次预习补充做的是有关软件，操作系统的知识，对于操作系统有更进一步的了解，特别是之前不太了解的UNIX和Linux这两种操作系统，还有对软件工程的定义和它所涉及的哪些方面及软件开发过程有了进一步了解。
emmmm自己预习，做起来题目比较难…… 翻了半天书书。通过预习自己掌握了操作系统功能，定义，重要性，以及各种操作系统之美， 我还了解到软件工程，由于软件危机的爆发，软件工程崛起，它开发的过程。看到了软件行业个个职业，挺不错的，每一份工作都很有意思。
这次涉及到操作系统，软件等内容，到处翻书到处找，但也在这个过程中，对这些知识点有了一些模糊，初步的了解，什么是操作系统，常见的几种操作系统，软件的开发过程，还有一些用户界面展示，每天玩手机，现在学习其中的奥秘。
本次，预习了软件开发过程的相关知识，以及软件工程的学科定义，软件工程是一门研究用工程化方法构建和维护有效的，实用的和高质量的软件的学科。我们需要与用户充分沟通，了解需求，并为之寻求解决方案，以实现相应软件的开发
通过预习，了解了软件工程的基本概念，知道这个词是在“软件危机”爆发后提出的，要对软件进行工程化的构建。大体知道了各类规模软件的周期，知道了软件的开发是要分阶段的，软件的开发过程也是有目的性的，软件的维护也是很重要的一块。
通过学习，我才知道了软件工程的含义：这是一门研究用于工程化方法构建和维护有效的，实用的和高质量的软件的学科。 软件的开发分为好几个过程：1。问题的定义。2.可行性研究。3.需求设计。4.总体设计。5.详细设计。6.程序开发。7.软件测试。8.软件维护
通过这次预习，我了解了操作系统的功能以及各种操作系统（DOS系统，Windows系统，UNIX系统，Linux系统，Mas OS系统）的特点及功能。还有软件工程的学科定义和其涉及的专业知识。使我们对软件工程有了更加深入的了解。
这次的算是综合性题目吧！我觉得应该是的，因为有一点儿难度。翻书也不是太好找。有的就是根据自己理解的做的。对于操作系统那一块的知识点不太熟悉，因为之前就是粗略的看了一下，这次重新看了之后发现有点儿难度。
本次的学习让我对于软件工程、计算机系统、操作系统都有了更深的了解，同时学习了关于这些方面的历史，更深入的了解了这个学科，以及有关于书上关于软件的用户体验的部分，都让我对于计算机与软件工程有了更加深入的了解。
本次题目较难，加深了我对软件的了解，操作系统也是一种软件，软件让用户更好的与硬件对话，极大的方便了用户操作。同时软件开发是一个复杂而又繁琐的过程，需要团队，也需要能力。10101111110000011
本次课前预习题目内容涉及操作系统的定义、UNIX操作系统的组成、软件工程的定义、软件的开发过程和用户界面与用户体验。软件工程是一门研究用工程化方法构建和维护有效的、实用的和高质量的软件的学科。关于软件工程的题目也不算太难。
这一次的题目对软件工程的定义、软件开发过程、操作系统等知识点进行了考察。本次题目对知识点的考察比较细致；操作系统的定义、功能；软件工程的定义、软件开发过程的步骤。总的来说难度较以往增大，需要对课本的内容进行精读。
了解到，软件危机是指在计算机软件的开发和维护过程中所遇到的一系列严重问题。主要是两个方面的问题，一是如何开发软件，即怎样满足对软件日益增长的需求；二是如何维护软件，即维护数量不断膨胀的已有软件。所以，1968年，北大西洋公约组织的计算机科学家，在联邦德国召开国际会议，讨论软件危机问题。正式提出"软件工程"这个名词──软件工程学诞生了
本章的重点知识点内容，并没有用黑体字加粗列出。刚开始直接对着书找答案做题很累，还找不到，没效率。但是放弃了之后认真把本章看了一遍，画出重点知识之后再做题发现全部在书本上，都看到过。题目也比较轻松的就完成了，而且还记住了知识。
软件工程即开发软件的工程。软件的开发不是一个简单的过程，软件开发可分为问题定义、可行性研究、需求分析、系统设计、程序开发、软件测试和软件维护七个阶段，软件的开发是按阶段进行的。软件工程是为了简化软件开发的过程而被提出的
(1) Kernel(内核) (2) Shell(外壳) (3) 工具及应用程序 UNIX Kernel（UNIX内核） 是UNIX操作系统的核心，指挥调度UNIX机器的运行，直接控制计算机的资源，保护用户程序不受错综复杂的硬件事件细节的影响。 UNIX Shell（UNIX外壳） 是一个UNIX的特殊程序，是UNIX内核和用户的接口，是UNIX的命令解释器、也是一种解释性高级语言。
本次预习的主要收获是真正了解了什么是软件工程。软件工程定义比较抽象，具体包括有程序设计、数据库、软件开发工具、系统平台、标准及设计模式等方面。这个过程中，我们要明确各阶段的工作目标、实现该目标所必须的工作内容以及达到的标准。
通过此次预习，我了解了软件工程的基本知识点，明白了软件开发过程中要明确软件开发的工作目标、实现该目标所必需的工作内容以及达到的标准。软件工程是一门研究用工程化方法构建和维护有效的、实用的和高质量的软件的学科。
本次作业涉及的题目主要说的是操作系统和软件开发。书本上的内容介绍了操作系统、硬件、软件及用户之间的关系，还介绍了主要的一些操作系统软件，包括手机与电脑的主要操作系统。还从操作系统的一些功能着手，说明了它的重要作用。
软件是用户与硬件之间的接口与，用户主要是通过软件与计算机进行交流的。用户一般可用命令方式、系统调用、图形界面3种方式获得计算机系统提供的服务。操作系统为计算机硬件和应用程序提供了一个交互的界面，操作系统是计算机软件的核心。UNIX操作系统包括4个基本的成分：内核、Shell、文件系统和公用程序。
新的一周就要开始了，又要学习新的知识了，最重要的是期末考试又进了一步。然而现在什么都不懂，感觉好阔怕。还有一个月的时间，要抓紧时间好好复习了，不然期末真的会死翘翘。。。计算机导论我觉得还是挺重要的一门课。
此次预习学习到了有关操作系统中操作系统的概念的有关知识，以及DOS，Windows操作系统，UNIX操作系统，Linux操作系统，等操作系统的优缺点，还有软件的一些知识，以及软件危机的概念，以及软件开发的一些知识
这次预习包含的知识面比较广，我注意到了有操作系统的复习和软件工程的大体内容。在做预习作业的过程中，我感觉到十分迷茫，因为预习并不是很深入，导致我对书本内容不够熟悉，也对这次作业没有信心，认为对我来说有些困难。
本次预习主要是计算机操作系统。计算机运行的第一个程序是操作系统，操作系统是用以控制和管理计算机系统资源的软件。在计算机系统中，CPU是计算机硬件的核心，是计算机系统的心脏，操作系统是计算机软件的核心，是计算机系统的大脑，是整个系统的控制中心。用户一般可以通过命令方式，系统调用和图形界面获得计算机系统提供的服务。现在主流的操作系统是windows和linux，主流操作是图形操作。
操作系统是应用程序与计算机硬件的联络员，用以控制和管理计算机系统资源的软件，是计算机软件的核心。 软件工程是一门研究用工程化方法构建和维护有效地、实用的和高质量的软件的学科，涉及程序设计、数据库、软件开发工具、系统平台、标准及设计模式等方面。
本节主要是学习了各种软件分类和定义等。以前从来不知道原来操作系统也是软件的一种，软件的定义范围竟然这么庞大，感觉自己错误的知识观念得到了纠正，也了解到了现在世界上流行的操作系统的各种特点优缺点等，这对我们将来无论是购买电脑还是手机都应该是一个不错的帮助。
本节我懂得了计算机的操作系统的功能以及软件工程所涉及的方面。我还懂得了UNIX操作系统，是一个强大的多用户、多任务操作系统，支持多种处理器架构，按照操作系统的分类，属于分时操作系统，它包括内核，Shell，文件系统和公用程序。
本次的题目所涉及的知识点较多，总体来说难度相较更大了，所涉及范围有软件工程和操作系统，所出的题目也是需要很细心才能找得到，题目大多隐藏在不起眼的地方，所以增大了对课本的掌握度，掌握程度也存在很大的问题
本次的题目有些难度，通过本次预习，我学到了操作系统的功能，软件工程的定义（一门研究用工程化方法法构建和维护有效地、实用的和高质量的软件的学科。它涉及程序设计、数据库、软件开发工具、系统平台、标准及设计模式等。收获了很多跟软件工程有关的知识。
题目的答案是书里都有的，仔细阅读就能找到，只是有些句子读起来总是觉得有歧义，所以偶尔会犹豫不定。也让我惊讶于课本上知识点的丰富性，感觉每个句子拿出来都能改成一个填空题。这样的话，需要记忆的东西也就有点多了，以至于自己想边预习边总结知识点的时候有点手忙脚乱，不值从哪下手
软件工程是一门研究用工程化方法构建和维护有效的、实用的和高质量的软件的学科。它涉及程序设计语言、数据库、软件开发工具、系统平台、标准、设计模式等方面。软件需求包括 3 个不同的层次――业务需求、用户需求和功能需求。
操作系统是计算机运运行的第一个程序，操作系统指挥计算机各部分硬件的基本工作的同时还为用户与程序提供交互的界面，控制着整个计算机。软件工程是在软件危机时正式提出来的概念，设计程序设计，数据库，软件开发工具，系统平台，标准及设计模式等等。软件开发还分阶段，上一阶段完成才能进行下一阶段的工作。
这次预习的导论题目非常容易，很好的巩固了我们新学习的知识，我对计算机导论的兴趣越来越大了，令我痴迷而向往，计算机科学真是一门神奇的学科，不说啦，我要去学习计算机导论了，我要学到神魂颠倒天崩地裂，这门学科令我精神抖擞。
软件工程。软件危机指的是在计算机软件的开发维护过程中所遇到的一系列严重问题。 软件工程（SE）是研究如何以系统性的、规范化的、可定量的过程化方法去开发和维护软件，以及如何把经过时间考验而被证明是正确的管理技术和当前能够得到的最好的软件开发和维护方法结合的学科。 软件的开发过程为，问题的定义－要解决的问题是什么；可行性研究 －对上各个阶段所确定的问题是否有行得通得解决方法；需求分析－为了解决这个问题，目标系统需要做什么；总体设计－概括的说；应该如何实现目标系统；详细设计如何具体的实现这个系统；程序开发；软件测试；软件维护。用户界面（UI）和用户体验（UE）。 用户界面，包括用户界面的设计流程，一致性原则，可用性原则。用户界面设计的三大原则为置界面于用户的控制之下，减少用户的记忆负担及保持界面的一致性。 用户体验，以iPhone为例，只留一个home键，使用隐喻，使用动画，一目了然，即看即点；灵活运用手势支持。 软件行业职业。分为项目管理类：项目经理、QA工程师，开发类：软件需求分析师、软件开发工程师、系统分析师、系统架构师；测试类：软件测试工程师，软件产品测试经理，系统类，安全类，维护类：网络工程师、IT基础设施工程师、网络安全管理员、安全开发工程师数据库管理员、系统管理员，销售类：售前工程师、售后技术工程师、系统集成工程师。
操作系统是计算机系统的内核与基石，管理计算机软件与硬件资源的程序。软件是一门研究用工程化方法构建和维护有效的，实用的和高质量的软件的学科，其实我没太搞懂软件危机，但总觉得我们现实生活中软件够多了呀，只有上课听老师讲了。
本次题目书上基本有，还是比较简单，但是也有不会的，比如不同软件规模有不同的研制时间，而关于这个我还不是很了解，老师上课讲过但是在百度上查不到，那是不是关于这个是不能用时间衡量呢，在问答中也没有回应，希望老师可以在问答中补充。
本次作业涉及的题目主要说的是操作系统和软件开发。书本上的内容介绍了操作系统、硬件、软件及用户之间的关系，还介绍了主要的一些操作系统软件，包括手机与电脑的主要操作系统。还从操作系统的一些功能着手，说明了它的重要作用。
系统软件是指控制和协调计算机及外部设备,支持应用软件开发和运行的系统，是无需用户干预的各种程序的集合，主要功能是调度，监控和维护计算机系统；负责管理计算机系统中各种独立的硬件，使得它们可以协调工作。系统软件使得计算机使用者和其他软件将计算机当作一个整体而不需要顾及到底层每个硬件是如何工作的。
本次计算机导论学习了软件开发等方面，是在现实生活中，应用比较广泛的方面，是当今社会的计算机的主流，当下计算机的发展也是围绕此展开，所以对这部分的学习与巩固是必要的。本次的题目相对来说并不算太难，认真学习后即可作答。
这一次的课后作业难度比较大，而且题目数量比较多，是关于软件、物联网、云计算以及信息熵等的题目，在书本上无法非常直观快速地找到答案，需要对这些知识有一定程度的认知和了解，在平时的积累上多花功夫，尽力学好。
本次课后作业难度略微有些大，有的在书本中不能获取到，需要在百度上查才能做题，这次作业也涉及到了之前的内容，对之前的算是一个回顾，主要包括信息熵，当然也有现在学的，软件还是考察比较多的，还有云计算，物联网
这一次导论的课后作业是有关于信息熵的计算，计算机软件，云计算，物联网的相关知识，内容较为多，题目的难度还是较大的，不能直接从书上去获取，需要查阅相关资料才能做出题目来，我觉得我对于这些方面的掌握程度还是较为一般的。
这次计算机导论的题目是有关于感知、软件、云计算、物联网、信息熵的知识点。难度比之前一周的题目大一些，有些东西是在网上查到的，在书上没有找到，而且脑海中没有印象。软件架构出了好几道题目，感觉这个知识点比较重要。
本次题目难度较大，做起来很吃力。但是没有翻书去找，等到出来答案时候在去找书，就当做检测自己的一次机会。虽然对不了几个，但可以借此机会鞭策自己。找到自己的不足，以后才可以更好的学习。不会因为太多的不会而气馁，心态放平
在本次的作业完成中，我复习了计算机导论这几章的知识，也对实验的内容也有了进一步了解，例如dos命令，dos的基本文件。软件的知识，软件按功能可分为系统软件和应用软件，信息熵的计算，和对软件的基本架构。
这次题目既有以前的知识又有新学的知识，相比上次课后作业来说题目较难一点，这次的题目概念性的问题较多，考察的比较系。同时也有理解性的问题，不是一眼就能看出答案那种。软件架构方面是我们本周刚刚学的，接触时肯定有熟悉处也有陌生处。而之前的就比较熟悉了。
本次作业知识点比较全面，所涉及的范围比较大，量比较多，题目难度比较大，但是题目的答案在书本中都可以找到，这次题目涉及软件，软件构架，操作系统以及linux系统，考点比较细。还考察了信息熵的计算方法等。
这次的作业包括了以前所学的知识，知识点比较琐碎，但总体来说都是重点。因此，做好相关的复习工作非常重要，并且这样也可以帮助自己查漏补缺，实现知识点的深刻记忆和掌握。这次的作业主要涉及以下几点： 1.信息熵的计算公式和信息熵表示的含义； 2.云计算的相关知识点，大部分都是上课时强调过的； 3.计算机体系结构及其组成； 4.软件相关知识点和软件工程的知识； 这就是本次作业所涉及的内容，我们一定要做好相关复习工作！
通过本次题目我进一步认识了解了软件、软件架构和操作系统等概念。软件是用户与硬件之间的接口，而操作系统是属于系统软件的一部分，用来控制和管理计算机系统资源。操作系统多种多样，包括DOS、Windows、UNIX等各种操作系统。
软件工程是研究如何系统性的、规范化的、可定量的过程化方法去开发和维护软件，以及如何把经过时间考验而被证明是正确的管理技术和当前能够得到的最好的软件开发与维护方法结合起来的学科。软件架构描述的对象是直接构成系统的抽象组成。
在软件中最重要的应该是操作系统，它是每个人都能使用计算机成为可能。软件工程设计，以后从事软件开发必须学习的知识。用户界面和用户体验，在软件开发中的作用日益凸显。用户界面和用户体验是软件设计必须考虑的问题。
这次的作业对前面所学的内容做了一点复习，同时也巩固了在这周开始学的第三章关于软件的内容，通过这次作业，对之前的内容有了很好的复习，在学习了第三章之后，对与我们生活息息相关的软件有了更深理解，希望以后学的更好。
第一题，软件架构是虚拟的。第二题，软件架构不全取决于架构师。第三题，资源管理器不是支撑软件。第四题，传感器是实际存在的。第五题，软件按功能分类可分为系统软件和应用软件。第六题，程序有结构。第八题，config.sys不是dos的三个基本文件之一。
还要多复习，之前的都忘了。。。。加油。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。你能行。。。。。。。。。。。。。。。。。。。。。。。。。。。。。
本次作业关于软件的分类，架构和系统，还有软件的开发。软件工程是计算机学科中的分支，电脑系统，手机系统都是软件工程的重要内容。本次题目内容基础，看完书基本了解后就能选出来，自己对于软件这方面的知识了解比较薄弱，希望能够提高。
本次我在课下学习了有关计算机架构和软件开发的有关内容了解了软件的分层，操作系统和软件开发过程的有关内容，感觉本次的学习内容较多，学习时不好理解，导致学习这一节时效率低，题目不会做，还要多看书，好好钻研。
我感觉这次的题目更偏向课本，全都是从课本上找出的知识点。相比于之前的题应该要容易多了，但是这次题是简单了，可知识点依旧不太好理解。有些知识点，我感觉还有些懵懂，不明白。希望可以在下次课上听明白，大概就是这样
就成立了由宾夕法尼亚大学的莫奇利和埃克特领导的研究小组。经过几年紧张的工作这个研究小组研制的ENIAC 终于在1946年问世。这是人类历史上第一台被真正应用于实践的电子计算机，也标志着第一代计算机的出现。第一代电子计算机是从1946年到1957年，它的基本电子元件是电子管，内存储器采用水银延迟
一般来讲软件被划分为系统软件、应用软件和介于这两者之间的中间件。软件并不只是包括可以在计算机（这里的计算机是指广义的计算机）上运行的电脑程序，与这些电脑程序相关的文档一般也被认为是软件的一部分。简单的说软件就是程序加文档的集合体。
本节是对软件开发及软件构架分类的一个总体的介绍，通过本节的学习，了解到了pc机和只能手机的各种操作系统，并且对软件构架及分层的定义和意义有了一定的认识。软件工程这个学科是我们计算机科学的一个分支，它涉及程序设计、数据库、软件开发工具、系统平台、标准及设计模式等方面。
1.11111111111111e+137
本次作业难度较大，主要是题量较大，同时考察了对以前知识的复习，比如信息熵的计算和软件的分类以及dos系统，应用软件，操作系统等相关知识，还考察了软件的架构等。在查阅书籍和相关资料后能够基本完成，继续加油吧。
在软件中，最重要的是操作系统，它使每个人都能使用计算机成为可能。本章介绍了Windows,UNIX,和Linux三种操作系统，以及当前智能手机的主流操作系统。软件工程是今后从事软件开发必须学习的知识。只有做好软件工程过程中的每一步，才能降低软件的维护和开发成本。
通过本节课后作业的完成，我了解关于软件的定义内容，关于软件的分类方式以及具体的分类内容，还了解到了软件架构的定义以及分层，还学习到了关于操作系统的种类以及具体形式和作用功能。本周学习对我的认识有很大的帮助作用。
这次的题目还是挺难的，并不简单，涉及到的内容比较多，还有对，之前知识的复习，还是有点遗忘，知识掌握的还行，还是要多看书，不然会忘记，导论这门课总体还是简单的，要多复习，总结，把看到的知识记住，认真学。
常见的软件生命周期模型 瀑布模型 有时也称为V模型，它是一种线型顺序模型，是项目自始至终按照一定顺序的步骤从需求分析进展到系统测试直到提交用户使用，它提供了一种结构化的、自顶向下的软件开发方法，每阶段主要工作成果从一个阶段传递到下一个阶段，必须经过严格的评审或测试，以判定是否可以开始下一阶段工作，各阶段相互独立、不重叠。瀑布模型是所有软件生命周期模型的基础。
操作系统是用户和计算机的接口，同时也是计算机硬件和其他软件的接口。操作系统的功能包括管理计算机系统的硬件、软件及数据资源，控制程序运行，改善人机界面，为其它应用软件提供支持，让计算机系统所有资源最大限度地发挥作用，提供各种形式的用户界面，使用户有一个好的工作环境，为其它软件的开发提供必要的服务和相应的接口等。实际上，用户是不用接触操作系统的，操作系统管理着计算机硬件资源，同时按照应用程序的资源请求，分配资源，如：划分CPU时间，内存空间的开辟，调用打印机等。
这一次计算机导论的课后题目十分的综合，有关于前两章的知识，比如说信息熵的计算以及计算机的体系结构。还有很多关于软件和操作系统的知识。难度适中，正好能够做到让人重新记忆的程度。我对于这些知识已经基本掌握。
设计软件架构是软件开发的重要的环节，它应该为变化而设计，具有灵活性，可扩充性以及可植性。软件架构的分层可以实现有效的分而治之，一般可分为四层，但是具体的层数与组成取决与问题领域和解决空间的复杂程度，同时还要依据分层标准的规则来分。
本次题目主要是对第三章的于软件有关的知识，主要涉及软件的分类和软件的架构的内容，软件的架构是一个系统的草图，分层的数量与组成取决于问题领域和解决空间的复杂程度，同时还有操作系统方面的知识。本次涉及的题目难度并不是很难。
通过这次作业，我对计算机知识有了进一步的认识。知道了软件架构的相关知识，也知道了按软件的功能可将软件分为系统软件和应用软件。也复习了信息熵的计算公式以及各种进制间的转化。还知道了传感器得感知是实际的不是虚拟的。
感觉这次的题目比上次简单。 一般。 不难。б(*｀・´)∂б(*｀・´)∂б(*｀・´)∂ɢᵒᵒᵈ ɴⁱᵍʰᵗ✧*̣̩⋆̩☽⋆ɢᵒᵒᵈ ɴⁱᵍʰᵗ✧*̣̩⋆̩☽⋆ɢᵒᵒᵈ ɴⁱᵍʰᵗ✧*̣̩⋆̩☽⋆ヾ(*・-・)ﾂθ
本次课后作业内容涉及信息熵、软件的分类、软件的架构和操作系统。计算机软件作为一种特殊的产品，其研制和开发过程有着严格的规范和要求，软件架构设计是软件开发的重要一环，且在软件中，最重要的是操作系统，它使每个人都能使用计算机成为可能。
通过本次课后作业，我巩固了第三章所学知识点，已经略微复习了一下第一章。对于系统软件与支撑软件还是有的分不清。软件架构是抽象模型而不是实际组件，分层将功能进行了有序的分组。做本次题目有点吃力，对于前面所学知识有点模糊。
这一次的作业对软件的许多知识进行了复习，对之前学到的物联网、云计算、信息熵等知识也有涉及的题目。题目着重考察了关于软件分类、软件架构的知识，难度较以前的题目来说偏高，需要对知识有比较深的理解。对以前的知识也要有相应的记忆。
对已学的知识还是不能准确的记住与理解，希望老师能再多加讲解，我也会在课下多多自学，复习，尽力把知识点，相关信息，必备技能完全掌握，。相信在未来绝对会贯通这门学科。还需多加努力，也要与其他学科，相辅相成。General
我感觉这次的题目更偏向课本，全都是从课本上找出的知识点。相比于之前的题应该要容易多了，但是这次题是简单了，可知识点依旧不太好理解。有些知识点，我感觉还有些懵懂，不明白。希望可以在课上听明白⊙ω⊙ ，就是这样
本次课程主要学习了软件以及软件的架构还有程序，难度较大，不易理解，但是通过课后的复习查阅资料总算还是有所了解。我觉着对于计算计导论这门课重点不在于老师上课而在于学生在课下的不断理解掌握以及上机实验等等。
此次题目涉及到了软件以及系统等方面的内容。系统软件可以分为操作软件和支撑软件，其中操作软件是所有软件运行的基础。支撑软件包括一系列基本工具。软件架构是一个系统的草图，软件架构描述的对象是直接构成系统的抽象组件。这些内容知识是比较重要 比较核心的，还需进一步的理解深化。
感觉之前的知识忘了不少，快要期末考试了我要抓紧时间复习了，时间不能浪费在磨叽，淘宝和追剧上，要提高效率，拒绝拖延，努力学习，想想要是考的好，回家一定轻松愉快，又是一个愉快的寒假，所以啊，好好努力，争取过年回家过个好年，千万不能挂科呀
本次的课后习题主要考察了有关软件自己计算机操作系统的内容，但同时有几题也复习了前面所学的知识。在这些题目中主要考差了软件的的分类，软件的定义，以及软件架构和分层，让我对上课时老师讲的内容有一个复习，让自己知道哪里还在不懂，自己对这些知识的复习，通过这些习题我温习了重点，以及前面学习的信息熵的知识。
这次课后作业有十道题，做完大概花费了一二十分钟，觉的自己的速度还是太慢，做题过程中还要经常在书上寻找不会的内容，不过也有自己一看就能选出来的。作业中的题主要设计了软件的相关内容，还有一题是信息熵，这几次一直有信息熵的题目，说明信息熵还是很重要的。另外做题时也会有不会的，例如题中有问centos是不是操作系统，可是没有学过，只能在网上搜搜，不过还是找到了。
通过这次的学习，我知道了软件架构是有关软件整体结构和组件的抽象模式。软件架构是一个系统的草图，他是为了变化而设计。DOS的三种基本命令是.sys.com.bat 系统的分层标准包含的准则是 可见度 易变性，通用性，层数。
软件按照功能分可分为系统软件和应用软件。软件构架是有关软件整体结构与组件的抽象模式，用于指导大型软件系统的抽样组件。操作系统是应用程序与计算机硬件的＇中间人＇本次题目较难，有些我并不懂得。希望可以学到更多的知识。
本次试题相比于上次比较难，考察了信息熵，软件等相关知识。感觉对本次试题做的情况不是很满意，有很多题掌握的不好，说明本周上课状态不好，没有认真听讲，打算本周抽时间把上次课的课本知识补上。下周上课一定不能出现这样的情况。
我学到了按软件的功能可以将软件分为系统软件和应用软件；关于信息熵的知识以及各种信息；DOS有三个基本文件； 软件架构是一个系统的草图；软件架构是有关软件整体结构与组件的抽象模式；软件架构对于一个程序来说十分重要。
这一节课中我学到了信息概率方面的计算，，，，和软件的分类，定义，体系结构，云计算，物联网以及虚拟的概念等等。。。。其中，最重要的是软件的学习，软件分为系统软件和应用软件，系统软件又分为操作系统软件和支撑软件
计算机因软件系统的诞生而获得了更多功能和更广泛的应用，它的运行也因此更加有条理和高效率。而各种各样的操作系统则竭尽所能使用户满意，由此形成的良性竞争使得消费者更加受益。操作系统的出现无疑是划时代的事件。
本次作业涉及方面广，涉及知识深，考察学生近期的学习情况，起到了良好的复习作用，亦是给学生一个自我检查的机会。完成作业后，我总结出了自己的不足：对DOS操作系统不熟，对软件方面的知识还不够了解。今后还仍需努力。
软件的相关内容十分详尽，有软件的定义、分类、架构、开发、行业职业简介和操作系统六个内容。记忆的概念点比较多，理论内容也比较繁琐，需要认真整理归纳才能更好地掌握这章内容。这次题目数量稍多，不过困难指数不高，做起来还是比较容易的。
本次课程，我们学习了软件的相关知识，软件有多种分类方式，有些软件的规模真的是特别的巨大，一己之见难以完成，凸现了团队合作的重要性，同时也需要软件架构在宏观上起引导作用，软件工程将会是我们未来大多数人的选择，因此重要性不言而喻
物联网的核心和基础是互联网，物联网的三个特征：全面感知、可靠传递和智能处理。软件按工作方式可分为实时处理软件、分时软件和批处理软件。实时处理软件包括数据采集、数据分析和数据输出。分时软件允许多个用户使用同一台计算机，允许多个程序分时共享硬件和软件资源，或者允许多个联机用户使用计算机的软件。
这次的课后作业有点不寻常啊，十个题不说，还有很多不是软件这块的，是之前的内容，然而做完却很能体现问题，我之前的知识好多都忘了。感觉知识很多，很乱，记不住，记不清。幸亏没有期末考试，没书我就GG和凉凉了。
本次题目考察的是走进软件关于软件定义，分类，软件架构和操作系统的介绍，其中软件架构那部分有点难，不知道软件架构到底是什么东西，还有操作系统到底包括哪些，这些都不太懂，关于软件职业简介方面其实也可以出点题
1.11111111111111e+101
对软件的分类有了一定的了解，巩固了之前所学知识，对计算机的运行过程有了一定的掌握，让我对计算机基本知识有了更深了解，计算机学习不仅有知识的积累，还有实践的操作，我会更加努力学习后面的知识，对计算机的学习还要更进一步。
在本次课堂，我学习了有关于软件更加深入的知识，了解了软件的分类和两类软件相不同和各类的作用，而且还对软件的架构等一系列和软件相关的知识，还专门的对一些操作系统，例如Windows，UNIX一些出色的操作系统进行了解。
通过这次的学习，我学习到了软件的具体分类以及如何通过对软件的操作对计算机硬件进行调控以及对硬件资源进行合理的调配。了解到了软件的工作方式和软件的基本架构。软件在不同的情况下所起到的不同的作用以及原理。
内容好多好多，真心感觉到我的脑容量记不住这么多东西，但这些有时实用的，必要的知识点。嗯，我一定要赶快记住这些知识，那些大佬即使在没上这门课的时候，就已经了解并能运用这些东西了，所以可见这些内容要掌握的必要性，加油，默默学习知识点。
软件架构是指在一定的设计原则基础上，从不同角度对组成系统的各部分进行搭配和安排，形成系统的多个结构而组成架构，它包括该系统的各个组件，组件的外部可见属性及组件之间的相互关系。组件的外部可见属性是指其他组件对该组件所做的假设。
本次课后作业主要是针对软件结构以及前面几周学习的内容，这种内容混杂对于我们还是有一点的难度，因为都要从之前的只是脑海里搜索这些知识。但对于我们对这些知识融会贯通也是很有意义的，相信这些问题能加深我对所学知识的印象
①支撑软件包括一系列基本工具，以及数据库管理、外部存储器格式化、文件系统管理、用户身份验证、设备驱动程序管理、网络连接等方面的工具和程序设计的集成开发环境，它主要包括环境数据库、各种接口软件和工具组。②DOS的三个基本文件是IO.SYS,COMMAND.COM,MSDOS.SYS。③软件分层取决于问题领域和解决空间的复杂程度。④软件架构是一个系统的草图。
这一次的作业帮助我发现了一些细节上的问题，比如关于系统软件中的支撑软件包括什么，软件架构的分层，还有DOS的核心程序等甚至连LINUX的发行版本也有涉及到。这也提醒了我学习时要关注细节，多记忆，多做笔记，多总结。
本节我们学习了软件的相关知识，学习了系统软件和支撑软件，了解了一些系统平台，例如centos windows macos等，除此以外还了解了软件的架构，了解了计算机行业的职业架构师，知道了一条新的发展道路。
本次题目的数量和内容都比之前有所增加，结合了多个单元的知识点，跨度广，但题目的难度并不大，多数都是之前类似的题目，在课本上也都可以找到相关的内容，总体来说还是简单的，涉及虽多，只要按部就班复习就行了。
我感觉这次课后题有点难，支撑软件和关于软件说法错误的两个题不太会做，看课本后还是对应不上题目，可能是自己对于这个地方理解的不透彻。其他题目还比较简单，有几个题涉及了以前学的信息熵、计算机结构体系等知识点。
本次课后习题主要针对软件的相关知识，首先是关于计算机软件的分类，根据不同的分类方式将软件分成不同的种类，如按功能分类将软件分为了系统软件和应用软件。另外就是关于软件系统架构的相关知识，这让我对软件架构有了一个较为清楚的认识。
我软件（中国大陆及香港用语，台湾称作软体，英文：Software）是一系列按照特定顺序组织的计算机数据和指令的集合。一般来讲软件被划分为系统软件、应用软件和介于这两者之间的中间件。软件并不只是包括可以在计算机（这里的计算机是指广义的计算机）上运行的电脑程序，与这些电脑程序相关的文档一般也被认为是软件的一部分。简单的说软件就是程序加文档的集合体。另也泛指社会结构中的管理系统、思想意识形态、思想政治觉悟、法律法规等等。
本次题目主要涉及了软件架构及分层的基本定义，和必要条件和关键影响因素以及操作系统软件的实际例子，还有软件根据不同分类方式所有的类型，算是软件方面知识入门一次不错的检验，题目难度适中，只要认真看了书，就能够基本掌握。
软件按功能可以分为系统软件和应用软件。软件的架构设计是软件开发中至关重要的一环，必须为变化而设计。计算机的操作系统为我们使用计算机带来了方便，dos系统的核心程序又包括MSDOS.SYS,IO.SYS,COMMAND.COM。
我懂得了中文名MSDOS.SYS1作用2配置参数3MSDOS.SYS设置大全optionsMSDOS.SYS作用编辑MSDOS.SYS是DOS的三个核心文件之一，另外两个是command.com、IO.SYS在Win9X中，MSDOS.SYS变成了纯文本系统配置文件，用于控制Win的启动方式
本次题目的难度一般，主要是本周所学的内容的题目，针对性比较高，穿插了部分以前学过的内容，除了本章题目还有其他的题目，达到了复习的作用，我觉得这是一次很好的尝试，既能学习新的知识又能巩固以前所学到的知识。
本次练习较难，考察了刚学习的软件分类，软件架构和操作系统，同时也涉及到一些之前学过的内容，通过比较操作系统，发现mac os最为流畅，windows界面简洁大方，也方便使用，之后的学习中我准备自学python来提升自己
本次的题目个人感觉难度非常大，不仅设计的知识面很广(从信息熵，云计算，操作系统到软件工程构架)、而且所涉及的知识点很难从书上找到答案，还存在计算题，但是也因此找到自己课程以来的不足之处，虽然没有能好好掌握，但发现了问题，慢慢改进
本次题目和之前一次的题目一样涉及了之前学过的所有知识，像信息熵的计算这种初期学过的知识很能考察复习的有效性。在软件架构和软件分类这块，还是得翻一下书，过一遍知识点来回顾一下，有些生疏。之后的复习还是得稳扎稳打。
软件架构是一个系统的草图。软件架构描述的对象是直接构成系统的抽象组件。各个组件之间的连接则明确和相对细致地描述组件之间的通讯。在实现阶段，这些抽象组件被细化为实际的组件，比如具体某个类或者对象。在面向对象领域中，组件之间的连接通常用接口来实现。
本章的课后作业对我们的内容进行了复习 同时也让我们加深了对知识的储备 在以后的学习中 我们需要对所学的知识有更好的掌握 才可以取得进步 为以后的学习奠定基础 不断巩固自己所学内容的薄弱环节 才可以去的正真意义上的进步 不断为以后的内容奠定基处
本次的题目所涉及的知识点很多，有第一单元的信息熵，也有之后所学的云计算和物联网的内容。更有刚学以及将要学的软件以及操作系统方面的知识。不仅巩固了之前的知识，更为后面的学习打下了一个基础。感觉这次的题目很有意义。
这次的预习还比较简单许多内容都已经见过，各种各样的东西在这样的一个学习计算机的过程中经历的差不多许多方面都能找到一些支持，在学习的过程中学到了计算机思维，计算机的应用和计算机的各种方向的发展，这都足以让我受用了。
本次的题目有点难度，且难度主要集中于刚学的软件这一块。关于软件的功能，架构和分层有许多重要的知识点没有熟记。这次作业让我狠狠的复习了一遍软件121122121212121221212121221212121
本次的课后习题难度中等，通过这次习题，我巩固了有关软件的知识，比如：软件按照功能可以分为系统软件和应用软件。系统软件可分为操作系统、支撑软件。软件架构必须为变化而设计。分层对系统进行分而治之的管理是一种行之有效的方法。
架构，又名软件架构，是有关软件整体结构与组件的抽象描述，用于指导大型软件系统各个方面的设计。架构描述语言（ADL）用于描述软件的体系架构。现在已有多种架构描述语言，如Wright（由卡内基梅隆大学开发），Acme（由卡内基梅隆大学开发），C2（由UCI开发），Darwin（由伦敦帝国学院开发）。ADL的基本构成包括组件、连接器和配置。[1] 中文名 架构 外文名 Software architecture 别称 软件架构 特性 架构是对存储在Active Directory中的对象类别和属性的描述。对于每一个对象类别来说，该架构定义了对象类必须具有的属性，它也可以有附加的属性，并且该对象可以是它的父对象。 可以动态更新的Active Directory 架构。应用程序可以使用新的属性和类扩展该架构，并能立刻使用该扩展。通过在Active Directory 中创建或修改存储在 Active Directory 中的架构对象来完成架构的更新。与Active Directory 中的所有对象一样，架构对象能访问控制列表，因此只有授权的用户才可以更改架构。 软件架构 软件架构（software architecture）是一系列相关的抽象模式，用于指导大型软件系统各个方面的设计。 软件架构是一个系统的草图。软件架构描述的对象是直接构成系统的抽象组件。各个组件之间的连接则明确和相对细致地描述组件之间的通讯。在实现阶段，这些抽象组件被细化为实际的组件，比如具体某个类或者对象。在面向对象领域中，组件之间的连接通常用接口(计算机科学)来实现。 软件体系结构是构建计算机软件实践的基础。与建筑师设定建筑项目的设计原则和目标，作为绘图员画图的基础一样，一个软件架构师或者系统架构师陈述软件构架以作为满足不同客户需求的实际系统设计方案的基础。 软件构架是一个容易理解的概念，多数工程师（尤其是经验不多的工程师）会从直觉上来认识它，但要给出精确的定义很困难。特别是，很难明确地区分设计和构架：构架属于设计的一方面，它集中于某些具体的特征。 在“软件构架简介”中，David Garlan 和 Mary Shaw 认为软件构架是有关如下问题的设计层次：“在计算的算法和数据结构之外，设计并确定系统整体结构成为了新的问题。结构问题包括总体组织结构和全局控制结构；通信、同步和数据访问的协议；设计元素的功能分配；物理分布；设计元素的组成；定标与性能；备选设计的选择。” 但构架不仅是结构。IEEE Working Group on Architecture 把其定义为“系统在其环境中的最高层概念”。构架还包括“符合”系统完整性、经济约束条件、审美需求和样式。它并不仅注重对内部的考虑，而且还在系统的用户环境和开发环境中对系统进行整体考虑，即同时注重对外部的考虑。 在 Rational Unified Process 中，软件系统的构架（在某一给定点）是指系统重要构件的组织或结构，这些重要构件通过接口与不断减小的构件与接口所组成的构件进行交互。 从和目的、主题、材料和结构的联系上来说，软件架构可以和建筑物的架构相比拟。一个软件架构师需要有广泛的软件理论知识和相应的经验来实施和管理软件产品的高级设计。软件架构师定义和设计软件的模块化，模块之间的交互，用户界面风格，对外接口方法，创新的设计特性，以及高层事物的对象操作、逻辑和流程。 一般而言，软件系统的架构（Architecture）有两个要素： 1.它是一个软件系统从整体到部分的最高层次的划分。一个系统通常是由元件组成的，而这些元件如何形成、相互之间如何发生作用，则是关于这个系统本身结构的重要信息。详细地说，就是要包括架构元件（Architecture Component）、联结器（Connector）、任务流（Task-flow）。所谓架构元素，也就是组成系统的核心"砖瓦"，而联结器则描述这些元件之间通讯的路径、通讯的机制、通讯的预期结果，任务流则描述系统如何使用这些元件和联结器完成某一项需求。 2.建造一个系统所作出的最高层次的、以后难以更改的，商业的和技术的决定。在建造一个系统之前会有很多的重要决定需要事先作出，而一旦系统开始进行详细设计甚至建造，这些决定就很难更改甚至无法更改。显然，这样的决定必定是有关系统设计成败的最重要决定，必须经过非常慎重的研究和考察。 历史 早在1960年代，诸如E·W·戴克斯特拉就已经涉及软件架构这个概念了。自1990年代以来，部分由于在 Rational Software Corporation 和Microsoft内部的相关活动，软件架构这个概念开始越来越流行起来。 卡内基梅隆大学和加州大学埃尔文分校在这个领域作了很多研究。卡内基·梅隆大学的Mary Shaw和David Garlan于1996年写了一本叫做 Software Architecture perspective on an emerging discipline的书，提出了软件架构中的很多概念，例如软件组件、连接器、风格等等。 加州大学埃尔文分校的软件研究院所做的工作则主要集中于架构风格、架构描述语言以及动态架构。 计算机软件的历史开始于五十年代，历史非常短暂，而相比之下建筑工程则从石器时代就开始了，人类在几千年的建筑设计实践中积累了大量的经验和教训。建筑设计基本上包含两点，一是建筑风格，二是建筑模式。独特的建筑风格和恰当选择的建筑模式，可以使它成为一个独一无二的建筑。 下面的照片显示了中美洲古代玛雅建筑，Chichen-Itza大金字塔，九个巨大的石级堆垒而上，九十一级台阶（象征着四季的天数）夺路而出，塔顶的神殿耸入云天。所有的数字都如日历般严谨，风格雄浑。难以想象这是石器时代的建筑物。 图1位于墨西哥Chichen-Itza（在玛雅语中chi意为嘴chen意为井）的古玛雅建筑。（摄影：作者） 　软件与人类的关系是架构师必须面对的核心问题，也是自从软件进入历史舞台之后就出现的问题。与此类似地，自从有了建筑以来，建筑与人类的关系就一直是建筑设计师必须面对的核心问题。英国首相丘吉尔说，我们构造建筑物，然后建筑物构造我们（We shape our buildings, and afterwards our buildings shape us）。英国下议院的会议厅较狭窄，无法使所有的下议院议员面向同一个方向入座，而必须分成两侧入座。丘吉尔认为，议员们入座的时候自然会选择与自己政见相同的人同时入座，而这就是英国政党制的起源。Party这个词的原意就是"方"、"面"。政党起源的关键就是建筑物对人的影响。 ￼ 图1、古玛雅建筑 在软件设计界曾经有很多人认为功能是最为重要的，形式必须服从功能。与此类似地，在建筑学界，现代主义建筑流派的开创人之一Louis Sullivan也认为形式应当服从于功能（Forms follows function）。 几乎所有的软件设计理念都可以在浩如烟海的建筑学历史中找到更为遥远的历史回响。最为著名的，当然就是模式理论和XP理论。
通过学习知道了软件架构是一系列相关的抽象模式，用于指导大型软件系统各个方面的设计。软件架构是一个系统的草图。软件体系结构是构建计算机软件实践的基础。软件架构是一个系统的草图。软件架构描述的对象是直接构成系统的抽象组件。各个组件之间的连接则明确和相对细致地描述组件之间的通讯。在实现阶段，这些抽象组件被细化为实际的组件，比如具体某个类或者对象。在面向对象领域中，组件之间的连接通常用接口来实现。
对已学的知识还是不能准确的记住与理解，希望老师能再多加讲解，我也会在课下多多自学，复习，尽力把知识点，相关信息，必备技能完全掌握，。相信在未来绝对会贯通这门学科。(｀･ω･´)ゞ敬礼っ_(´ཀ`」 ∠)__
随着信息技术的高速发展并迅速渗透到社会生活的各个方面，计算机日益成为人们学习、工作、生活不可缺少的基本工具，再过不了几年，不会使用计算机，就会象不识字一样使人举步维艰， 计算机学习 心得体会。进入大学，计算机无时无刻在伴随着我们，给我们在学习的生活增添了乐趣
这次题目感觉需要在了解那个知识点的基础上思考，不然不知道选啥，如第三题。但有些题目书上有原文，还是挺简单的，比如按软件功能可以将软件分为系统软件和应用软件。感觉软件平时接触比较多，相比硬件的学习更易搞懂，还要多看书加强。
本次题目较综合，有些难度，复习了之前的内容，让我对一些重要的知识点有了回顾。1111111111111111111111111111111111111111111111111111111111111111
本次作业比较简单，都是书上有的内容，对于各个概念有了进一步的了解，但是还要记忆，目前做题还要依靠书本，以后要将书上的知识内化，真正的掌握并运用，平时靠书上的知识是不够的，课外还要收集相关资料，认真研究。
通过做本次的课后作业。我明显感觉到了这次的题是从第一章的信息熵到现在所学到的软件工程的一次题目汇总，帮助我梳理开学到现在所学习的内容。自此，计算机的整体概念以及各种部分的结构框架帮助我记忆。我对于计算机这一体系的认识更加清晰。
通过本次的课后作业，我了解了的软件的定义。软件可以按照软件的功能分类，分为系统软件和应用软件，也可以按照软件的规模分类，软件的工作方式分类，可以分为实时处理软件和分时处理软件和交互式软件，本周学习收获颇多。
Unix系统也被称为Xenix，1969年由贝尔实验室开发。它最显著的特点是短小精干，运行速度快，系统开销小。Unix支持数据共享，运行多进程等功能，且支持许多编程开发工具。Mac OS（最先进的操作系统）
这一章主要讲计算机的软件方面了，由于平时操作电脑，用的都是软件，对软件的定义大致熟悉，所以理解起来就没那么难。但书上的内容有些地方跟老师讲的有点差别，所以做题时有些东西跟书上的有点不一样。感觉老师讲的软件架构十分重要，我会好好学的。
本次实验让我对于软件的定义、架构、分类以及开发的相关知识有了更进一步的学习和体会，同时我也更好的掌握了云计算以及计算机网络的知识，再加上一部分对于之前知识的复习，我对于这些知识有了更好的更深刻的体会，之后我会做得更好。
明显感到我对于软件架构的理解还是不太深，可能与我没经历过大的软件开发项目有关，还没办法清楚的知道分层的真正好处，但从对分工合作的角度来看还是可以大致想到分层的高效性。另外对于系统，我准备用虚拟机软件安装一下LINUX来熟悉一下这个陌生的系统
在。新的一章中。我们了解到操作系统以及软件结构的相关知识。操作系统。对于我们目前的水平来说。算是十分超前的内容了。当前也只能做浅尝辄止的了解。深入的学习更多的应当靠的是个人的兴趣驱动。作为一个计科人。对于这些不单纯只是作为一长串的代码。而是当作艺术来鉴赏。
这一次作业题目的数目有所提升，但是题目相对来说比较简单，在书上只要仔细阅读就会有所收获，这次的作业很不错的帮我们巩固了上课所学的关于软件和操作系统的知识点，出题的人还出了有关于前两章的题，帮我们巩固了知识点。
软件（中国大陆及香港用语，台湾称作软体，英文：Software）是一系列按照特定顺序组织的计算机数据和指令的集合。一般来讲软件被划分为系统软件、应用软件和介于这两者之间的中间件。软件并不只是包括可以在计算机（这里的计算机是指广义的计算机）上运行的电脑程序，与这些电脑程序相关的文档一般也被认为是软件的一部分。简单的说软件就是程序加文档的集合体
以前以为一个软件的开发一个人可以做到，通过学习，了解到软件开发根本不可能靠一个人做到，必须是团队的协同合作。 软件构架我是第一次听到，以前以为软件是程序员敲敲代码就完事儿了的，现在发现没有软件构架根本做不了。
通过这次做课后作业题目，我的感悟如下所示：这次的课后作业题目所涉及的知识点大部分是刚学的第三章的内容也有几道题设计了信息熵等。我对这次题目的掌握程度还不错，对题目考察的知识点理解的还不错。这次题目不是太难。
题目有难有易。偏于基础知识。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。
emmm...这周的知识点事关于软件的，我觉得我这个人比较喜欢打游戏，喜欢看动漫，所以也想往这个方向发展，所以应该选什么专业呢，还是有一点迷茫。大一第一学期还有一个月就结束了，真的好快，感觉什么都没学到。
first ,感觉这次作业还可以，都是课本上的知识，难度中等，second，随着课后作业的一次一次的进行，突然发现这是我温习知识的很强的提醒闹铃，每一次写作业，我都要把课本翻个遍，一段一段的读每一行文字，生活离不开它了……
这次的题目是对前面所学内容的小小检测，另一方面又考察上次课的内容。主要是关于计算机硬件与网络和软件方面的内容，关于知识点刚学的软件等内容掌握有点差，另外还好。就题目难易程度来说并不是太难，只有几个题目有点不会。
这次的题目相比以往增大了题目的数量，题目中也包含了前面几张的相关的内容，但是在关于这张的相关内容中我认为我在软件架构这一块上还要多看一下，同时这次的四个题目中也有几个都是关于这部分的相关的内容，这一块要引起重视
通过本节课的学习，我了解了有关软件的一些知识，知道它从功能上可以分为系统软件和应用软件，也了解了软件架构，知道了软件架构的定义和软件架构的分层。系统软件又分为支撑软件和操作系统，我也知道了什么是操作系统。
虚拟化是计算机资源的逻辑组（或子集）的表示过程，可以直接访问使用计算机抽象的底层资源。这样可以有效地利用服务器闲置的抽象资源而不用受实现方法、地理位置或底层资源物理配置的限制，关键特征为多实例、隔离性、封装性、高性能。
这些题都不是很难，比较轻松的就做出来了，感觉都只要求大概地了解就行了，没有什么需要理解得很深的地方，另外呢通过这些题，也能了解到哪些内容是重点，像一些知识都重复出现好多次了。我们也可以从做题的感觉中了解自己的学习状况，而不仅仅是自我感觉。
这次题目大多属于软件方面的知识，但还是有关于信息熵和第二章的内容。然后。。。对那些定义还不是比较熟练，也就是文字比较多的记不下来，可能是没有花时间去记吧，虽然题目不难，但我必须依靠书才行，准确说，我选了后不敢确定是否正确。
这次的题目都是课本上的内容，基本都是有关软件和操作系统的问题。这些问题都是很底层而又很基础的问题。如果对这些问题不了解，我们就不会知道我们学习计算机科学的意义和方向。计算机操作系统和软件接触比较多，理解这些知识难度不是很大。
本次综和试题难度不是很大，考查对之前知识的理解程度，感觉还不错，之前对信息熵的含义，公式不是很了解，经过这一次的测试，了解到了自己对它还是有正确的了解的，另外对别的知识掌握的也还不错，不过，再接再厉吧。
有一些前面的内容忘了，就像求信息熵的那一题。但是还是有一题不知道是不是对的：问题领域和空间的复杂程度决定了软件分层，就是他们之间的主动，被动关系不知道。自己感觉他们之间应该没有被动主动的关系，应该是相互独立的存在。
本次作业难度不大，感觉上做的还不错，对软件的架构有了较深入的理解，同时，对信息的获取，存储，传输的过程，以及内容把握的不错，唯一不足的是，对dos的理解还有些欠缺，还没真正搞清楚它的使用方式（dos实在是有点难）。
有一些前面的内容忘了，就像求信息熵的那一题。但是还是有一题不知道是不是对的：问题领域和空间的复杂程度决定了软件分层，就是他们之间的主动，被动关系不知道。自己感觉他们之间应该没有被动主动的关系，应该是相互独立的存在。
本章讨论了软件的相关知识，还有些信息墒的一题，让我们知道了有软件架构这个概念，还更加深刻的知道软件并非只是我们手机里的app还有更多的内容，虽然有些抽象难懂，但是相信以后我们会有机会多多接触，多多体会……
本章学习了软件的相关知识，包括软件的分类、软件架构及各种操作系统的介绍。软件架构是开发软件必要的一个环节，软件架构的分层在一定程度上使软件的开发变得简单。各种操作系统的介绍使我了解了除了常见的windows、mac os外的其他操作系统
信息论之父 C. E. Shannon 在 1948 年发表的论文“通信的数学理论（ A Mathematical Theory of Communication ）”中， Shannon 指出，任何信息都存在冗余，冗余大小与信息中每个符号（数字、字母或单词）的出现概率或者说不确定性有关。 Shannon 借鉴了热力学的概念，把信息中排除了冗余后的平均信息量称为“信息熵”，并给出了计算信息熵的数学表达式。
本次题比较不容易理解，说实话，掌握程度没有上一次好，此次书本内容比较复杂，预习也没有得全分，概念掌握程度不够，并且内容复杂，因此对于此次作业没有十足的信心，不过自己也发现不足，作业就是不足自己的短处，不理解才能明白自己的不足
这次作业有些是以前的知识，但是我感觉有些东西还是有点忘了，我对已学的知识还是不能准确的记住与理解，但我会在课下多多自学，复习，尽力把知识点，相关信息，必备技能完全掌握，同时，这次的课程的题目也有，感觉挺基本。
本次课程学习了软件的架构、分类和开发中的相关要求和概念，在学习了知识的同时，还掌握了软件开发中最为核心的部分，以及软件架构设计的必要性和必须性。虽然目前来说我对这些概念并不是有很深的感触和理解，但是我相信，假以时日，我会慢慢理解到它们的重要作用的。
这次题目同样是对所学知识的一个阶段性复习,涉及到了之前做学的很多知识点，所以题目相对来说也多一点，同时也让我发现了，我在计算信息熵上可能存在问题，需要重点注意和练习,与此同时，在很多知识点上，概念比较模糊,任需借助书本才能完成答题,不太好，加油！
本次作业让我对软件的知识进行了全方位的了解，包括软件的开发、软件的架构以及操作系统等等，还复习了物联网方面的细节知识。一个软件的开发并不像我们以前所理解的写程序就够了，它的结构以及使用环境等都是需要考虑的因素。
这次课后作业真是太简单了，不仅很好地巩固了我们的知识，而且拓宽了我们对计算机导论这个学科的知识面，我深刻认识了计算机的内部结构，以及计算机的历史发展，这对我们整个信息时代就划时代的意义，这就是我对这次课后作业的总结
这一节的作业涵盖的内容比较多，有信息与计算机、计算机系统结构、计算机网络体系结构、软件的功能、软件的架构以及操作系统。这些都是我们应该了解并掌握的东西。所以我需要不断地深入了解、学习与更新本学科的知识，跟踪学科前沿，开阔更广阔的发展空间。
通过本次课程，我完整地了解到了软件的定义，并且从软件的角度去重新认识了硬件的构成，并通过练习题对软件的分类、规模以及软件架构、操作系统有了一个全新的认识。从此我受益匪浅，并且对计算机科学的热情更加深入了。
我觉得对已学的知识还是不能准确的记住与理解，特别是dos和wndows等操作系统更是有点困难。但我会在课下多多自学，复习，尽力把知识点，相关信息，必备技能完全掌握，。相信能学好这门学科，但还需多加努力，加油
这章讲的是软件，首先要明白硬件与软件的区别:硬件是客观存在的实体，而软件不是，其次要明白软件的分类，按功能分有系统软件与应用软件，其次还有规模与工作方式的区分方法软件架构是有关系统整体结构与组件的抽象模式，是软件开发中非常重要的一环。
软件架构是有关软件整体结构与组件的抽象模式，用于指导大型软件系统各个方面的设计。软件架构是一个系统的草图。软件架构描述的对象是直接构成系统的抽象组件。软件架构设计的目标是具有灵活性、可扩充性和可移值性。
软件架构是指在一定的设计原则基础上，从不同角度对组成系统的各部分进行搭配和安排，形成系统的多个结构而组成架构，它包括该系统的各个组件，组件的外部可见属性及组件之间的相互关系。组件的外部可见属性是指其他组件对该组件所做的假设。 软件架构设计就是从宏观上说明一套软件系统的组成与特性。 软件架构设计是一系列有层次的决策 ，比如：功能与展现的决策；技术架构的决策；自主研发还是合作；商业软件还是开源软件
这次的题目与本次上课学习内容联系紧密，题目难度恰当，不会太简单，也不会全是那种翻书就能找到的题目，更不是完全无法动手的题目。就我个人情况而言，我感觉我掌握的情况不太差，但也不算特别好，要好好加油，把老师上课讲的内容消化好(✪▽✪)
通过一周的学习，对软件的认识更加深入，了解了一些操作系统，知道了他们的长处，明确了软件的分类。知道了软件的架构，知道软件也是要分层的，对其分而治之，并且要为变化而设计，要有灵活性、可扩充、可移植，也了解到软件的维护相当重要。
本周的第二次课后作业，也包括以前学习的旧知识和新学的知识，信息熵、计算机体系结构等等的旧知识虽然已经学过去有一段时间但是我觉得自己掌握的还不错，做这些题并不是很棘手，不过对于新知识还是有一些疑惑，再接再厉！
本次将本章软件的知识与前面所学内容例如计算机系统结构组合在一起来出题，不仅有助于我们复习前面所学过的知识，而且还能让我们对刚学的内容更加熟悉掌握，同时还可以让我们区分各知识点的不同，更好的弄清楚所学知识。
马上就是期末考试了，本次题目带着我们又一次复习了一遍课本，课本中的很多知识都像过电影般在脑海中回放着。其实开学以来真的通过计算机导论学到了很多东西，从一开始什么都不会的小白，到现在可以和专业人士交流几句，的确让我体会到了学以致用的妙处。
这次的题目是综合性的，包括了前边的信息熵 硬件和软件。综合起来是真的有点儿难度。信息熵忘了怎么计算的，关于硬件那的理论知识也快忘了，不拿书的话根本就不会做的。但是这也让我知道了自己的不足之处，课下需要多看。
软件架构是有关软件整体结构与组件的抽象模式，用于指导大型软件系统各个方面的设计。我们详细了解了软件架构的分层。之后还学习了操作系统的相关概念与主要的几种操作系统（DOS，Windows,UNIX,Linux和Mas OS），DOS系统与Windows系统是关键。
这次的题目复习了有关于计算机软件的知识，涵盖了软件的定义，软件的分类，软件架构以及操作系统的知识，让我对软件有了一个新的认识，也明白了一个软件所需要耗费的时间精力。总的来说，这次的题目有点难度，但是只要复习就能做出来。
通过最近几周对计算机科学导论这门课程的学习，我学习到了有关软件与云计算，物联网等相关知识，现如今处处宣传大数据的背后所依赖的便是云计算，物联网也将是未来社会的一种发展趋势，而软件所做的就是在硬件与用户之间建起桥梁
本次题目涉及到的知识点有信息熵的计算方式、软件的定义、软件的分层、软件架构的定义、软件架构的分层、系统程序与应用程序的区别、操作系统的类型以及DOS系统的核心程序。通过本周的课程初步了解了软件、软件架构和操作系统。
DOS有三个基本文件 MSDOS.SYS、 IO.SYS、COMMAND.COM。支撑软件包括一系列基本工具，以及数据库管理、外部存储器格式化、文件系统管理、用户身份验证、设备驱动管理、网络连接等方面的工具和程序设计的集成开发环境，它主要包括环境数据库、各种接口软件和工具组。CentOS是社区企业操作系统。软件架构描述的对象是直接构成系统的抽象组件、是一个系统的草图、是有关软件整体结构与组件的抽象模式。
此次又复习了一遍有关信息熵的内容，还有关于软件的一些知识，软件是用户与硬件之间的接口，用户主要是通过软件与计算机进行交流的，按软件的功能分类可以分为系统软件和应用软件，按软件的规模分，可分为微型，小型，中型，大型，甚大型以及极大型
这次课后作业和上次一样是对前期所学的所有内容的一个总结，包含从信息到计算机再到软件的全部知识。我发现对比来说这次没有出现进制转换，可以说是避开了我的弱点，但我明白还有很多对概念及计算的不熟悉的地方，我也会加以改进。
软件是用户与硬件之间的接口，用户通过软件与计算机进行交流。虽然从传统意义上讲，软件是计算机系统中的硬件部分，但是实际软件应=程序+数据+文档，软件是计算机系统设计的重要依据，不仅要统筹规划好计算机软件与硬件结合的层次关系，也要兼顾用户的需求才好。
本周我们复习了一部分之前的知识，所谓“温故而知新”，便是如此。总结来说，我们概括的学习了很多有关计算机内外部分的知识，这些知识将是我们将来深入学习各个部分知识的基础，我们有必要牢固的掌握他们，所以说，温故而知新。
这周学习了软件开发的相关知识，软件我们平常用的多比较熟悉，但对于软件的开发过程我们并不了解，这周学习了软件开发的过程和开发软件要重点关注的用户界面和用户体验，对于以后我们选择自己的专业方向有一定帮助。
本次题目跨度极大，从最开始的信息到现在刚结束的软件。感觉就是还是得好好复习一下，之前学的东西记忆已经模糊了。复习了信息的定义，信息熵的计算，云计算和物联网的基本技术，软件的定义和软件的架构以及操作系统，让我们对计算机有一个基本较深入的的理解。
这章介绍了软件，包括各种软件，此处的软件不是狭义的软件，而是广义的，软件就是用户与硬件的接口，没有软件，硬件也没有实际作用。软件可分为系统软件和应用软件，知道学到这章我才知道，原来系统也是软件的一种，软件还有很多等的我们去开发。
本次学习使我对计算机有了更加深刻的理解。按照不同的标准，软件可以分成很多类。软件有软件架构，架构有分为很多层，可以对系统进行分而治之。然后又接触了操作系统，操作系统又很多的种类，每个种类有自己的特点。
支撑软件是支撑各种软件的开发与维护的软件,又称为软件开发环境。它主要包括环境数据库、各种接口软件和工具组。软件架构是一系列相关的抽象模式，用于指导大型软件系统各个方面的设计。软件架构是一个系统的草图。软件体系结构是构建计算机软件实践的基础。
本次题目是对以前知识的回顾和对现在知识的回顾，本次题目涵盖信息，计算机硬件的组成，云计算，物联网，系统软件，应用软件，DOS操作系统。本次题目综合性强，但难度不大。本次题目对我们对以前的知识有复习作用。
在本次的学习过程中，对于软件有了更加深入的了解，以及对于以前学习过的很多内容，在本次的作业中，得到了重新复习与提升，包括关于硬件，以及关于信息部分的知识，是一个巩固的过程，加深了已经学习过的知识的印象。
走进软件，软件的定义，软件是用户与硬件之间的接口，用户主要是通过软件与计算机进行交流的。软件是包括程序、数据及其相关文档的集合。程序是按照事先设计的功能和性能的指令序列；数据包括使程序能正常运行的参数及程序运行过程中处理的对象；文档是与程序开发、维护和使用有关的资料总称。软件与硬件得层次关系从上到下分为应用软件，支撑软件，操作系统，计算机硬件。 软件的分类。按软件的功能可以将软件分为系统软件和应有软件。操作系统是管理计算机硬件和软件资源的程序，同时也是计算机系统的内核与基石。支撑软件包括一系列基本工具。软件还可以按照规模分类。软件按照工作方式分为实时处理软件、分时软件、交互式软件和批处理软件。实时处理软件氛围数据采集、数据分析、数据输出三部分Window、Linux都是分时软件。 软件架构是有关软件整体与组件的抽象模式，用于指导大型软件系统各个方面的设计。软件架构是一个系统的草图。软件架构的分层的优点在于每个层次功能明确，逻辑清晰，高层只需要了解相邻的低层的细节即可，从而降低了层与层之间的耦合度。软件架构-从上到下分为程序子系统、业务专用中间件，系统软件。系统的分层包含的规则为可见度，易变性，通用性，层数。 操作系统为计算机硬件和应用程序提供了一个交互界面，并指挥计算机各部分硬件的基本工作。对于操作系统的作用不同的角度有不同的观点。系统观点为计算机管理资源。用户观点为用户使用计算机的界面。而软件观点为程序、数据和文档的集合。几种操作系统。 DOS即磁盘操作系统，核心程序包括系统引导程序，MSDOS.SYS、IO.SYS和COMMAND.COM 。DOS是一个单用户、单任务的操作系统。Window系统多用户，多任务的操作系统。优点有：直观、高效得面对对象的图形用户界面，易学易用；用户界面统一、友好、漂亮，Window应用程序大多符合CUA标准。丰富的设备无关的图形操作，Windows系统的图形设备接口（GDI）提供了丰富的图行操作函数；Window采用了双模式结构来保护系统本身，以避免被应用程序的错误波及。 UNIX系统是由美国贝尔实验室在PDP－7计算机上实现的。UNIX是一个通用的、多任务、交互的分时系统，是应用面最广、影响力最大的操作系统。UNIX的优点为提供可编程的命令语言；提供了许多程序包。文件系统简洁。可移植性强。网络通信系统强。UNIX的组成为，UNIX系统才用了层次结构，外层是用户层，内层是内核层。UNIX操作系统包含4个基本的成分：内核、Shell、文件系统和公用程序。Linux操作系统是由芬兰赫尔辛基大学的学生Linux Torvalds开发的。Linux的优点为模块化程度高；源代码公开；广泛的硬件支持；安全性及可靠性好；完整的网络组成；Linux有内核版本和发型版本。linux与UNIX的关系 API（Application Programming Interface,应用程序编程接口）是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。为Linux操作系统是UNIX的一种克隆系统。Mac Os是一个运行于苹果公司Macintosh系列计算机上的操作系统，是首个在商用领域成功的图形用户界面操作系统。Mac OS基于UNIX，以简单易用和稳定可靠著称。智能手机系统分为Symbian,WindowPhone,iOS,Android,BlackBerry。
通常，一个信源发送出什么符号是不确定的，衡量它可以根据其出现的概率来度量。概率大，出现机会多，不确定性小；反之就大。 不确定性函数f是概率P的单调递降函数；两个独立符号所产生的不确定性应等于各自不确定性之和，即f（P1，P2）=f（P1）+f（P2），这称为可加性。同时满足这两个条件的函数f是对数函数，即 。 在信源中，考虑的不是某一单个符号发生的不确定性，而是要考虑这个信源所有可能发生情况的平均不确定性。若信源符号有n种取值：U1…Ui…Un，对应概率为：P1…Pi…Pn，且各种符号的出现彼此独立。这时，信源的平均不确定性应当为单个符号不确定性-logPi的统计平均值（E），可称为信息熵，即 ，式中对数一般取2为底，单位为比特。但是，也可以取其它对数底，采用其它相应的单位，它们间可用换底公式换算。
这次题目的心得莫过于对第三章软件的了解了.软件是硬件与客户交流的平台.有系统软件,应用软件才能和硬件进行顺利的交流.这次涉及的知识点主要偏向第三章.当然也有第一章的知识点.这意味着不能喜新厌旧.这次题目挺容易的
本章题目是对这段时间学习的一个基本的整体的检测，个人先是不看书去做，发现有较多的不会（4道题）。后来通过查找书籍上的知识来找到了相对正确的答案，感觉需要去对书本有较为整体的梳理，才能做到基本独立完成题目。
计算机系统结构是计算机的机器语言程序员或程序编写者所看到的外特性。操作系统是用以控制和管理计算机系统资源的软件，软件架构是系统的草图。 软件架构是有关软件整体结构与组件的抽象模式，需要具有灵活性，可扩充性和可移植性。
此次作业有些东西比较抽象，所以我做起来有点困难，特别是在支撑软件，软件架构的方面，我有点分不清楚，所以我认为我还需要再去看看书，再去了解下，此外我想问一下支撑软件是在操作系统里面吗?还是在什么地方呢。
软件架构是有关整体架构与组件的抽象模式，用于指导大型软件系统各个方面的设计。软件架构是一个系统的草图。软件架构描述的对象是直接构成系统的抽象组件。各个抽象组件之间的连接则明确和相对细致地描述了组件之间的通信。
软件包括程序、数据及其相关文档，按功能分可分为系统软件和应用软件。系统软件又分为操作系统软件和应用软件。其中，操作系统软件主要用于管理整个计算机，应用软件帮助用户实现各种各样的复杂功能。软件架构是一系列相关的抽象模式，软件架构分层使得大型系统的管理变得更加有效。
本次题目涉及到了支撑软件的包括部分，软件按照功能的分类，信息熵的计算，云计算，计算机体系结构，传感器的相关知识，软件架构的基本知识，应用软件的包括部分，DOS的三种基本文件，操作系统软件的包括部分，帮助我们全面的复习了以前所学习的有关知识。
本次题目量比较大，覆盖的内容也是比较多的，主要还是跟软件和操作系统有关。按软件的功能可以将软件分为系统软件和应用软件，系统软件又分为操作系统和支撑软件，。还要注意软件的架构分层以及一些常见的操作系统。
这次的题目主要围绕软件这个大主题进行，所出的题是软件及软件架构中的一些概念，也有关于计算机系统结构和体系结构的相关知识。这些题需要大家对其有足够的了解和理解才能够顺利的答出来。我觉得弄清楚这些概念还是非常重要的，毕竟如果不把基础大好，以后的学习肯定会漏洞百出。
这次题目还是简单一点的，但是可能也是自己在做的时候不在状态，很多选项都要读好几遍才拿得下决定。还有几个题目是与上次的重复的，嘿嘿，另外，关于信息熵的计算，又重新看了一下课本，所以明白了该怎么算了，收获还是不少的:)
又回顾了一下前面的内容，发现自己快把前面的忘记掉了，尤其是信息熵的公式，此外，对于计算机结构，软件分类也不是非常确定。尤其是资源管理与文件管理有什么区别，数据库平台与数据库管理有什么区别。此外，还有一些其它内容不是很确定
至今为止计算机导论上学习的知识点内容还是比较多，感觉现在写这些题目已经有很多已经不记得怎么写了，没有丝毫印象了。计算机导论占用的课时不多，所以复习时间较少，对于软件架构，计算机硬件的构成等的知识点已经有点模糊不清了，看来还要加强复习
朝朝暮暮，不知不觉中，一周又过去了。虽然计算机导论一个星期只有一节课，学分也并不高，但是它在我这个计算机专业的学生心里来说却并不比其他学科的地位轻。好好学好每一门课，扎实自己，总有一天我也会很厉害的(ง •̀_•́)ง
这个星期学习了编程语言，软件开发和软件行业的职业划分。老师讲了很多种工作，我感觉计算机行业的职业类型有很多，细分了很多的方面。未来要尽早选择一个我感兴趣的职业，做一份职业规划，早一点为未来奋斗。
这周了解到SSD(固态硬盘)的读写速度是很快的，应用程序存在SSD里加载出来会很快，并且会加快开机速度，但同时固态硬盘也是比较贵的，如果能出现好的技术价格又下降的话，这大概就会是一种趋势。计算机一直都在快速的发展之中，我觉得我作为计算机专业的人也需要了解到各种有关于计算机方面的知识。
本周主要讲的是关于软件的知识。软件＝程序＋数据＋文档。讲述了软件架构的重要性。软件架构是一个系统的草图。我们还了解了软件的开发，软件工程是研究如何以系统的，规范的，可定量的过程方法去开发和维修软件，以及如何把经过时间考验而被证明是正确的管理技术和，当前能过得到最好的软件开发与维修方法结合起来得学科。 希望自己可以多多了解自己学科，同时也希望自己可以学好这一学科。
本周主要是对软件的有关内容的学习，通过本周的学习，对软件的定义，分类，构架以及操作系统都有了一定的认识与了解，通过学习，了解到了软件开发的几个环节与需要注意的事项。
本周学到了软件和操作系统等知识。对于计算机的知识有了更深的了解。软件分为系统软件和应用软件，系统软件又分为操作系统和支撑软件。软件工程，和软件的开发以及软件行业职业简介对计算机今后的就业问题进行了介绍
这周学习的关于软件部分的知识基本掌握，但是需要及时的复习才可以记牢。对于这周的学习内容比较满意。
本周学习了计算机方面的语言和关于软件的各类知识。前者目前学习的内容不是很难，上课认真听讲就可以理解掌握；后者相关内容比较多，分许多小内容，需要自己归纳总结理清顺序才能更好地区分记忆。
学了软件工程的一些有关知识，很感兴趣，很想自己开发一个APP玩
本周上课状态不是很好但是对编程语言的相关知识把握不清楚，上课时疏忽没有听到相关的知识点。打算回归课本，把本周的知识点复习一遍。以及与软件相关的知识点也需要再系统地看一遍。
这周学习了软件，果然多触碰的东西还是比较熟悉的，感觉前面对硬件方面的知识和现在软件知识学的过程的感受完全不同。还有
在这一周的计算机导论学习中，学习了有关程序设计语言的知识。这一章从编程语言的结构，工作原理，编程模式和各种语言的优势与缺点，以及简单语言模板。在学习这一部分的同时，结合我在学习c语言这一编程语言的过程中，让我对编程语言的理解更加深刻。
这周我们主要学习了软件的相关知识。个人觉得软件工程方面的知识比较难。回复咱的是软件的分类，按功能，规模，工作方式对软件进行分类。而软件架构与操作系统的知识，我觉得比较难。这些内容非常多，并且复杂难掌握。
本周查了一下编程语言，编程语言的描述一般可以分为语法及语义。语法是说明编程语言中，哪些符号或文字的组合方式是正确的，语义则是对于编程的解释。有些语言是用规格文件定义，例如C语言的规格文件也是ISO标准中一部份，2011年后的版本为ISO/IEC 9899:2011，而其他语言（像Perl）有一份主要的编程语言实现文件，视为是参考实现。
这一周我们学习了软件开发的有关内容，软件开发是根据用户要求建造出软件系统或者系统中的软件部分的过程。软件的开发包括计划，分析，设计，编码，测试和维护。软件一般是用某种程序设计语言来实现的。通常采用软件开发工具可以进行开发。软件分为系统软件和应用软件，并不只是包括可以在计算机上运行的程序，与这些程序相关的文件一般也被认为是软件的一部分。
随着学习的一步步深入，感觉自己比刚开始接触计算机导论这个陌生的朋友好多了，虽然看着那一堆堆密密麻麻的文字有时候真的让人有点头疼，但当你静下心来真正看进去的时候，其实发现挺有趣的。我们能够了解我们生活中各种应用原理，电脑的构造，软件的开发等等。或许以后我们还会接触更多有趣的知识。
本周内容我觉得没有学好，一是因为有些内容没能够理解，有些知识还是只知道皮毛，不够深入了解，二是没能够多花点时间好好看下书。总之，后面还是要好好加油啊……(ง •̀_•́)ง。
本周学习了软件的定义与分类，软件构架，操作系统，软件工程与软件项目。我了解到作为一个优秀的软件工程师的必备素养，要努力成为一个优秀的工程师
通过这周的学习我了解了软件行业职业的分类，以及各种类别所对应的具体职业与要求，对自己以后的职业规划有了初步的认知。也对程序设计语言有了大体上的认知。在这周的学习中我深刻的认识了软件工程的重要性。
本周学习了计算机编程，编程是一门重要的组成部分，有了编程，才能与计算机更好的交流，所以计算机的编程必不可少。
这周我懂得了关于一些编程语言的东西以及对软件工程这方面知识的了解，我感觉这方面的发展在未来有很大的潜力，我向往这方面锻炼与发展。
本周主要学习了计算机偏向于软件的相关知识，前后端的开发，框架的构件。为我们对软件的未来有了初步了解。
本周学习到了软件的相关知识，软件可以按功能和规模以及工作方式分类。下周要继续加油
第三章与第四章都是与软件有关的，第四章主要是讲程序设计语言，软件需要理解的地方有软件开发过程，这说明软件是一个需要工程化对待的事物，用户体验ui与ue是最近讨论的非常多的，软件现在服务对象是大众，这样ue与ui就显得越来越重要了。
经过入学以来的计算机导论课的学习，我对计算机科学有了一个大致的，基本的，轮廓性认识。对这次题目，所涉及的知识点理解还不很深刻，认识有待加强，掌握的还不够好。我感觉这次的题目不是很难。下一周我一定要加倍努力。
本周的学习让我更好地提升了自己，了解了更多有关于计算机的知识，也让我更好的提高了对计算机学术的认知和理解！
这一周的课主要学习了软件的开发以及用户界面与用户体验，感觉学的还行。课外上了一下了git的网，花了很久完成了那个try git感觉自己的英文水平跟不上，看git的时候全靠有道翻译，到底也是迷迷糊糊的。要好好学英语。
本周开始学习了第三章和第四章的内容，第三章的内容主要是关于软件的，而第四章是关于程序语言设计的。之前我们学习了计算机硬件组成、分类、功能和作用，现在终于轮到学习软件的组成、分类、功能和作用了。软件对于现代网络来讲是非常重要的，也是我们经常接触到的，如手机软件和电脑软件等等。总之这周学到了不少东西。
时间过的真快，一周又过去了。但我觉得在这次课这周的我又充实了许多。在这周的导论课中我又学到了许多新的有关软件的知识，其中讲了软件工程是什么，有了工程之后该怎样去开发软件，测试软件等。让我对软件有了更深的了解。之后有对用户界面进行介绍，怎样使的用户对自己所设计的界面满意。 然后又讲了一些关于软件职业的东西，让我对自己未来的发展有了一个思考，让我更加明确自己的方向。 总之这周对我很有价值，不进学到许多知识，也让自己对未来的方向有了一个思考。
了解了软件行业职业的分类，以及各种类别所对应的具体职业与要求，对自己以后的职业规划有了初步的认知。也对程序设计语言有了大体上的认知。
本次我们了解了有关程序设计语言的知识，在这部分的学习中，我们初步了解并认识了计算机语言的几种类型，几种常规的设计思路，方法以及几种模式，今后的学习中，包括学习其他的语言类型，我们都将会用到这些基础思想和基础方法，我认为个我们很有必要掌握这些知识，同时我们也应当将这些思想应用到我们的编程语言类课程的学习中，只有这样，我们才能事半功倍。
汇编语言的实质和机器语言是相同的，都是直接对硬件操作，只不过指令采用了英文缩写的标识符，更容易识别和记忆。它同样需要编程者将每一步具体的操作用命令的形式写出来。汇编程序通常由三部分组成：指令、伪指令和宏指令。汇编程序的每一句指令只能对应实际操作过程中的一个很细微的动作。例如移动、自增，因此汇编源程序一般比较冗长、复杂、容易出错，而且使用汇编语言编程需要有更多的计算机专业知识，但汇编语言的优点也是显而易见的，用汇编语言所能完成的操作不是一般高级语言所能够实现的，而且源程序经汇编生成的可执行文件不仅比较小，而且执行速度很快。
计算机科学是一门有趣的学科，它包罗万象，相较于编程能力，更重要的是对问题的分析和解决能力。作为计算机学院的学生，我也深知计算机并不像其他学院学生想的那样出来就是码农，工作枯燥工资高，我们的目标是工程师，和建筑工程师那些传统的工程师不一样，但也有诸多相似之处，我们需要技术但不拘泥于技术，更重要的是思维和见解。从宏观到微观，从上层语言到底层语言，从应用软件到操作系统内核，从应用层传输到物理层传输，这一切从某方面说都是相同的，所谓大道相通大抵是如此吧。 作为计算机系的学生，我觉得不能只是局限在写出几百行代码，做出个能用的东西就行，眼光应该放远大些。写代码只是思想实现的最后一步，这就好比用笔在纸上写出来也只是思考的最后一步一样。相比于如何考虑如何把这个功能点突破过去，即便使用十分冗杂的代码，效率十分低下的算法也无所谓，这样的话在真正需要你进行更高层次的设计时可能就没法弄了。我个人目前其实也就处于这个状态，很多时候写代码是想到哪写到哪，从不设计框架和数据结构，也不在乎算法。因此到了真正开发项目的时候，我感到很吃力，因为我的代码无法被别人认同，思路也不够清晰，相比于别人环环相扣的代码，简洁的表达方式，我自愧弗如。因此，我也不断严格要求自己，在每次变成之前考虑一下，我的目标是什么，我的整体架构是什么，是否需要多线程，主要的数据结构怎么设计，算法如何选择，从总体到细节，考虑清楚，函数，接口都考虑好，才能在后继开发中不陷入麻烦。 通过本周课内和课外的学习，我也清楚了很多，希望后面能够真正严格要求自己，成为一个真正地工程师，而不是码农。
本周学习了软件工程、软件开发和程序设计语言方面的内容，知识较多，难度大，还是有点难理解，课后的整理和复习中有了更多收获
本周学习了软件工程产生的由来，与其发展。让我认识到软件的重要性。
本学期快要结束，计算机导论也学了很多的内容。通过这几个月的学习，我了解到计算机的基础知识，涵盖的内容十分广泛，但我也遇到了许多不明白的问题。我觉得还是要多看书，努力去理解书上的概念和内容，尽管有些东西很是抽象难以理解。
这一周复习了很多以前的知识，也在课堂上看到了很多同学富有个性的总结|･ω･｀)。快要到期末了，很多知识还不是特别熟悉，还需要加强复习。
这一部分我感兴趣，不过不咋的好懂，不过我对于这方面的重要性深有体会
这周我学到了各式各样的软件编译器.了解了软件的构成和研发.有志者事竟成有梦想就能在软件这条路上走过
老师讲课的进度越来越快。感觉都有点跟不上。
本周相关的预习以及课后作业感觉对我来说有些得心应手了
本周学了计算机的编程语言，编程语言是我们与计算机交流的语言，有很多种，需要我们一一学习。我
本周我们学习和理解了关于软件的相关知识，我觉得信息是真的强大，计算机科学是真的博大精深，必须要好好学，脚踏实地，才能学好这门课程，既然选择了远方，便只顾风雨兼程。
软件方面有所了解，应该是了解有一定的深度了，还是有很多需要学习。
上周忘记总结是因为学习习惯不好，这周记得了。本周主要对程序语言有了比较深刻的理解，以及对软件开发有了一定了解，对以后编程，程序语言更加清晰了，多以后的发展更明朗了。
这个周老师把同学们写的各种各样的总结给我们看了，怎么说呢，出乎意料啊，当真感受到了同学们鲜明的个性，但是在笑过之后，对于那些各种符号和代码的人还是觉得他们这种做法不太恰当，个人觉得，既然是总结，就应该以严谨的态度对待，起码是对自己负责。
本周我们学习程序语言以及计算机行业职务有关知识。1，计算机行业职务分为前端后端和管理层。前端主要是开发类工程师。后端则是安全类，维护类工程师。管理层是项目经理和qa工程师。2，计算机程序语言包括高级程序语言，汇编语言，机器语言。编程分为过程式编程模式，面向对象编程模式，函数式编程模式和说明式编程模式。
这周把软件这一章学完了。学习了软件的定义，软件的分类，软件的构架，和软件的职责。
本周学的较多，但自己还有些没看懂，需要好好回顾学习，编程语言是程序员的必修课，严谨的逻辑思维更是需要好好锻炼
本周我们对第三章的内容进行了总结，同时也开始了第四章内容的学习，第四章主要讲的是关于程序设计语言的内容，作为计算机专业的我们，这是我们必须要了解，甚至精通的，希望在今后的学习中把这一章的内容给学得越来越好。
这个星期完成了对第三章的总结和题目的整理。程序语言设计方面因为c语言接触较多，对语言方面的理解相较其他稍微轻松，不需要怎么复习。
这次的学习还比较简单许多内容都已经见过，各种各样的东西在这样的一个学习计算机的过程中经历的差不多许多方面都能找到一些支持，在学习的过程中学到了计算机思维，计算机的应用和计算机的各种方向的发展，这都足以让我受用了。
在这周的学习中，跟着老师学习了程序设计语言的作用以及具体格式。学到了分类和编程模式，以前只是埋头学C,C++,PHP等，但是并没有从大的方面比较这些语言。在课上老师简要的讲述后，感觉自己对这些语言的了解更加深入了。
本周通过对软件开发相关知识、程序设计语言相关知识的学习，进一步加深了我对于这方面知识的了解和感悟。同时进行的作业以及相关总结，还有自己的一些实践操作，让我对于所学的知识有了更加透彻的掌握。
老师上课说了很多惊醒我的话，真的。我现在是一名大学生，是最适合学习的时候，现在不扩充自己，什么时候来？要多看多学，扩充眼界，要多练习，熟能生巧，把最好的精力法规处它的作用！
自己本周学习的内容感觉比较有限。 主要复习了人工智能课程上老师教授的相关知识，不大涉及代码实现，大部分接近于离散数学和数学方面的知识，仔细算起来，最近的三个周，自己除了写了一个简单的爬虫其实几乎没写什么代码。 我感觉这是十分不正确的，或许是忙于考试，但若现在让自己去实现一段程序，自己估计需要考虑比较长的时间了。 自己这周还完成了一道leetcode上的题目，不过只是一道比较简单的链表，没有什么难度。 考试快结束了，自己应当抓紧规划一下今后的计划了。
通过本周学习，我对软件有了进一步认识，也了解了编程语言。但是之前的内容有些忘了，要复习一下。
原本以为学编程就和学高数是差不多的东西，等到真正接触这门课以后，真正从大的方面看待编程才发现自己错了，编程只是计算机的一部分，学习编程并不是学习高数，而是和学习语言类学科有相似性，要理解，要掌握，我还需要更多的努力去学好，同时在学习的过程中明确自己对未来的规划
通过本周课程和作业的完成，我学会了关于编程语言的通用结构和功能，认识到了编程语言之间的共同特征。还学习到了关于几种编程模式的区别以及分别方法。还知道了具体发展方向的程序员需要掌握的知识和能力。希望在下节课堂和课后作业中中收获更多知识
这个周学习了软件工程的有关概念，软件开发很重要的一个点就是用户界面和用户体验，软件行业有很多职业，自己以后就有很多的方向去发展。另外还学习了程序设计语言的一部分知识，像语法规则、基本成分。
与人类的语言相似，程序设计语言也拥有语言的三个要素：语法，语义和语用。
本周的内容涉及到的知识一一编程设计语言，这也是我们计算机科学与技术学院学习的一个重要方面，也是我们正在学习的一门课程C语言编程中涉及的。C学的好的同学可能对这个方面知识的学习会比较有感觉，而我学的不太好，可能就需要花更多时间才行。
掌握了软件的结构定义。
这周学到了很多关于软件的知识。由于课程进度加快明显感到对于课本知识掌握的不熟悉，所以需要今后认真复习。更加需要我在今后的课程全面的复习所学内容。详细的预习需要学的内容。
本周我们学习了软件的定义，软件的分类，软件与硬件的关系等等。本周我们还掌握了操作系统的相关知识。希望我再接再厉，努力提升自己，从这门课程中学到更多知识。
计算机的编程语言太多了，一定要利用好寒假的时候努力在学好C语言的基础上自学一些简单的语言，如java。
这周的内容是程序语言的设计，程序设计虽然不是每个计算机人必须精通的技能，但是起码需要一定的编程能力，人机交互就是通过程序语言设计来实现的。经过一周的学习，从课堂中感悟了自主学习的重要性，课堂讲授的知识只是一小块，如果想要让自己变得更加地优秀，需要与时俱进。
这一周学了关于软件的相关知识，和一些编程语言，内容还是比较多的，掌握的还可以，挺杂的，不太好记，所以说还是要多看书
这周学习了软件和程序设计语言的内容，学的内容比较多，需要多多复习深化。
本周感悟挺多的，了解了操作系统，软件架构，软件的分类，开始并不知道软件是什么，本章详尽地解释了软件的作用，功能等等，如果没有软件，户主就不能与计算机进行交流，了解了形形色色的操作系统，例如DOS,WINDOWS,UNIX.等等。向后，老师讲解了软件的开发过程，由于软件危机，提出了软件工程，并指出软件系统开发过程有以下阶段，问题定义，可行性研究，需求分析，系统设计，程序开发，软件测试，最后还有软件维护，学到的东西挺多的，了解了软件的诞生，发展等等。
对什么是软件工程有了基本的理解，了解了软件开发的主要的过程和众多的软件行业的职业，需要根据个人的兴趣和情况来做好做好自己未来的职业选择。本周还了解到什么是程序设计语言，它的分类和编译模式又是什么。我们现在应用的是高级语言，它包含许多语言，可以根据自身和社会需要开去学习。
编程语言俗称“计算机语言”，种类非常的多，总的来说可以分成机器语言、汇编语言、高级语言三大类。目前通用的编程语言有两种形式：汇编语言和高级语言。 也就是说，程序设计语言也就是编程语言。。 而Web前端开发工程师是一个很新的职业，是从事Web前端开发工作的工程师。主要进行网站开发，优化，完善的工作。 百度还是挺有用的
本周上课学习了编程语言的有关内容，但是上课没有好好听，课下花了许多时间才完成课后作业，感觉本周学习效果较差。
这一周印象最深的事就是看了动画短篇《礼拜天》。 这部微电影时长9分钟。讲了一个偏远小镇上的小男孩的想象力如何被扼杀，成为自己不喜欢的成人的故事。 联想到我自己的经历，我想这大概是因为熟悉的环境是会让人发疯的。 两点一线的生活，做不完的作业或工作，匆忙之中被填塞的大量讯息，这些，都让我们自以为所知甚多，然而，连接外界的触手其实被限制在一个狭小的范围，而当我们对这个范围越熟悉，我们就越无聊，越消极，越沉浸在聚会中乌鸦一样的自说自话，热闹的自我满足，越难以花费时间在遐想，在计划，在渴望去做又害怕因此浪费时间的的兴趣所在上。 康德认为应该把人视为目的而非手段，这是诉诸理性的观点；边沁则认为正义在于满足大多数人的利益，这是诉诸利益的观点。 为了生存，我们不得不认同自己“人力资源”的身份，而像蜗居结局所言“工作即是还债”。 小男孩的痛苦在于面对被影响的无知和懵懂，他不知道选择；我们的痛苦在于知道幸福选择却不能不选择痛苦，因为我是独生子女，我要让家人满意，我要生存下去，这是社会迫使我做出的抉择，因为成年人的痛苦在于认识到自己的能力有限，无力做出选择。 我打这么多字是因为我是个逐利者。 但我真的不支持强迫我每周总结的行为。 有些思考是私密的，有些痛苦是不便于分享的。
上一周感觉讲了好多内容，主要是关于软件的。其中有软件危机和软件工程的提出；软件开发过程中目标是什么，要解决的问题是什么；用户体验的重要性等，老师还讲了关于软件行业职业的介绍，让我们对自己的未来有进一步详细的规划。第四章讲的是程序语言设计方面的知识。关于它的分类和模式其实都好理解，因为学了C语言的课，对这方面有一定的了解。
通过本周的学习，我了解了编程语言的基本情况与运用，并对正在学习的C语言有了更多的理解。
本周的课上完了上周遗留的软件问题，涉及到了新的一章编程语言，结合上了我们高级语言程序设计的知识。这周老师说的很对，计算机的发展方向不一定就是编程。当初因为好奇与老师，家长的推荐选了计算机专业，但却发现自己对码代码没什么兴趣。本来很迷茫很无助，想转专业又不想离开相处这么久的各位同学舍友。但听老师说了本专业的广泛概括性我有了信心，准备大一打好基础课的基础，找到之后感兴趣的方向。
本周学习到程序设计语言的简介，同时对软件行业职业有了一个大致的了解。本周知识点大体上不是很难，但依然要认真复习(๑⌃ٹ⌃)
第四章主要讲了软件开发过程中程序设计的基本知识和目前常用的程序设计语言，通过这一章的学习，我了解了程序的基本方法和常用的编程模式。
通过本次预习，我了解到软件危机的历史，知道了软件工程的概念，和软件开发所需要的步骤。还有一些编程语言，如c,java等
这周学了软件开发与维护。软件架构描述的对象是直接构成系统的抽象组成。对软件进行了更深入的了解和学习。这对于计算机软件的应用个人觉得比较重要。
这一周老师讲课的速度明显快了很多（时间紧任务重），老师讲的可能没有之前的细，因为我感觉课本上好多知识，老师只是一笔带过，让我感到很无措。马上课就要结束了，但我感觉越到最后我们越不能掉以轻心，坚持。
本周学习了第三张最后一部份知识：软件的开发以及软件行业职业简介。还开始了第四章程序设计语言的学习。随着课程的进行，我对软件的了解也在逐步加深。最近内容会涵盖许多语言，我会更加认真地学习
哎好悲伤啊，之前每次说总结，我还以为是题目写完以后的这个心得，结果这两天突然发现了这个界面，然后里面画满了红色叉叉，好吧，原来这才是总结。。。。这周讲到了软件工程和高级程序设计语言，也就是我们的另外一门课程，c语言。这周的课程比之前简单挺多的，也没有那么抽象，比较好理解。
本周感觉自己对于计算机导论这一门课程的学习热情高涨了不少，但我仍然没有找到一个明确的未来发展方向，还有我希望我能时刻保持强大的意志力和自制性，真的很痛恨浪费时间的自己，也希望不辜负家人和自己的愿景。
本周最大的收获就是明白了计算机从业者的相关方向，对我以后职业规划有着极大的作用。
马上就要期末考试了，感觉自己还有很多东西没有好好学，专业知识没有学多少，本身的课程也落下了，很差劲，本来这些题目都是做过的，小测验却做的那么差，自己要系统的把知识给整理一下，制定一个学习计划。
这周呢，学程序设计的内容。或许是因为学过c语言的原因，理解起来没有那么难。程序设计语言可以说是人与计算机之间的通用语言，通过它人可以操控计算机做自己想做的事。它一样有着自然语言的三个要素：语法，语义，语用。
要期末考了 有点慌。
本章介绍介绍了很多内容，刚刚上完的时候一下不能缓过来，需要自己多去看看书，介绍的内容也有些生疏。但总体来说还是能接受，感觉知识越来越深入了，上课听讲能有不一样的感受，能知道侧重点，是课本上所不能体会到的。
本周开始学习程序设计语言，从程序设计语言的三个元素：语法、语义和语用到程序设计语言的分类和编程模式。让我了解了有关程序设计语言的知识。
这门课也快结课了，回顾一下这个学期的学习情况，感觉并不是太好。一方面可能有刚进入大学的原因，各方面不太适应。另一方面主要还是自己没能收下心好好学习，得调整自己。临近期末，也是该好好复习了。
还不错
这一周，很惭愧来写这个总结，因为上课又没有认真听讲，讲到的程序设计语言，在该门科目课堂上也学过，再次出现在这里，还是发现毫无作用，仍然一无所知，计导这门课程说实话，认真听进去的没有多少，真的很对不起老师，这是个人原因，和老师毫无关系。
本周学习了关于计算机程序设计语言的相关知识，了解到计算机语言与人类语言的相同和不同之处，同时，我们还学习到了程序语言的分类，知道了机器语言、汇编语言、高级语言的区别和联系。对计算机程序编译的过程有了大致的了解。 另外，我们还学习到了编程模式的分类：过程式、面向对象、函数式、说明式。与此同时，我们还学习到了关于高级编程的相关知识，对我认识和了解计算机语言，有非常大的帮助。 本周的课程，为我们以后程序设计打了一个基础，让我们能够对计算机语言充满了好奇与兴趣，非常感谢老师为我们提供这样的机会
这几个星期不知道为什么，感觉活在梦中。仿佛大脑消失。我分析了一下原因：上次高数作业有几题不会做，不会做就一直想，当时越来越清醒，但事后一直昏昏沉沉的。还是不能太专注做好了，偶尔也要放松放松，否则就被强制放松了。
讲课越来越快了，几乎每周一个单元了，所以这次还要写每章总结。不过我倒是觉的这个总结挺好的，可以再次加深我对知识的记忆。 作业越来越多了，这周有电路作业，高数作业，c语言实验。下周还有c语言上机课，觉的快忙不过来了。离考试越来越近了，还是有一点紧张，希望可以看个好成绩，今天突然看到这样一段话，“有多少人在来大学前壮志酬酬想着要保研，考研，想着出国，想着自己的人生规划，梦想一个更好的自己，而现在的要求却只有希望每次作业可以写完，考试不要挂科。” 是啊，有多少人对自己的要求变化了，是觉得自己的那个目标难以实现了吗？可是总会有人在大学中找到想要的自己，为什么不是自己呢？想要更好的自己就要为之努力，不受外部所影响。不忘初心，砥砺前行。为自己加油，每个人都会有一段感到迷茫的时间，你需要做的是快点走出来。
通过这一周的学习，对软件工程有了更深的了解。通过整理这一章的知识点，发现自己还有很多老师上课是只提了一下的知识点没有掌握，对于系统重点也不算清楚，从出题上就看到出来，这一章还是要再多看看，还要再加强了解。
通过这周的学习我知道了编程语言俗称“计算机语言”，种类非常的多，总的来说可以分成机器语言、汇编语言、高级语言三大类。电脑每做的一次动作，一个步骤，都是按照已经用计算机语言编好的程序来执行的，程序是计算机要执行的指令的集合，而程序全部都是用我们所掌握的语言来编写的。所以人们要控制计算机一定要通过计算机语言向计算机发出命令。 目前通用的编程语言有两种形式：汇编语言和高级语言。
软件（中国大陆及香港用语，台湾称作软体，英文：Software）是一系列按照特定顺序组织的计算机数据和指令的集合。一般来讲软件被划分为系统软件、应用软件和介于这两者之间的中间件。软件并不只是包括可以在计算机（这里的计算机是指广义的计算机）上运行的电脑程序，与这些电脑程序相关的文档一般也被认为是软件的一部分。简单的说软件就是程序加文档的集合体。
本周我对程序的编程语言还有计算机的操作系统，手机的操作系统有了一定的了解，而且还对软件工程行业职业的有了一定的认识，但不足的是没有实际的去体验每一个系统的优点和局限性，有机会我一定要试试
本周的课程进行的感觉有点快了点吧。但是这些都是与我们相关的，比如我们讲的软件和程序语言正式我们需要了解和正在学习。 内容有点多了，不太好记，虽然不考试，但还是要下功夫。
编程语言俗称“计算机语言”，种类非常的多，总的来说可以分成机器语言、汇编语言、高级语言三大类。电脑每做的一次动作，一个步骤，都是按照已经用计算机语言编好的程序来执行的，程序是计算机要执行的指令的集合，而程序全部都是用我们所掌握的语言来编写的。所以人们要控制计算机一定要通过计算机语言向计算机发出命令。
大一上的计算机导论课程就快要结束了，却感觉没有学到什么实质性的东西
本周学习了软件及其相关知识。有软件的定义、分类、规模等。软件工程即是开发软件的工程，和建筑工程一样，软件的开发也需要先设计再进行开发，所以软件的设计就变得至关重要。程序设计语言正在学习c语言，这也是最难的一部分。
这周我了解一下软件工程的学科定义，是一门研究工程化方法构建和维护有效的实用的和高质量的软件的学科。它涉及程序设计，数据库，软件开发工具，系统平台，标准及设计模式等方面。还有了解一些软件行业的职业。以及程序设计语言。
3.5软件的开发 3.5.1软件的开发 软件危机：计算机软件的开发维护过程中所遇到的一系列严重问题 软件工程是研究如何以系统性的，规范化的，可定量的过程化方法去开发和维护软件，是一门研究用工程方法构建和维护有效的、实用的和高质量的软件的学科。 它涉及程序设计，数据库，软件开发工具，系统平台，标准及设计模式等方面。 3.5.2软件开发过程 软件开发过程中要明确各阶段的工作目标，实现该目标所必需的工作内容以及达到的标准，只有在上一个阶段的工作完成之后，才能开始下一个阶段的工作。 1. 问题定义——要解决的问题是什么 2. 可行性研究——对上一个阶段所确定的问题是否行得通的解决的方法 3. 需求分析——为了解决这个问题，目标系统需要做什么 4. 总体设计——概括地说，应该如何实现目标系统 5. 详细设计——如何具体地实现这个系统 6. 程序开发 7. 软件测试 8. 软件维护 3.5.3用户界面（UI）与用户体验（UE） 1.用户界面 用户界面是指在用户和软件之间传递、交换信息的媒介，是用户使用软件的综合操作环境，具体是指对软件的人机交互，操作逻辑，操作界面的整体设计。 用户界面设计的三大原则： 置界面于用户的控制之下 减少用户的记忆负担 保持界面的一致性 （1） 用户界面的设计流程 ① 确认目标用户 ② 采集目标用户的习惯交互方式 ③ 提示和引导用户 （2） 一致性原则 ① 设计目标的一致性② 元素外观的一致性③ 人机交互行为的一致性 （3） 可用性原则 ① 可理解② 可达到③ 可控制 2.用户体验 用户体验比商业利益更重要； 任何个性化的前提都是满足人们的需求，这个需求就是做好用户体验； 用户体验是一种在用户使用软件过程中所建立起来的主观感受； 用户体验被认为是软件创新的精髓； 用户体验的设计目标是有用、易用和友好。 3. 经典用户界面设计欣赏——IPHONE （1） 只留一个home键 （2） 使用隐喻 （3） 使用动画 （4） 一目了然，即看即点①删减软件功能②减少输入③避免不必要的交互 （5） 灵活使用手势支持 3.6软件行业职业简介 项目管理类：项目经理、质量保证（QA）工程师 开发类：需求分析师、开发工程师、人机系统开发工程师、系统分析师、系统架构师 测试类：测试工程师、产品测试经理 系统类：网络工程师、基础设施工程师 安全类：网络安全管理员、安全开发工程师 维护类：数据库管理员、系统管理员 销售类：售前工程师、售后技术工程师、系统集成工程师
本周我学到了程序设计语言语言和软件工程，可能是课上没有认真听的缘故，反正我觉着这个星期没学到啥，只能课下在巩固研究了。
通过本次课程，我对于编程语言的认识有了一个深入的了解——我不仅对编程语言的概念有了一个清晰的认识，并且了解了程序设计语言的分类以及编程模式，并且着重了解了几种流行的高级编程语言，如：BASIC 语言，C++语言以及 JAVA 语言。 我获益匪浅
又是一周，接近期末了，这里总结一下计算机导论带给我的东西： 1.计算机导论打开了我的视野，宋老师的很多话深深地打动了我，世界在发展，计算机在发展，我们计算机专业面对的不是不变的领域，而是一个自身也在飞速发展的领域。 2.我知道了学无止境，宋老师给我们打开了一扇大门，但是大门里面只有我们需要的东西，而不全是我们想要的东西，所以，我们需要自己沿着这样的轨迹打开自己更多的大门，书上很多东西都是点到为止，如果不感兴趣的跳过也就算了，总有的东西能勾起我的好奇心，让我一路百度到每一个词汇。 3.学习不是为了考试，考试是为了检测学习成果，高中以来所有的观念都是一切努力为了高考，现在从宋老师这里才知道，原来考试可以说不考就不考，也可以说来个小测验就马上来一个，总之考不考没关系，重在我们是否学到了，老师上课是把想告诉我们的传达给我们，而不是为了最后一张试卷一个分数。 4.安排时间的能力，每周的作业，每周的总结，每章的总结，都是自己课下自己安排时间做。特别是每章总结，这是一个很好的学习方法，虽然是老师要求的，不过这个方法在试了过后发现很有效果，所学的东西如目录一般灌入脑海，很有效果。 可能这周知道了总结可以不用按照套路来，可以随心而谈，所以不知不觉写了这么多。 以上。
程序设计语言也拥有语言的三个元素：语法、语义和语用。程序设计语言可以分为机器语言、汇编语言和高级语言。编程语言的结构包括 顺序、分支、循环。要从代码的可维护性、安全性、功能性、性能等多方面评价评价代码的质量。程序设计语言包含的成分有数据成分、运算成分、控制成分和 传输成分。按照解决问题的模式来分，计算机语言可包括过程式、面向对象、函数式和说明式。用户体验应以用户为中心、以人为本。
本周课上我们学习了有关软件和程序设计语言的有关知识。学习了编程语言的基本知识，代码的相关知识，是对于计算机专业来说很重要的基础知识，但是也比较容易接受，学习过程中也没有遇到太大困难。
通过本周的学习，我已经深刻了解到了软件这一领域的博大精深。软件有分类，有结构，有操作系统，还有软件工程。编写软件还要用各种语言，每种语言又有自己的特性和用途，编程还有几种模式，感觉自己的大脑已经快不够用了，本周上课有点稀里糊涂的，不过好在用周末时间狠狠的复习了一下，已经清晰了许多，这周不行，下周必须努力了。
本周总体来说还不错，感觉通过老师和我自己的共同努力，我能够独立的完成作业，去了解相关知识。
写了总结之后发现不难️️️️️ 快该学完了 好多还不会 emmmmm
（｡ò ∀ ó｡）感觉选择题有点坑了，检查后不知怎么答案就变了，可能是我不小心点了屏幕。这一周学完了计算机软件的相关内容，老师还给我们普及了一些相关行业职业的知识，还讲到了一些关于程序设计语言的知识，我也才深刻理解了语法语义语用，现在回头翻下书，感觉以前找不到的内容一下就找到了呢。
这周学习了程序设计语言相关的知识，了解了除C语言之外的一些编程语言。个人对Ada语言有兴趣，可是为什么市面上都没有相关书籍，难道因为是军用的缘故？！还是先学好C和C++吧。
本周我们学习了软件和编程的相关知识，了解了对象的定义，以及编程语言的常见结构，并且懂得了编程语言和自然语言的区别，同时我们学习了如何评价代码的质量，以及一些计算机编程的相关职业，知道从事计算机编程不论那种职业都需要了解很多关于网线性能维护的知识。对我们未来职业选择很有帮助
这个星期对于我来说可能很有意义吧！上周制订了一些计划，比如早上读英语等等，基本上每天都做到了，感觉好像计划这个东西真的能鞭策我，但是对于计算机导论这门课的学习似乎感觉没怎么变，正如老师说的，书的内容很多，有点懵，对于即将到来的期末考试有点不知所措了，不过刚刚突然想到老师说那个网站上有重点，我想的话，我是不是可以看看，记一记，再把这个APP上的题目多看几遍呢？就这么愉快的决定了，加油！
这周我学习到了有关于计算机语言的知识。明白了计算机语言的分类，并且认识到学好编程只是学好计算机的第一步，更必须了解有关于计算机领域的其他知识才行。
这一周主要是对程序设计语言单元的学习。其实说实话，我课上有些开小差，再加上我们不许带电脑导致对编程方面极度生疏，我对程序设计语言实在不够熟练。我听到老师说我们还是应该看一些课外书扩充视野，我决定在图书馆找一些书充实知识，提升专业能力。
本周学习了有关软件开发的内容中的软件危机，软件开发过程还有用户界面与用户体验中的一些知识，以及程序设计语言中的一些知识，比如程序设计语言的定义，程序设计语言的作用以及它的基本成分等内容
这周主要学了关于软件开发、软件行业简介以及程序设计语言的介绍。软件工程的工作分类有很多，根据工作的分类所要求的能力也是不同的，我们要根据自己的兴趣爱好选择发展的方向。程序设计语言是我们学习的基础，我们需要了解各种设计语言的优缺点。
这周的学习内容很多，有点难，掌握得不是很好。。。希望再接再厉吧
这周写点正经的，没想到老师你还看，那我就不百度了，其实是差不多的，之前展示的都是心得，不是总结。。。 这周讲了软件的开发，软件危机，软件开发过程，还讲了程序的用户界面。具体用苹果公司做了例子。程序语言设计也开了个小头。 用几种语言做了比较讲解。
这周有什么总结的呢？我没有答案。如果要我写的话，我还是提出一些我对现代科技的认识。似乎最近人工智能很火，百度，阿里都在这上面花了很大力气。人工智能将提供更好的服务。如何做好人工智能？我想应该是首先从了解人自身开始，了解人类文明，了解人类天性，了解人的知识体系，了解人的情感体验，了解人的思维逻辑过程……如是等等。人工智能之所以智能，是因为在我们的观念里，一个毫无生命体特征的机器居然能做出像人一样的应答。有人认为人工智能会使人类陷入危机，有一定道理，但我认为，世界潮流，浩浩荡荡，顺之则昌，逆之则亡。随着人类文明的发展，人工智能的发展是必然趋势。任何人也阻挡不了。与其恐惧，不如接纳。首先明确一点，人工智能毕竟是人类发明出来的，人工智能再牛又能怎样。深度学习的确很了不起，但是不给你学习的机会又能怎样？关键在于如何利用。利用计算机不可匹敌的高速计算能力，可以提高人类工作的效率。抓住这一点即可。好吧，上面一切说的并不客观，纯属个人观点。
进度又加快了，软件。。程序设计需要。。编程语言。。。加油吧！？
这周的课学习了一些有关于软件工程还有程序涉及语言的内容，通过本次的学习也使我对于软件工程这个领域有了一个初步的了解，同时也对自己未来的职业有了一个大概的计划。
本周在上课之前老师再次强调了我们现在应该多看，多学，增大学习的广度与深度。我认为自己在这方面做得不够好，虽然自己看起来每天都有事情要做但是其实是自己的效率不够高，很多的时间事实上都是浪费了，到不如利用好这段时间多看一些东西，不要在手机上浪费过多的时间。另外本周的课上知道狐妖学习的是软件开发的相关的知识和相关的职业，虽然我认为这一节没有太多的知识点，但是这一节对于我们将来的学习工作起到了一个介绍的作用，同样具有很大的意义。
本章从计算机软件的定义出发，讨论计算机软件的分类和架构，从软件功能、开发规模和工作方式三个方面对软件进行分类。软件架构设计师软件开发中的重要一环。在软件中，最重要的是操作系统，它使为个人都能使用计算机成为可能。最后介绍了与软件开发相关的职业。身为一个想要以软件工程技术当做今后立足于社会以及工作岗位的同学，我认为认真了解软件方面的知识是相当有必要的。
本周的内容比较多也比较杂乱，不容易理解，总之，还是好好的学习吧，尽自己最大的努力吧。
这一周里我们在短暂的了解软件工程后进入了第四章程序设计语言。在软件工程中我印象最深刻的就是软件开发的一系列过程。在程序设计语言中了解了三种不同的编程语言以及编程的四种模式。从中我简单了解到了什么是程序设计语言。
本周的学习让我加深了对于编程语言的了解，以及更加宏观的角度看待编程，以及编程的优劣，也从一些细节学习了编程语言的很多定义与特点，全面学习了这部分知识，同时对于工程师需要的技能树与知识面也有了一定的了解。加深了我对于计算机以后就业与工作的理解，更加全面的看待一个职业与行业。
本周预习，学了程序设计语言 ，包括其定义及各种内容，涉及知识点多且，复杂有专业性，理解起来难度 较大，需要老师进行讲解，来深入学习，且需要在课后多次复读学习，熟悉且熟练操作，才能掌握它的的内容，达成学习目的。
这周终于没有跟专业课撞了，终于能去听课了，讲真的，之前一直自己看书，感觉知识点繁琐，特别多，去听了课…还是这个感觉。现在有点担心我的期末了X﹏X
本周主要学习了软件与程序设计语言，包括程序设计语言的简介与程序设计语言的分类及其编程模式。程序设计语言是一组用来定义计算机程序的语法规则，其成分有数据、运算、控制、传输，按其模式分类有过程式、面向对象、函数式、说明式。程序设计语言对于优化软硬件起到了巨大作用，这也正是计算机导论的魅力所在。
通过本周对计算机科学导论的学习，我了解到了有关软件设计与架构和操作系统的相关知识，对计算机科学有了更深的了解。
时间过得很快，本学期的课程也快要结束了。我觉得对有些已学的知识还是不能准确的记住与理解，但我会多多自学，复习，尽力把知识点，相关信息，必备技能完全掌握，。相信能学好这门学科，但还需多加努力，也要与其他学科，相辅相成。加油
对已学的知识还是不能准确的记住与理解，希望老师能再多加讲解，我也会在课下多多自学，复习，尽力把知识点，相关信息，必备技能完全掌握，。相信在未来绝对会贯通这门学科。还需多加努力，也要与其他学科，相辅相成。
这周我学到了软件工程的相关知识，有点难，还不是很理解，希望以后的日子里再接再厉。
好无聊。
这是每周总结这是每周总结这是每周总结这是每周总结这是每周总结这是每周总结这是每周总结这是每周总结这是每周总结这是每周总结这是每周总结这是每周总结这是每周总结这是每周总结
这周的知识较上周不同，很好的丰富了我们的知识面，扎实了我们的基础，对我们的计算机学习有极大的帮助我希望老师以后能经常出这样的题，通过做这种题我对计算机学科的兴趣变得越来越大，学习的态度也更加更认真。
这周结束了第三章，软件的知识告一段落了，周三上课的时候展示了部分同学的总结，反省自我，感觉很多时候也是以一个应付差事的态度，希望以后的学习中，能端正态度，对自己负责，既然花了时间去做一件事，就认真踏实，要让它存在价值。
本周学习了软件工程以及软件开发 还有用户界面 以及用户与计算机之间的关系 同时也学习了软件的开发 软件的功能 学习了操作系统 以及操作系统与软件和硬件之间的关系
了解了计算机硬件，高级语言的构造、发展和作用。
参与掌上理工大失物招领项目开发，报名蓝桥杯程序设计竞赛
本周主要学习了计算机程序设计语言的相关知识。首先，讲了程序设计语言的定义、分类、编程模式。然后，讲了程序设计语言的演化过程及四种编程模式：过程式、面向对象、函数式和说明式。然后，介绍了一些常用的高级编程语言。最后，介绍了并行程序设计语言。 因为学习了C语言，所以对于计算机程序语言中的高级编程语言并不陌生，对程序语言的语法、语义、语用，也有一定的了解。不过，对于机器语言、汇编语言，不是很了解，有望今后的进一步学习。
这周学习了软件知识和高级编程语言的内容，随着学习的一步步推进深入，感觉自己已经从最开始的完全不了解不知道到现在知道个大概，某些方面又有一定了解。
这周的学习收获挺多的，从软件到软件工程，以及与软件开发相关的职位，让我对于软件工程有了新的认识，并且更加喜欢这个专业，虽然听说从事这个行业的人工作都很累，但这门课程非常吸引我。对于老师所讲的内容，我尽量去理解，但老师讲的的确有点快，即使我提前看了课本，有时候也很难跟上老师的节奏，还是希望老师可以慢点。最后就是老师在课堂上给我们推荐的软件都比较好，很想用，但可惜我没有电脑。各种适合我们学习的软件，教会我们如何利用好身边的资源，更好的帮助我们学习，为以后的路打好基础。 希望在下次的课堂上能有更多的收获吧！
emmm这一周，学习了软件，软件的分类，不同类型的操作系统，进一步了解到了软件的开发并不容易啊，有点儿被它的职业种类之多惊叹到，不过嘞，我着实感受到这个代码，说它简单，它也就是那么点儿东西，说它难，它也不算简单的哟!革命尚未成功，本人仍需努力。
通过本周的学习，我对软件有了更加深刻的理解，首先我知道了软件是包括程序、数据及其相关文档的集合；第二我还懂得了操作系统是管理计算机硬件和软件资源的程序，同时也是计算机系统的内核与基石；第三我还知道了，Window、Linux都是分时软件；第四我知道了软件架构-从上到下分为程序子系统、业务专用中间件，系统软件。系统的分层包含的规则为可见度，易变性，通用性，层数。操作系统为计算机硬件和应用程序提供了一个交互界软件架构-从上到下分为程序子系统、业务专用中间件，系统软件等等知识点。 转眼间，我们已开课了二个多月，我也由刚开始的懵懵懂懂到现在的略有方向。在学习计算机导论的过程中，我明白计算机是一门大科学，宜专攻一个方面，而不宜贪多。在上课的过程中，宋老师o(^o^)o向我们讲了许多的课外知识：如了解关于计算机学术界和商业界的知识；面向对象是什么；重要资料要备份；软件的API;写程序的时候要加注释；学习使用搜索引擎；学会使用电脑的资源管理器等等。在学习中，我在慢慢成长，等那一树花开。 温故而知新，可以为师矣。我一定要好好复习，争取获得好成绩。
这周我们学习了关于软件方面的知识，让我获益匪浅。以前一直以为软件仅仅是我们平时使用的程序，然而，程序只是他的一部分，他还包括了数据和非常厚的文档，这些文档不仅仅是解释了程序的作用，还帮助了后续的维护升级，让后开的开发者更加能理解你的程序。 软件开发远远没有我们想象的那么简单，在开发之前我们就需要做好前期的准备工作，去调查我们要解决的问题，再研究我们是否可以用程序解决这些问题……我想现在的软件公司都应该是这样的开发流程，总不能让你一个人单枪匹马的就上。 用户界面在一个软件上占了非常重要的地位，一个不人性化的软件一般是不会有太多人去使用的，这就需要我们的开发人员与美工人员的合作，让交互界面更加美观，UI更加赏心悦目。现在，手机上的iOS每次的更新都会推出新的设计规范，android也在5.0时推出了material design，就连Windows10也推出了自己的设计规范，让自带的软件界面都用上了毛玻璃➕扁平化的设计。以此来看，用户界面是非常重要的。 科技倘若和没学结合在一起，一定可以碰撞出闪亮的火花，而不仅仅再是冰冷粗犷的金属质感，也可以包含现代艺术的几何美感，也可以包含陶瓷，玉的温润美感…….也许科技发展到顶峰，便是用现代材料来演绎美学，演绎一种此方宇宙从未有过的原子排列…….
本周结束了第三章的学习，第三章主要向我们介绍了有关软件的一系列知识。我也了解了一些关于软件行业的职业。就比如说架构师，或者维护人员。以后这门课程一定会有很好的发展。
在听课过程中，要放松心情来理解课本上的内容。不要抱着一种紧张的记忆心态来死记硬背，这样很容易造成脑神经疲劳，反而使听课的注意力涣散。 老师讲课结束后，不要急着看书做作业，而应闭上双目，放松后仰头，把刚才听课的重要内容再像放电影一样回味一遍，把老师讲课的内容真正印在脑海中。
操作系统是用户和计算机的接口，同时也是计算机硬件和其他软件的接口。操作系统的功能包括管理计算机系统的硬件、软件及数据资源，控制程序运行，改善人机界面，为其它应用软件提供支持，让计算机系统所有资源最大限度地发挥作用，提供各种形式的用户界面，使用户有一个好的工作环境，为其它软件的开发提供必要的服务和相应的接口等。
本周我更加深入了解了什么是程序设计语言。程序设计语言是一组用来定义计算机程序的语法规则。它是一种被标准化的交流技巧，用来向计算机发出指令。一种计算机语言能够让程序员准确地定义计算机所需要使用的数据，并精确地定义在不同情况下应当采取的行动。
不知不觉，课程已经接近尾声，总的来说呢，还是学到了很多东西的，对计算机整个体系还是有了一个框架的。这个星期呢，我们学习的东西比较多，首先我们知道了什么是软件工程，软件工程就是研究如何开发和维护软件以最好的方法，它涉及程序设计、数据库、软件开发工具、系统平台、标准及设计模式等方面。软件的开发是安阶段进行的，主要分为问题定义、可行性研究、需求分析、系统设计、程序开发、软件测试以及软件维护。当然，用户界面在软件开发中占有非常重要的地位，本章老师给我们介绍了UI和UE。UI（用户界面）是指在用户和软件之间传递、交换信息的媒介，是用户使用软件的综合操作环境，因为我最近在研究前端方面，所以对UI也有一定的了解和自己的想法。UE是用户的主观感受，我觉得苹果在这个方面做的非常好。关于软件行业的职业，老师也为我们介绍了很多，至于我自己呢，我其实比较想当一个前端软件工程师，所以最近在看html，css，js，不过也只是一个想法啦。关于第四章的程序设计语言，我自己也接触了不少，c语言、c++、html，css，js，python，java，php有的正在看，有的打算接触，反正的确也想把这门课程学好，加油！
本周学习了软件工程，知道了软件也有生命周期，了解了软件开发的过程，知道了用户界面设计的重要性，还学习了软件行业相关职称的介绍，最后涉及到了程序设计语言的介绍。本周预习很认真，认真看了书，上课听讲也比较认真。
老师上课讲过多次使用github，前两天我也试了试，全英文，看得有点累，不过我还是想学着使用它。同是也想用小鱼来存放自己的东西。这周我们课程主要讲的还是软件，软件方面的工程十分复杂，而且还可能需要其他专业的知识，软件方面的职业也有许多不同的，但是最重要的还是我们最基础的编程能力。
这周了解了一些关于软件工程的知识，这些东西很有可能是我们大二就要开始学习的东西。通过学习我也是了解到了软件工程不仅仅只有编码，还要了解用户需求，了解软件的开发方向，这对我来说也是一个很好的方向。
今天上课终于体会到了课后总结和每周总结的意义了，原本以为只是当做日志写的，听到对做题时间等数据的分析去探测学生的个性很有趣。23333 接下来是对之前知识的全面复习了，通过这门课确实对计算机体系有了更多的认识，通过对做前面的题目也慢慢掌握了套路，找到了一点感觉。 对于知识的总结很重要，把学到的知识串联起来，再自我消化，能够用自己的方法去理解，去谈。 通过学习中的收获能够给自己激励，不断进步。一步步踏实去走。 在课上和老师学到的不只是专业知识，更多的是一种良好的学习方法。
